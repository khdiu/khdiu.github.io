<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>maven学习</title>
      <link href="/2022/03/20/maven%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/03/20/maven%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven学习"><a href="#Maven学习" class="headerlink" title="Maven学习"></a>Maven学习</h1><h2 id="1-Maven-简介"><a href="#1-Maven-简介" class="headerlink" title="1.Maven 简介"></a>1.Maven 简介</h2><h3 id="1-1传统项目管理状态分析"><a href="#1-1传统项目管理状态分析" class="headerlink" title="1.1传统项目管理状态分析"></a>1.1传统项目管理状态分析</h3><ul><li>jar包不统一、不兼容</li><li>工程升级维护过程繁琐等</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320175040474.png" alt="image-20220320175040474" style="zoom:50%;"><h3 id="1-2-Maven简介"><a href="#1-2-Maven简介" class="headerlink" title="1.2 Maven简介"></a>1.2 Maven简介</h3><ul><li>Maven的本质是一个项目管理工具，将项目开发和管理过程抽象成一个 <strong>项目对象模型（POM）</strong></li><li>POM （Project Object Model）： 项目对象模型</li></ul><p>将一个项目作为一个对象，通过加载pom.xml配置文件，来读取项目信息</p><p>项目对象用到依赖管理（dependency）</p><p>依赖管理从中央仓库提取</p><p>注：框内属于Maven范畴</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320181634919.png" alt="image-20220320181634919" style="zoom:50%;"><h3 id="1-3-Maven的作用"><a href="#1-3-Maven的作用" class="headerlink" title="1.3 Maven的作用"></a>1.3 Maven的作用</h3><ul><li>项目构建：提供标准的、跨平台的 自动化项目构建方式</li><li>依赖管理：方便快捷的管理项目依赖的资源（jar包），避免资源间的版本冲突问题</li><li>统一开发结构：提供标准的、统一的项目结构</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320181957355.png" alt="image-20220320181957355" style="zoom:50%;"><h2 id="2-Maven的下载与安装"><a href="#2-Maven的下载与安装" class="headerlink" title="2. Maven的下载与安装"></a>2. Maven的下载与安装</h2><p>网址：<a href="https://maven.apache.org/download.cgi">Maven – Download Apache Maven</a></p>]]></content>
      
      
      <categories>
          
          <category> project manage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring核心基础</title>
      <link href="/2022/03/20/spring/"/>
      <url>/2022/03/20/spring/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring核心基础"><a href="#Spring核心基础" class="headerlink" title="Spring核心基础"></a>Spring核心基础</h1><p><strong>来源： B站 楠哥教你学java</strong></p><h2 id="1-Spring框架两大核心机制（ioC、AOP）"><a href="#1-Spring框架两大核心机制（ioC、AOP）" class="headerlink" title="1. Spring框架两大核心机制（ioC、AOP）"></a>1. Spring框架两大核心机制（ioC、AOP）</h2><ul><li>ioC （Inversion of control）（控制反转）&#x2F; DI （Dependency Injection） (依赖注入)</li><li>AOP （Aspect oriented programming）（面向切面编程）</li></ul><p><strong>Spring是一个企业级开发框架，是软件设计层面的框架，优势在于可以将应用程序进行分层，开发者可以自主选择组件</strong></p><p>MVC：Strust2、SpringMVC</p><p>ORMapping：Hibernate、Mybatis、Spring Data</p><p>企业级项目特点</p><ul><li>大规模：用户数量多、数据规模大、功能模块众多</li><li>性能和安全要求高</li><li>业务复杂</li><li>灵活多变</li></ul><h3 id="1-1-spring-概述"><a href="#1-1-spring-概述" class="headerlink" title="1.1 spring 概述"></a>1.1 spring 概述</h3><ul><li>Spring是一个企业级开发框架，关注点在于软件设计层面</li><li>spring已经成为java领域的行业标准</li><li>spirng提供了各个层面的解决方案，Spring MVC、Spring Data、Spring Cloud</li><li>Spring两大核心机制：ioC（控制反转）于 AOP（面向切面编程）</li></ul><p>Spring 体系结构：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320161239856.png" alt="image-20220320161239856" style="zoom:50%;"><p><strong>Spring的优点：</strong></p><ul><li>低侵入式设计</li><li>独立于各种应用服务器</li><li>依赖注入特性将组件关系透明化，降低了耦合度</li><li>面向切面编程特性允许将通用任务进行，集中式处理</li><li>第三方框架的良好整合</li></ul><p><strong>集中式处理示例：</strong></p><p>多个任务中统一进行日志信息设置</p><p>多个任务分别设计</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320161921396.png" alt="image-20220320161921396" style="zoom: 33%;"><p><strong>采用AOP</strong></p><p>将三个不同代码的对应位置抽象为 <strong>对象</strong></p><p>封装为对象队多个任务进行集中式处理</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320162229723.png" alt="image-20220320162229723" style="zoom: 25%;"><h3 id="1-2-Spring-IOC"><a href="#1-2-Spring-IOC" class="headerlink" title="1.2 Spring IOC"></a>1.2 Spring IOC</h3><ul><li><p>什么是IOC(控制反转)</p><ul><li>在传统的程序开发中， 需要调用对象时，通常由调用者来创建被调用者的实例，即对象是由调用者主队new出来</li><li>但是在Spring框架中创建对象的工作不再由调用者来完成，而是交给IoC容器来创建，在推送给调用者，整个流程完成反转，所以是控制反转</li></ul><p>ioC特点：解耦合</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220320163036471.png" alt="image-20220320163036471" style="zoom:50%;"></li></ul><h4 id="1-2-1-IOC的使用"><a href="#1-2-1-IOC的使用" class="headerlink" title="1.2.1 IOC的使用"></a>1.2.1 IOC的使用</h4><ul><li>创建Maven工程，pom.xml添加依赖</li></ul>]]></content>
      
      
      <categories>
          
          <category> javaweb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex</title>
      <link href="/2022/03/03/latex/"/>
      <url>/2022/03/03/latex/</url>
      
        <content type="html"><![CDATA[<h1 id="Latex"><a href="#Latex" class="headerlink" title="Latex"></a>Latex</h1><p>Tutorial source: <a href="https://cn.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes#What_is_LaTeX.3F">Learn LaTeX in 30 minutes - Overleaf, 在线LaTeX编辑器</a></p><h2 id="What-is-latex"><a href="#What-is-latex" class="headerlink" title="What is latex"></a>What is latex</h2><p>Latex is a tool used to create professional-looking documents. It is based on the WYSIWYM(<strong>what you see is what you mean</strong>) idea, meaning you only have focus on the contents and the computer will take care of the formatting. Instead of spacing out text on a page to control formatting, as with Microsoft Word or LibreOffice Writer, users can enter and let Latex take care of the rest</p><h2 id="why-learn-Latex"><a href="#why-learn-Latex" class="headerlink" title="why learn Latex"></a>why learn Latex</h2><p><strong>Latex is used all over the world for scientific documents, books, as well as many other forms of publishing.</strong></p><ul><li>It allows users to very quickly tackle the more complicated parts of typesetting,such as <strong>inputting mathematics, creating tables of contents, referencing and creating bibliographies</strong></li><li>It has a consistent layout across all sections</li><li>With huge number of open source packages available, Latex allows users do more things, such as add footnotes, draw schematics, create tables etc.</li></ul><h2 id="Writing-your-first-piece-of-latex"><a href="#Writing-your-first-piece-of-latex" class="headerlink" title="Writing your first piece of latex"></a>Writing your first piece of latex</h2><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;First document. This is a simple example, with no extra parameters or packages included.<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><ul><li><p>The first line of code declares the type of document, know as <strong>class</strong>. The class controls the overall appearance of the document. In this case, the class is article, the simplest and most common Latex class. Other types of documents you may be working on may require different classes such as book or report</p></li><li><p>The \begin{document} and \end{document} tags is body, which means you write your content of document inside the tags</p></li></ul><h3 id="The-preamble-of-a-document"><a href="#The-preamble-of-a-document" class="headerlink" title="The preamble of a document"></a>The preamble of a document</h3><ul><li>Everything before the \begin{document} command is called the <strong>preamble.</strong></li><li>The preamble you define the type of your document</li><li>It includes the language, the package you would like to use and several other elements</li></ul><p>Example:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>12pt, letterpaper<span class="token punctuation">]</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&amp;</span>#123;inputenc<span class="token punctuation">&amp;</span>#125;</code></pre><p>\documentclass[12pt, letterpaper]{article}</p><p>As said before, this defines the type of document. Some additional parameters included in the square brackets can be passed to the command. These parameters must be comma-separated. In the example, the extra parameters set the font size (<strong><code>12pt</code></strong>) and the paper size (<strong><code>letterpaper</code></strong>). Of course other font sizes (<strong><code>9pt</code></strong>, <strong><code>11pt</code></strong>, <strong><code>12pt</code></strong>) can be used, but if none is specified, the default size is <strong><code>10pt</code></strong>. As for the paper size other possible values are <strong><code>a4paper</code></strong> and <strong><code>legalpaper</code></strong>; see the article about <a href="https://cn.overleaf.com/learn/latex/Page_size_and_margins">Page size and margins</a> for more details about this.</p><p>\usepackage[utf8]{inputenc}</p><p>This is the encoding for the document. It can be omitted or changed to another encoding but utf-8 is recommended. Unless you specifically need another encoding, or if you are unsure about it, add this line to the preamble.</p><h3 id="Adding-a-title-author-and-date"><a href="#Adding-a-title-author-and-date" class="headerlink" title="Adding a title, author and date"></a>Adding a title, author and date</h3><p>To add a title, author and date to our document, you must add three lines to the <strong>preamble</strong> (NOT the main body of the document). These lines are</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\title</span><span class="token punctuation">&amp;</span>#123;First document<span class="token punctuation">&amp;</span>#125;</code></pre><p>This is the title.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\author</span><span class="token punctuation">&amp;</span>#123;Hubert Farnsworth<span class="token punctuation">&amp;</span>#125;</code></pre><p>Here you put the name of the Author(s) and, as an optional addition, you can add the next command within the curly braces:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\thanks</span><span class="token punctuation">&amp;</span>#123;funded by the Overleaf team<span class="token punctuation">&amp;</span>#125;</code></pre><p>This can be added after the name of the author, inside the braces of the <strong><code>author</code></strong> command. It will add a superscript and a footnote with the text inside the braces. Useful if you need to thank an institution in your article.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\date</span><span class="token punctuation">&amp;</span>#123;February 2014<span class="token punctuation">&amp;</span>#125;</code></pre><p>You can enter the date manually or use the command <strong><code>\today</code></strong> so the date will be updated automatically at the time you compile your document</p><p>With these lines added, your preamble should look something like this</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>12pt, letterpaper, twoside<span class="token punctuation">]</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&amp;</span>#123;inputenc<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\title</span><span class="token punctuation">&amp;</span>#123;First document<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\author</span><span class="token punctuation">&amp;</span>#123;Hubert Farnsworth <span class="token function selector">\thanks</span><span class="token punctuation">&amp;</span>#123;funded by the Overleaf team<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\date</span><span class="token punctuation">&amp;</span>#123;February 2017<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325222621764.png" alt="image-20220325222621764" style="zoom: 50%;"><h3 id="Adding-comments"><a href="#Adding-comments" class="headerlink" title="Adding comments"></a>Adding comments</h3><p>As with any code you are writing, it can often be useful to include comments. Comments are pieces of text you can include in the document which will not be printed, and will not affect the document in any way. They are useful for organizing your work, taking notes, or commenting out lines&#x2F;sections when debugging. To make a comment in LATEX, simply write a <strong><code>%</code></strong> symbol at the beginning of the line as shown below:</p><pre class=" language-latex"><code class="language-latex"><span class="token comment" spellcheck="true">% This line here is a comment. It will not be printed in the document.</span></code></pre><h3 id="Bold-italics-and-underlining"><a href="#Bold-italics-and-underlining" class="headerlink" title="Bold, italics and underlining"></a>Bold, italics and underlining</h3><p>We will now look at some simple text formatting commands.</p><ul><li><strong>Bold</strong>: Bold text in LaTeX is written with the <strong><code>\textbf&#123;...&#125;</code></strong> command.</li><li><em>Italics</em>: Italicised text in LaTeX is written with the <strong><code>\textit&#123;...&#125;</code></strong> command.</li><li>Underline: Underlined text in LaTeX is written with the <strong><code>\underline&#123;...&#125;</code></strong> command.</li></ul><p>An example of each of these in action is shown below:</p><pre class=" language-latex"><code class="language-latex">Some of the <span class="token function selector">\textbf</span><span class="token punctuation">&amp;</span>#123;greatest<span class="token punctuation">&amp;</span>#125;discoveries in <span class="token function selector">\underline</span><span class="token punctuation">&amp;</span>#123;science<span class="token punctuation">&amp;</span>#125; were made by <span class="token function selector">\textbf</span><span class="token punctuation">&amp;</span>#123;<span class="token function selector">\textit</span><span class="token punctuation">&amp;</span>#123;accident<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#125;.</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325223125251.png" alt="image-20220325223125251" style="zoom:67%;"><p>Another very useful command is the <strong><code>\emph&#123;...&#125;</code></strong> command.</p><p>What the <strong><code>\emph</code></strong> command actually does with its argument depends on the context - inside normal text the emphasized text is italicized, but this behaviour is reversed if used inside an italicized text- see example below:</p><pre class=" language-latex"><code class="language-latex">Some of the greatest <span class="token function selector">\emph</span><span class="token punctuation">&amp;</span>#123;discoveries<span class="token punctuation">&amp;</span>#125; in science were made by accident.<span class="token function selector">\textit</span><span class="token punctuation">&amp;</span>#123;Some of the greatest <span class="token function selector">\emph</span><span class="token punctuation">&amp;</span>#123;discoveries<span class="token punctuation">&amp;</span>#125; in science were made by accident.<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\textbf</span><span class="token punctuation">&amp;</span>#123;Some of the greatest <span class="token function selector">\emph</span><span class="token punctuation">&amp;</span>#123;discoveries<span class="token punctuation">&amp;</span>#125; in science were made by accident.<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325223414435.png" alt="image-20220325223414435" style="zoom:67%;"><h3 id="Adding-images"><a href="#Adding-images" class="headerlink" title="Adding images"></a>Adding images</h3><p>We will now look at how to add images to a LATEX document. On Overleaf, you will first have to <a href="https://cn.overleaf.com/learn/latex/Including_images_in_ShareLaTeX">upload the images</a>.</p><p>Below is a example on how to include a picture.</p><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325223731722.png" alt="image-20220325223731722"></p><ul><li>LATEX can not manage images by itself, so you will need to use a <em>package</em>. Packages can be used to change the default look of your LATEX document, or to allow more functionalities. </li><li>In this case, you need to include an image in our document, so you should use the <strong><code>graphicx</code></strong> package. This package gives new commands, <strong><code>\includegraphics&#123;...&#125;</code></strong> and <strong><code>\graphicspath&#123;...&#125;</code></strong>. To use the <strong><code>graphicx</code></strong> package, include the following line in you preamble: <strong><code>\usepackage&#123;graphicx&#125;</code></strong></li><li>The command <strong><code>\graphicspath&#123; &#123;images/&#125; &#125;</code></strong> tells LATEX that the images are kept in a folder named <em>images</em> under the current directory.</li></ul><p>Attention:</p><p>The <strong><code>\includegraphics&#123;universe&#125;</code></strong> command is the one that actually included the image in the document. <strong>Here <em>universe</em> is the name of the file containing the image without the extension, then <em>universe.PNG</em> becomes <em>universe</em></strong>. The file name of the image should not contain white spaces nor multiple dots.</p><h3 id="Captions-labels-and-references"><a href="#Captions-labels-and-references" class="headerlink" title="Captions, labels and references"></a>Captions, labels and references</h3><p>Images can be captioned, labelled and referenced by means of the <strong><code>figure</code></strong> environment as shown below:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;figure<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">[</span>h<span class="token punctuation">]</span>    <span class="token function selector">\centering</span>    <span class="token function selector">\includegraphics</span><span class="token punctuation">[</span>width=0.25<span class="token function selector">\textwidth</span><span class="token punctuation">]</span><span class="token punctuation">&amp;</span>#123;mesh<span class="token punctuation">&amp;</span>#125;    <span class="token function selector">\caption</span><span class="token punctuation">&amp;</span>#123;a nice plot<span class="token punctuation">&amp;</span>#125;    <span class="token function selector">\label</span><span class="token punctuation">&amp;</span>#123;fig:mesh1<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;figure<span class="token punctuation">&amp;</span>#125;As you can see in the figure <span class="token function selector">\ref</span><span class="token punctuation">&amp;</span>#123;fig:mesh1<span class="token punctuation">&amp;</span>#125;, the function grows near 0. Also, in the page <span class="token function selector">\pageref</span><span class="token punctuation">&amp;</span>#123;fig:mesh1<span class="token punctuation">&amp;</span>#125; is the same example.</code></pre><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325224419082.png" alt="image-20220325224419082"></p><p>There are three important commands in the example:</p><ul><li><p><strong><code>\caption&#123;a nice plot&#125;</code></strong>: As you may expect this command sets the caption for the figure. If you create a list of figures this caption will be used there. You can place it above or below the figure.</p></li><li><p><strong><code>\label&#123;fig:mesh1&#125;</code></strong>: If you need to refer the image within your document, set a label with this command. The label will number the image, and combined with the next command will allow you to reference it.</p></li><li><p><strong><code>\ref&#123;fig:mesh1&#125;</code></strong>: This code will be substituted by the number corresponding to the referenced figure.</p></li></ul><p><strong><u>Attention:</u></strong></p><p>When placing images in a LATEX document, <u>we should always put them inside a <strong><code>figure</code></strong> environment</u> or similar so that LATEX will position the image in a way that fits in with the rest of your text.</p><p><u>If you are using captions and references on your own computer, you will have to compile the document twice for the references to work</u>. Overleaf will do this for you automatically.’*</p><h3 id="Creating-lists-in-LATEX"><a href="#Creating-lists-in-LATEX" class="headerlink" title="Creating lists in LATEX"></a>Creating lists in LATEX</h3><p>Lists are very simple to create in LATEX. You can create lists using different list <em>environments</em>. Environments are sections of our document that you want to present in a different way to the rest of the document. They start with a <strong><code>\begin&#123;...&#125;</code></strong> command and end with an <strong><code>\end&#123;...&#125;</code></strong> command.</p><ul><li>There are two main different types of lists, <em>ordered</em> lists and <em>unordered</em> lists. Each will use a different environment.</li></ul><h4 id="Unordered-lists"><a href="#Unordered-lists" class="headerlink" title="Unordered lists"></a>Unordered lists</h4><p>Unordered lists are produced by the <strong><code>itemize</code></strong> environment. Each entry must be preceded by the control sequence <strong><code>\item</code></strong> as shown below.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;itemize<span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\item</span> The individual entries are indicated with a black dot, a so-called bullet.  <span class="token function selector">\item</span> The text in the entries may be of any length.<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;itemize<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325225202690.png" alt="image-20220325225202690" style="zoom:67%;"><p>By default the individual entries are indicated with a black dot, so-called bullet. The text in the entries may be of any length.</p><h4 id="Ordered-lists"><a href="#Ordered-lists" class="headerlink" title="Ordered lists"></a>Ordered lists</h4><p>Ordered list have the same syntax inside a different environment. We make ordered lists using the <strong><code>enumerate</code></strong> environment:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;enumerate<span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\item</span> This is the first entry in our list  <span class="token function selector">\item</span> The list numbers increase with each entry we add<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;enumerate<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325225630900.png" alt="image-20220325225630900" style="zoom:67%;"><p>As with unordered lists, <u>each entry must be preceded by the control sequence <strong><code>\item</code></strong></u>, which will automatically generate the number labelling the item. The enumerate labels consists of sequential numbers starting at one.</p><p>List example:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325225455614.png" alt="image-20220325225455614" style="zoom:80%;"><h3 id="Adding-math-to-LATEX"><a href="#Adding-math-to-LATEX" class="headerlink" title="Adding math to LATEX"></a>Adding math to LATEX</h3><ul><li><p>One of the main advantages of LATEX is the ease at which mathematical expressions can be written. </p></li><li><p>LATEX allows two writing modes for mathematical expressions: the <strong>inline</strong> mode and the <strong>display</strong> mode.</p><ol><li>The first one is used to write formulas that are part of a text</li><li>The second one is used to write expressions that are not part of a text or paragraph, and are therefore put on separate lines.</li></ol></li><li><p>Let’s see an example of the <strong>inline</strong> mode:</p></li></ul><pre class=" language-latex"><code class="language-latex">In physics, the mass-energy equivalence is stated by the equation <span class="token equation string">$E=mc^2$</span>, discovered in 1905 by Albert Einstein.</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325230111988.png" alt="image-20220325230111988" style="zoom:67%;"><p>To put your equations in <em>inline</em> mode use one of these delimiters: <strong><code>\( ... \)</code></strong>, <strong><code>$ ... $</code></strong> or <strong><code>\begin&#123;math&#125; ... \end&#123;math&#125;</code></strong>. They all work and the choice is a matter of taste.</p><ul><li>The <em>displayed</em> mode has two versions: numbered and unnumbered.</li></ul><pre class=" language-latex"><code class="language-latex">The mass-energy equivalence is described by the famous equation<span class="token equation string">\[ E=mc^2 \]</span>discovered in 1905 by Albert Einstein. In natural units (<span class="token equation string">$c = 1$</span>), the formula expresses the identity<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;equation<span class="token punctuation">&amp;</span>#125;E=m<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;equation<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325230250463.png" alt="image-20220325230250463" style="zoom:50%;"><p>To print your equations in <em>display</em> mode use one of these delimiters: <strong><code>\[ ... \]</code></strong>, <strong><code>\begin&#123;displaymath&#125; ... \end&#123;displaymath&#125;</code></strong> or <strong><code>\begin&#123;equation&#125; ... \end&#123;equation&#125;</code></strong>. <code>$$ ... $$</code> is <strong><a href="https://texfaq.org/FAQ-dolldoll">discouraged</a></strong> as it can give inconsistent spacing, and may not work well with some math packages.</p><p>This is a example:</p><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325230733686.png" alt="image-20220325230733686"></p><p>Many math mode commands require the <strong><code>amsmath</code></strong> package, so be sure to include it when writing math. An example is shown below of some basic math mode commands.</p><pre class=" language-latex"><code class="language-latex">Subscripts in math mode are written as <span class="token equation string">$a_b$</span> and superscripts are written as <span class="token equation string">$a^b$</span>. These can be combined an nested to write expressions such as<span class="token equation string">\[ T^&amp;#123;i_1 i_2 <span class="token equation-command regex">\dots</span> i_p&amp;#125;_&amp;#123;j_1 j_2 <span class="token equation-command regex">\dots</span> j_q&amp;#125; = T(x^&amp;#123;i_1&amp;#125;,<span class="token equation-command regex">\dots</span>,x^&amp;#123;i_p&amp;#125;,e_&amp;#123;j_1&amp;#125;,<span class="token equation-command regex">\dots</span>,e_&amp;#123;j_q&amp;#125;) \]</span> We write integrals using <span class="token equation string">$<span class="token equation-command regex">\int</span>$</span> and fractions using <span class="token equation string">$<span class="token equation-command regex">\frac</span>&amp;#123;a&amp;#125;&amp;#123;b&amp;#125;$</span>. Limits are placed on integrals using superscripts and subscripts:<span class="token equation string">\[ <span class="token equation-command regex">\int</span>_0^1 <span class="token equation-command regex">\frac</span>&amp;#123;dx&amp;#125;&amp;#123;e^x&amp;#125; =  <span class="token equation-command regex">\frac</span>&amp;#123;e-1&amp;#125;&amp;#123;e&amp;#125; \]</span>Lower case Greek letters are written as <span class="token equation string">$<span class="token equation-command regex">\omega</span>$</span> <span class="token equation string">$<span class="token equation-command regex">\delta</span>$</span> etc. while upper case Greek letters are written as <span class="token equation string">$<span class="token equation-command regex">\Omega</span>$</span> <span class="token equation string">$<span class="token equation-command regex">\Delta</span>$</span>.Mathematical operators are prefixed with a backslash as <span class="token equation string">$<span class="token equation-command regex">\sin</span>(<span class="token equation-command regex">\beta</span>)$</span>, <span class="token equation string">$<span class="token equation-command regex">\cos</span>(<span class="token equation-command regex">\alpha</span>)$</span>, <span class="token equation string">$<span class="token equation-command regex">\log</span>(x)$</span> etc.</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325231048986.png" alt="image-20220325231048986" style="zoom:50%;"><p>This is a example:</p><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220325231127103.png" alt="image-20220325231127103"></p><h4 id="Mathematical-expressions"><a href="#Mathematical-expressions" class="headerlink" title="Mathematical expressions"></a>Mathematical expressions</h4><p>Writing basic equations in LaTeX is straightforward, for example:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;The well known Pythagorean theorem <span class="token equation string">\(x^2 + y^2 = z^2\)</span> was proved to be invalid for other exponents. Meaning the next equation has no integer solutions:<span class="token equation string">\[ x^n + y^n = z^n \]</span><span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326103609962.png" alt="image-20220326103609962" style="zoom:67%;"><p>As you see, the way the equations are displayed depends on the delimiter, in this case <code>\[...\]</code> and <code>\(...\)</code>.</p><h5 id="Mathematical-modes"><a href="#Mathematical-modes" class="headerlink" title="Mathematical modes"></a>Mathematical modes</h5><p>LATEX allows two writing modes for mathematical expressions: the <em>inline</em> math mode and <em>display</em> math mode:</p><ul><li><em>inline</em> math mode is used to write formulas that are part of a paragraph</li><li><em>display</em> math mode is used to write expressions that are not part of a paragraph, and are therefore put on separate lines</li></ul><h6 id="Inline-math-mode"><a href="#Inline-math-mode" class="headerlink" title="Inline math mode"></a>Inline math mode</h6><p>You can use any of these “delimiters” to typeset your math in inline mode:</p><ul><li><code>\(...\)</code></li><li><code>$...$</code></li><li><code>\begin&#123;math&#125;...\end&#123;math&#125;</code>.</li></ul><h6 id="Display-math-modes"><a href="#Display-math-modes" class="headerlink" title="Display math modes"></a>Display math modes</h6><p>Use one of these constructions to typeset maths in display mode:</p><ul><li><code>\[...\]</code></li><li><code>\begin&#123;displaymath&#125;...\end&#123;displaymath&#125;</code></li><li><code>\begin&#123;equation&#125;...\end&#123;equation&#125;</code></li></ul><h5 id="Reference-guide"><a href="#Reference-guide" class="headerlink" title="Reference guide"></a>Reference guide</h5><p>Below is a table with some common maths symbols. For a more complete list see the <a href="https://cn.overleaf.com/learn/latex/List_of_Greek_letters_and_math_symbols">List of Greek letters and math symbols</a></p><p><img src="/2022/03/03/latex/Users/khdiu\AppData\Roaming\Typora\typora-user-images\image-20220326110644346.png" alt="image-20220326110644346"></p><h4 id="Subscripts-and-superscripts"><a href="#Subscripts-and-superscripts" class="headerlink" title="Subscripts and superscripts"></a>Subscripts and superscripts</h4><p>The use of superscripts and subscripts is very common in mathematical expressions involving exponents, indexes, and in some special operators. This article explains how to write superscripts and subscripts in simple expressions, integrals, summations and so forth.</p><h5 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h5><p>Definite integrals are some of the most common mathematical expressions, so let’s see an example:</p><pre class=" language-latex"><code class="language-latex"><span class="token equation string">\[ <span class="token equation-command regex">\int</span><span class="token equation-command regex">\limits</span>_0^1 x^2 + y^2 <span class="token equation-command regex">\ </span>dx \]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326104555170.png" alt="image-20220326104555170" style="zoom:50%;"><ul><li>By convention, superscripts and subscripts in LATEX are created using the characters <code>^</code> and <code>_</code> respectively</li><li>The integral (<code>\int</code>) included in the example above where <code>_</code> is used to set the lower limit and the <code>^</code> for the upper limit.</li></ul><h5 id="Operators-using-subscripts-and-superscriptss"><a href="#Operators-using-subscripts-and-superscriptss" class="headerlink" title="Operators using subscripts and superscriptss"></a>Operators using subscripts and superscriptss</h5><p>Some mathematical operators may require subscripts and superscripts. The most frequent cases are those of the integral <code>\int</code> (check the <a href="https://cn.overleaf.com/learn/latex/Subscripts_and_superscripts#Introduction">introduction</a>) and the summation (<code>\sum</code>) operators, whose bounds are typeset precisely with subscripts and superscripts.</p><pre class=" language-latex"><code class="language-latex"><span class="token equation string">\[ <span class="token equation-command regex">\sum</span>_&amp;#123;i=1&amp;#125;^&amp;#123;<span class="token equation-command regex">\infty</span>&amp;#125; <span class="token equation-command regex">\frac</span>&amp;#123;1&amp;#125;&amp;#123;n^s&amp;#125; = <span class="token equation-command regex">\prod</span>_p <span class="token equation-command regex">\frac</span>&amp;#123;1&amp;#125;&amp;#123;1 - p^&amp;#123;-s&amp;#125;&amp;#125; \]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326105250810.png" alt="image-20220326105250810" style="zoom:67%;"><p>This is a example:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326105531564.png" alt="image-20220326105531564" style="zoom:80%;"><h5 id="Reference-guide-1"><a href="#Reference-guide-1" class="headerlink" title="Reference guide"></a>Reference guide</h5><img src="/2022/03/03/latex/Users/khdiu\AppData\Roaming\Typora\typora-user-images\image-20220326111618554.png" alt="image-20220326111618554" style="zoom:67%;"><p>See official documentation for details</p><h4 id="Brackets-and-Parentheses"><a href="#Brackets-and-Parentheses" class="headerlink" title="Brackets and Parentheses"></a>Brackets and Parentheses</h4><h5 id="Introduction-1"><a href="#Introduction-1" class="headerlink" title="Introduction"></a>Introduction</h5><p>Parentheses and brackets are very common in mathematical formulas. You can easily control the size and style of brackets in LATEX; this article explains how.</p><p>Here’s an table of listing some common math braces and parentheses used in LATEX:</p><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326112502038.png" alt="image-20220326112502038"></p><h5 id="Reference-guide-2"><a href="#Reference-guide-2" class="headerlink" title="Reference guide"></a>Reference guide</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326112754891.png" alt="image-20220326112754891" style="zoom: 50%;"><h4 id="Fractions-and-Binomials"><a href="#Fractions-and-Binomials" class="headerlink" title="Fractions and Binomials"></a>Fractions and Binomials</h4><h5 id="Introduction-2"><a href="#Introduction-2" class="headerlink" title="Introduction"></a>Introduction</h5><p>Using fractions and binomial coefficients in an expression is straightforward.</p><pre class=" language-latex"><code class="language-latex">The binomial coefficient is defined by the next expression:<span class="token equation string">\[    <span class="token equation-command regex">\binom</span>&amp;#123;n&amp;#125;&amp;#123;k&amp;#125; = <span class="token equation-command regex">\frac</span>&amp;#123;n!&amp;#125;&amp;#123;k!(n-k)!&amp;#125;\]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326113133474.png" alt="image-20220326113133474" style="zoom:67%;"><p><u>For these commands to work you must import the package <strong>amsmath</strong> by adding the next line to the preamble of your file</u></p><h5 id="Displaying-fractions"><a href="#Displaying-fractions" class="headerlink" title="Displaying fractions"></a>Displaying fractions</h5><p>The appearance of the fraction may change depending on the context</p><pre class=" language-latex"><code class="language-latex">Fractions can be used alongside the text, for example <span class="token equation string">\( <span class="token equation-command regex">\frac</span>&amp;#123;1&amp;#125;&amp;#123;2&amp;#125; \)</span>, and in a mathematical display style like the one below:<span class="token equation string">\[<span class="token equation-command regex">\frac</span>&amp;#123;1&amp;#125;&amp;#123;2&amp;#125;\]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326113335523.png" alt="image-20220326113335523" style="zoom:67%;"><h5 id="Continued-fractions"><a href="#Continued-fractions" class="headerlink" title="Continued fractions"></a>Continued fractions</h5><p>The usage of fractions is quite flexible, they can be nested to obtain more complex expressions.</p><pre class=" language-latex"><code class="language-latex">The fractions can be nested<span class="token equation string">\[ <span class="token equation-command regex">\frac</span>&amp;#123;1+<span class="token equation-command regex">\frac</span>&amp;#123;a&amp;#125;&amp;#123;b&amp;#125;&amp;#125;&amp;#123;1+<span class="token equation-command regex">\frac</span>&amp;#123;1&amp;#125;&amp;#123;1+<span class="token equation-command regex">\frac</span>&amp;#123;1&amp;#125;&amp;#123;a&amp;#125;&amp;#125;&amp;#125; \]</span>Now a wild example<span class="token equation string">\[  a_0+<span class="token equation-command regex">\cfrac</span>&amp;#123;1&amp;#125;&amp;#123;a_1+<span class="token equation-command regex">\cfrac</span>&amp;#123;1&amp;#125;&amp;#123;a_2+<span class="token equation-command regex">\cfrac</span>&amp;#123;1&amp;#125;&amp;#123;a_3+<span class="token equation-command regex">\cdots</span>&amp;#125;&amp;#125;&amp;#125;\]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326113510982.png" alt="image-20220326113510982" style="zoom:67%;"><ul><li>The second fraction displayed in the previous example uses the command <code>\cfrac&#123;&#125;&#123;&#125;</code> provided by the package <strong>amsmath</strong> (see the <a href="https://cn.overleaf.com/learn/latex/Fractions_and_Binomials#Introduction">introduction</a>), this command displays nested fractions without changing the size of the font.</li></ul><h5 id="Binomial-coefficients"><a href="#Binomial-coefficients" class="headerlink" title="Binomial coefficients"></a>Binomial coefficients</h5><p>Binomial coefficients are common elements in mathematical expressions, the command to display them in LATEX is very similar to the one used for fractions.</p><pre class=" language-latex"><code class="language-latex">The binomial coefficient is defined by the next expression:<span class="token equation string">\[    <span class="token equation-command regex">\binom</span>&amp;#123;n&amp;#125;&amp;#123;k&amp;#125; = <span class="token equation-command regex">\frac</span>&amp;#123;n!&amp;#125;&amp;#123;k!(n-k)!&amp;#125;\]</span>And of course this command can be included in the normal text flow <span class="token equation string">\(<span class="token equation-command regex">\binom</span>&amp;#123;n&amp;#125;&amp;#123;k&amp;#125;\)</span>.</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326113745679.png" alt="image-20220326113745679" style="zoom: 50%;"><h4 id="Aligning-equations-with-amsmath"><a href="#Aligning-equations-with-amsmath" class="headerlink" title="Aligning equations with amsmath"></a>Aligning equations with amsmath</h4><h5 id="Introduction-3"><a href="#Introduction-3" class="headerlink" title="Introduction"></a>Introduction</h5><p>The <code>amsmath</code> package provides a handful of options for displaying equations. You can choose the layout that better suits your document, even if the equations are really long, or if you have to include several equations in the same line.</p><p>The standard LaTeX tools for equations may lack some flexibility, causing overlapping or even trimming part of the equation when it’s too long. We can surpass such difficulties by using the <code>amsmath</code> package, which can be added to preamble of your document using <code>\usepackage&#123;amsmath&#125;</code>.</p><p>Let’s start with a basic example:</p><pre class=" language-latex"><code class="language-latex"> <span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;equation<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\label</span><span class="token punctuation">&amp;</span>#123;eq1<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;split<span class="token punctuation">&amp;</span>#125;A <span class="token punctuation">&amp;</span> = <span class="token function selector">\frac</span><span class="token punctuation">&amp;</span>#123;<span class="token function selector">\pi</span> r^2<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;2<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\\</span> <span class="token punctuation">&amp;</span> = <span class="token function selector">\frac</span><span class="token punctuation">&amp;</span>#123;1<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;2<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\pi</span> r^2<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;split<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;equation<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326114257357.png" alt="image-20220326114257357" style="zoom: 67%;"><ul><li>You have to wrap your equation in the <code>equation</code> environment if you want it to be numbered, use <code>equation*</code> (with an asterisk) otherwise.</li><li>Inside the <code>equation</code> environment, use the <code>split</code> environment to split the equations into smaller pieces, these smaller pieces will be aligned accordingly.</li><li>The double backslash works as a newline character. Use the ampersand character <code>&amp;</code>, to set the points where the equations are vertically aligned.</li></ul><h5 id="Writing-a-single-equation"><a href="#Writing-a-single-equation" class="headerlink" title="Writing a single equation"></a>Writing a single equation</h5><p>To display a single equation, as mentioned in the introduction, <strong>you have to use the <code>equation*</code> or <code>equation</code> environment, depending on <u>whether you want the equation to be numbered or not</u></strong>. Additionally, you might add a label for future reference within the document.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;equation<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\label</span><span class="token punctuation">&amp;</span>#123;eu_eqn<span class="token punctuation">&amp;</span>#125;e^<span class="token punctuation">&amp;</span>#123;<span class="token function selector">\pi</span> i<span class="token punctuation">&amp;</span>#125; + 1 = 0<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;equation<span class="token punctuation">&amp;</span>#125;The beautiful equation <span class="token function selector">\ref</span><span class="token punctuation">&amp;</span>#123;eu_eqn<span class="token punctuation">&amp;</span>#125; is known as the Euler equation.</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326114601063.png" alt="image-20220326114601063" style="zoom:67%;"><h5 id="Displaying-long-equations"><a href="#Displaying-long-equations" class="headerlink" title="Displaying long equations"></a>Displaying long equations</h5><p>For equations longer than a line use the <code>multline</code> environment. Insert a double backslash to set a point for the equation to be broken. The first part will be aligned to the left and the second part will be displayed in the next line and aligned to the right.</p><p><strong><u>Again, the use of an asterisk * in the environment name determines whether the equation is numbered or not.</u></strong></p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;multline*<span class="token punctuation">&amp;</span>#125;p(x) = 3x^6 + 14x^5y + 590x^4y^2 + 19x^3y^3<span class="token function selector">\\</span> - 12x^2y^4 - 12xy^5 + 2y^6 - a^3b^3<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;multline*<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326115024271.png" alt="image-20220326115024271" style="zoom:67%;"><h5 id="Splitting-and-aligning-an-equation"><a href="#Splitting-and-aligning-an-equation" class="headerlink" title="Splitting and aligning an equation"></a>Splitting and aligning an equation</h5><p><em>Split</em> is very similar to <em>multline</em>. Use the <em>split</em> environment to break an equation and to align it in columns, just as if the parts of the equation were in a table. This environment must be used inside an <em>equation</em> environment. For an example check the introduction of this document.</p><h5 id="Aligning-several-equations"><a href="#Aligning-several-equations" class="headerlink" title="Aligning several equations"></a>Aligning several equations</h5><p>If there are several equations that you need to align vertically, the <em>align</em> environment will do it:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125; 2x - 5y <span class="token punctuation">&amp;</span>=  8 <span class="token function selector">\\</span> 3x + 9y <span class="token punctuation">&amp;</span>=  -12<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326115218776.png" alt="image-20220326115218776" style="zoom:67%;"><p>Usually the binary operators (<code>&gt;</code>, <code>&lt;</code> and <code>=</code>) are the ones aligned for a nice-looking document.</p><p>As mentioned before, the ampersand character <code>&amp;</code> determines where the equations align. Let’s check a more complex example:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;x<span class="token punctuation">&amp;</span>=y           <span class="token punctuation">&amp;</span>  w <span class="token punctuation">&amp;</span>=z              <span class="token punctuation">&amp;</span>  a<span class="token punctuation">&amp;</span>=b+c<span class="token function selector">\\</span>2x<span class="token punctuation">&amp;</span>=-y         <span class="token punctuation">&amp;</span>  3w<span class="token punctuation">&amp;</span>=<span class="token function selector">\frac</span><span class="token punctuation">&amp;</span>#123;1<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;2<span class="token punctuation">&amp;</span>#125;z   <span class="token punctuation">&amp;</span>  a<span class="token punctuation">&amp;</span>=b<span class="token function selector">\\</span>-4 + 5x<span class="token punctuation">&amp;</span>=2+y   <span class="token punctuation">&amp;</span>  w+2<span class="token punctuation">&amp;</span>=-1+w          <span class="token punctuation">&amp;</span>  ab<span class="token punctuation">&amp;</span>=cb<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326115341639.png" alt="image-20220326115341639" style="zoom:67%;"><p>Here we arrange the equations in three columns. LaTeX assumes that each equation consists of two parts separated by an <code>&amp;</code> and that each equation is separated from the one before by an <code>&amp;</code>.</p><p><strong><u>Again, use * to toggle the equation numbering. When numbering is allowed, you can label each row individually.</u></strong></p><h5 id="Grouping-and-centering-equations"><a href="#Grouping-and-centering-equations" class="headerlink" title="Grouping and centering equations"></a>Grouping and centering equations</h5><p>If you just need to display a set of consecutive equations, centered and with no alignment whatsoever, use the <code>gather</code> environment. The asterisk trick to set&#x2F;unset the numbering of equations also works here.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;gather*<span class="token punctuation">&amp;</span>#125; 2x - 5y =  8 <span class="token function selector">\\</span> 3x^2 + 9y =  3a + c<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;gather*<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326115604652.png" alt="image-20220326115604652" style="zoom:67%;"><h5 id="Complete-example"><a href="#Complete-example" class="headerlink" title="Complete example"></a>Complete example</h5><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326115711140.png" alt="image-20220326115711140"></p><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326115735254.png" alt="image-20220326115735254"></p><h4 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h4><p>Characters in mathematical mode are usually shown in italics, but sometimes certain function names require different formatting which can be accomplished by using operators defined in LATEX.</p><h5 id="Introduction-4"><a href="#Introduction-4" class="headerlink" title="Introduction"></a>Introduction</h5><p>Trigonometrical functions, logarithms, and others can be written in a document by means of some special commands, as demonstrated in the following example:</p><pre class=" language-latex"><code class="language-latex">Examples of mathematical operators:<span class="token equation string">\[    <span class="token equation-command regex">\sin</span>(a + b) = <span class="token equation-command regex">\sin</span> a <span class="token equation-command regex">\cos</span> b + <span class="token equation-command regex">\cos</span> b <span class="token equation-command regex">\sin</span> a.\]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326135505371.png" alt="image-20220326135505371" style="zoom:67%;"><h5 id="Operators-in-different-contexts"><a href="#Operators-in-different-contexts" class="headerlink" title="Operators in different contexts"></a>Operators in different contexts</h5><p>Some operators can take parameters that are handled in a special way, for instance, limits.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">&amp;</span>#123;amsmath<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;Testing notation for limits<span class="token equation string">\[    <span class="token equation-command regex">\lim</span>_&amp;#123;h <span class="token equation-command regex">\to</span> 0 &amp;#125; <span class="token equation-command regex">\frac</span>&amp;#123;f(x+h)-f(x)&amp;#125;&amp;#123;h&amp;#125;.\]</span>This operator changes when used alongside text <span class="token equation string">\( <span class="token equation-command regex">\lim</span>_&amp;#123;h <span class="token equation-command regex">\to</span> 0&amp;#125; (x-h) \)</span>.<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326135822885.png" alt="image-20220326135822885" style="zoom:67%;"><ul><li>The package <code>amsmath</code> is needed for the macro <code>\to</code>; without this package, <code>\rightarrow</code> has to be used.</li><li>Notice how the limit declaration can include a subscript. See the <a href="https://cn.overleaf.com/learn/latex/Operators#Reference_guide">reference guide</a> for a complete list of available operators.</li></ul><h5 id="Defining-your-own-operators"><a href="#Defining-your-own-operators" class="headerlink" title="Defining your own operators"></a>Defining your own operators</h5><p>If you need to add a personalized operator to be displayed in Roman font instead of italics use <code>\DeclareMathOperator</code></p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">&amp;</span>#123;amsmath<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\DeclareMathOperator</span><span class="token punctuation">&amp;</span>#123;<span class="token function selector">\arctg</span><span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;arctg<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;User-defined operator for arctangent:<span class="token equation string">\[    <span class="token equation-command regex">\arctg</span> <span class="token equation-command regex">\frac</span>&amp;#123;<span class="token equation-command regex">\pi</span>&amp;#125;&amp;#123;3&amp;#125; = <span class="token equation-command regex">\sqrt</span>&amp;#123;3&amp;#125;.\]</span><span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326140134834.png" alt="image-20220326140134834" style="zoom:67%;"><ul><li>The command <code>\DeclareMathOperator</code> takes two parameters, the first one is the name of the new operator and the second one is the text to be displayed. For this command to work you have to import the package <strong>amsmath</strong> in the preamble with</li></ul><h5 id="Reference-Guide"><a href="#Reference-Guide" class="headerlink" title="Reference Guide"></a>Reference Guide</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326140741007.png" alt="image-20220326140741007" style="zoom: 33%;"><h4 id="Spacing-in-math-mode"><a href="#Spacing-in-math-mode" class="headerlink" title="Spacing in math mode"></a>Spacing in math mode</h4><p>This article explains how to insert spaces of different widths in math mode.</p><h5 id="Introduction-5"><a href="#Introduction-5" class="headerlink" title="Introduction"></a>Introduction</h5><p>Adjusting (La)TeX’s default math mode spacing can be useful in certain situations; let’s see an example:</p><pre class=" language-latex"><code class="language-latex"> <span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\usepackage</span><span class="token punctuation">&amp;</span>#123;amssymb<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125; Assume we have the next sets <span class="token equation string">\[ S = <span class="token equation-command regex">\&amp;</span>#123; z <span class="token equation-command regex">\in</span> <span class="token equation-command regex">\mathbb</span>&amp;#123;C&amp;#125;<span class="token equation-command regex">\,</span> |<span class="token equation-command regex">\,</span> |z| &lt; 1 <span class="token equation-command regex">\&amp;</span>#125; <span class="token equation-command regex">\quad</span> <span class="token equation-command regex">\textrm</span>&amp;#123;and&amp;#125; <span class="token equation-command regex">\quad</span> S_2=<span class="token equation-command regex">\partial</span>&amp;#123;S&amp;#125; \]</span> <span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326140933191.png" alt="image-20220326140933191" style="zoom:67%;"><h5 id="Spaces"><a href="#Spaces" class="headerlink" title="Spaces"></a>Spaces</h5><p>The example below contains a complete list of spaces inserted using various commands and demonstrates their effect on the typeset math.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">&amp;</span>#123;amsmath<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;Spaces in mathematical mode.<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\!</span> +3x<span class="token function selector">\!</span> +2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2+3x+2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\,</span> +3x<span class="token function selector">\,</span> +2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\:</span> +3x<span class="token function selector">\:</span> +2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\;</span> +3x<span class="token function selector">\;</span> +2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\ </span>+3x<span class="token function selector">\ </span>+2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\quad</span> +3x<span class="token function selector">\quad</span> +2 <span class="token function selector">\\</span>f(x) <span class="token punctuation">&amp;</span>= x^2<span class="token function selector">\qquad</span> +3x<span class="token function selector">\qquad</span> +2<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326141213786.png" alt="image-20220326141213786" style="zoom:67%;"><h5 id="Operators-spacing"><a href="#Operators-spacing" class="headerlink" title="Operators spacing"></a>Operators spacing</h5><p>Spacing around operators and relations in math mode are governed by specific skip widths:</p><ul><li><code>\thinmuskip</code> (by default it is equal to 3 mu)</li><li><code>\medmuskip</code> (by default it is equal to 4 mu)</li><li><code>\thickmuskip</code> (by default it is equal to 5 mu)</li></ul><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;3ax+4by=5cz<span class="token function selector">\\</span>3ax&lt;4by+5cz<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326141528497.png" alt="image-20220326141528497" style="zoom:67%;"><p><strong>For relational operators, such as &lt;&lt;, &gt;&gt; and &#x3D;&#x3D;, LATEX establishes <code>\thickmuskip</code> space. But for binary operators such as ++, −− and ××, the <code>\medmuskip</code> space is set. The difference is almost unnoticeable.</strong></p><h5 id="User-defined-binary-and-relational-operators"><a href="#User-defined-binary-and-relational-operators" class="headerlink" title="User-defined binary and relational operators"></a>User-defined binary and relational operators</h5><p>You can force the spacing used in binary or relational operators, so you can <a href="https://cn.overleaf.com/learn/latex/Commands">define your own</a>.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;34x^2a <span class="token function selector">\mathbin</span><span class="token punctuation">&amp;</span>#123;<span class="token function selector">\#</span><span class="token punctuation">&amp;</span>#125; 13bc <span class="token function selector">\\</span>34x^2a <span class="token function selector">\mathrel</span><span class="token punctuation">&amp;</span>#123;<span class="token function selector">\#</span><span class="token punctuation">&amp;</span>#125; 13bc<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326141658804.png" alt="image-20220326141658804" style="zoom:67%;"><p>The previous example sets a particular spacing before and after <code>#</code> by using <code>\mathrel</code> (relational) and <code>\mathbin</code> (binary) commands.</p><h5 id="Reference-guide-3"><a href="#Reference-guide-3" class="headerlink" title="Reference guide"></a>Reference guide</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326141802010.png" alt="image-20220326141802010" style="zoom:67%;"><h4 id="Integrals-sums-and-limits"><a href="#Integrals-sums-and-limits" class="headerlink" title="Integrals, sums and limits"></a>Integrals, sums and limits</h4><h5 id="Integrals"><a href="#Integrals" class="headerlink" title="Integrals"></a>Integrals</h5><p>Integral expression can be added using the <code>\int_&#123;lower&#125;^&#123;upper&#125;</code> command.</p><p>Note, that integral expression may seems a little different in inline and display math mode.</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326141955355.png" alt="image-20220326141955355" style="zoom:50%;"><h5 id="Multiple-integrals"><a href="#Multiple-integrals" class="headerlink" title="Multiple integrals"></a>Multiple integrals</h5><p>To obtain double&#x2F;triple&#x2F;multiple integrals and cyclic integrals you must use <code>amsmath</code> and <code>esint</code> (for cyclic integrals) packages.</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326142031479.png" alt="image-20220326142031479" style="zoom:50%;"><h5 id="Sums-and-products"><a href="#Sums-and-products" class="headerlink" title="Sums and products"></a>Sums and products</h5><p>Like integral, sum expression can be added using the <code>\sum_&#123;lower&#125;^&#123;upper&#125;</code> command.</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326142134014.png" alt="image-20220326142134014" style="zoom:50%;"><h5 id="Limits"><a href="#Limits" class="headerlink" title="Limits"></a>Limits</h5><p>Limit expression can be added using the <code>\lim_&#123;lower&#125;</code> command.</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326142514566.png" alt="image-20220326142514566" style="zoom:67%;"><h4 id="List-of-Greek-letters-and-math-symbols"><a href="#List-of-Greek-letters-and-math-symbols" class="headerlink" title="List of Greek letters and math symbols"></a>List of Greek letters and math symbols</h4><h5 id="Greek-letters"><a href="#Greek-letters" class="headerlink" title="Greek letters"></a>Greek letters</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326143237666.png" alt="image-20220326143237666" style="zoom:67%;"><h5 id="Arrows"><a href="#Arrows" class="headerlink" title="Arrows"></a>Arrows</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326143323358.png" alt="image-20220326143323358" style="zoom: 67%;"><h5 id="Miscellaneous-symbols"><a href="#Miscellaneous-symbols" class="headerlink" title="Miscellaneous symbols"></a>Miscellaneous symbols</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326143344870.png" alt="image-20220326143344870" style="zoom:67%;"><h5 id="Binary-Operation-x2F-Relation-Symbols"><a href="#Binary-Operation-x2F-Relation-Symbols" class="headerlink" title="Binary Operation&#x2F;Relation Symbols"></a>Binary Operation&#x2F;Relation Symbols</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326143406653.png" alt="image-20220326143406653" style="zoom:50%;"><h4 id="Mathematical-fonts"><a href="#Mathematical-fonts" class="headerlink" title="Mathematical fonts"></a>Mathematical fonts</h4><h5 id="Introduction-6"><a href="#Introduction-6" class="headerlink" title="Introduction"></a>Introduction</h5><ul><li><p>Some mathematical elements need to be typeset using fonts containing characters&#x2F;symbols of a certain style;</p></li><li><p>For example, it is customary to represent real numbers with a blackboard bold font (such as RR), or topological spaces with calligraphic font (such as (TT). </p></li><li><p>This article shows how to use different font styles when typesetting mathematics, starting with the following example:</p></li></ul><pre class=" language-latex"><code class="language-latex">Let <span class="token equation string">\( <span class="token equation-command regex">\mathcal</span>&amp;#123;T&amp;#125; \)</span> be a topological space, a basis is defined as<span class="token equation string">\[ <span class="token equation-command regex">\mathcal</span>&amp;#123;B&amp;#125; = <span class="token equation-command regex">\&amp;</span>#123;B_&amp;#123;<span class="token equation-command regex">\alpha</span>&amp;#125; <span class="token equation-command regex">\in</span> <span class="token equation-command regex">\mathcal</span>&amp;#123;T&amp;#125;<span class="token equation-command regex">\,</span> |<span class="token equation-command regex">\,</span>  U = <span class="token equation-command regex">\bigcup</span> B_&amp;#123;<span class="token equation-command regex">\alpha</span>&amp;#125; <span class="token equation-command regex">\forall</span> U <span class="token equation-command regex">\in</span> <span class="token equation-command regex">\mathcal</span>&amp;#123;T&amp;#125; <span class="token equation-command regex">\&amp;</span>#125;\]</span></code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326143630035.png" alt="image-20220326143630035" style="zoom:67%;"><p>Use of some math font styles requires the line <code>\usepackage&#123;amssymb&#125;</code> to be added to the document preamble: see the <a href="https://ctan.org/pkg/amsfonts"><code>amsfonts</code> package</a> for further information.</p><h5 id="Capital-letters-only-font-typefaces"><a href="#Capital-letters-only-font-typefaces" class="headerlink" title="Capital letters-only font typefaces"></a>Capital letters-only font typefaces</h5><p>There are some font typefaces which support only a limited number of characters; these fonts usually denote some special sets. For instance, to display the R in blackboard bold typeface you can use <code>\(\mathbb&#123;R&#125;\)</code> to produce RR. The following example shows calligraphic, fraktur and blackboard bold typefaces:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">&amp;</span>#123;amsmath<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">&amp;</span>#123;amssymb<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;RQSZ <span class="token function selector">\\</span><span class="token function selector">\mathcal</span><span class="token punctuation">&amp;</span>#123;RQSZ<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\\</span><span class="token function selector">\mathfrak</span><span class="token punctuation">&amp;</span>#123;RQSZ<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\\</span><span class="token function selector">\mathbb</span><span class="token punctuation">&amp;</span>#123;RQSZ<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;align*<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326143808843.png" alt="image-20220326143808843" style="zoom:50%;"><h3 id="Basic-Formatting"><a href="#Basic-Formatting" class="headerlink" title="Basic Formatting"></a>Basic Formatting</h3><p>We will now look at how to write abstracts, as well as how to format a LATEX document into different chapters, sections and paragraphs.</p><h4 id="Abstracts"><a href="#Abstracts" class="headerlink" title="Abstracts"></a>Abstracts</h4><ul><li><p>In scientific documents it’s a common practice to include a brief overview of the main subject of the paper. </p></li><li><p>In LATEX there’s the <strong><code>abstract</code></strong> environment for this. The <strong><code>abstract</code></strong> environment will put the text in a special format at the top of your document.</p></li></ul><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;abstract<span class="token punctuation">&amp;</span>#125;This is a simple paragraph at the beginning of the document. A brief introduction about the main subject.<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;abstract<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326144135203.png" alt="image-20220326144135203" style="zoom:67%;"><h4 id="Paragraphs-and-newlines"><a href="#Paragraphs-and-newlines" class="headerlink" title="Paragraphs and newlines"></a>Paragraphs and newlines</h4><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;abstract<span class="token punctuation">&amp;</span>#125;This is a simple paragraph at the beginning of the document. A brief introduction about the main subject.<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;abstract<span class="token punctuation">&amp;</span>#125; Now that we have written our abstract, we can begin writing our first paragraph. This line will start a second Paragraph.<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326144335705.png" alt="image-20220326144335705" style="zoom:50%;"><ul><li>When writing the contents of your document, if you need to start a new paragraph you must hit the “Enter” key twice (to insert a double blank line). Notice that LATEX automatically indents paragraphs.</li><li>To start a new line without actually starting a new paragraph insert a <em>break line</em> point, this can be done by <strong><code>\\</code></strong> (a double backslash as in the example) or the <strong><code>\newline</code></strong> command.</li><li>Care should be taken that multiple <code>\\</code> or <code>\newline</code>s are not used to “simulate” paragraphs with larger spacing between them, as this can interfere with LATEX’s typesetting algorithms. The recommended method to do so is to keep using double blank lines to create new paragraphs without any <code>\\</code>, and then add <strong><code>\usepackage&#123;parskip&#125;</code></strong> to the preamble.</li></ul><p>See official documents for more details</p><p><a href="https://cn.overleaf.com/learn/latex/Paragraphs_and_new_lines">Paragraphs and new lines</a></p><h3 id="Chapters-and-Sections"><a href="#Chapters-and-Sections" class="headerlink" title="Chapters and Sections"></a>Chapters and Sections</h3><p>Commands to organize a document vary depending on the document type, the simplest form of organization is the sectioning, available in all formats.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\chapter</span><span class="token punctuation">&amp;</span>#123;First Chapter<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\section</span><span class="token punctuation">&amp;</span>#123;Introduction<span class="token punctuation">&amp;</span>#125;This is the first section.Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscing  elit.   Etiam  lobortisfacilisis sem.  Nullam nec mi et neque pharetra sollicitudin.  Praesent imperdietmi nec ante. Donec ullamcorper, felis non sodales...<span class="token function selector">\section</span><span class="token punctuation">&amp;</span>#123;Second Section<span class="token punctuation">&amp;</span>#125;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra sollicitudin.  Praesent imperdiet mi necante...<span class="token function selector">\subsection</span><span class="token punctuation">&amp;</span>#123;First Subsection<span class="token punctuation">&amp;</span>#125;Praesent imperdietmi nec ante. Donec ullamcorper, felis non sodales...<span class="token function selector">\section*</span><span class="token punctuation">&amp;</span>#123;Unnumbered Section<span class="token punctuation">&amp;</span>#125;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  Etiam lobortis facilisissem</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326144944551.png" alt="image-20220326144944551" style="zoom:67%;"><ul><li>The command <strong><code>\section&#123;&#125;</code></strong> marks the beginning of a new section, inside the braces is set the title. </li><li>Section numbering is automatic and can be disabled by including a <strong><code>\*</code></strong> in the section command as <strong><code>\section\*&#123;&#125;</code></strong>. </li><li>We can also have **<code>\subsection&#123;&#125;</code>**s, and indeed **<code>\subsubsection&#123;&#125;</code>**s. The basic levels of depth are listed below:</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326145056758.png" alt="image-20220326145056758" style="zoom:67%;"><p>Note that <strong><code>\part</code></strong> and <strong><code>\chapter</code></strong> are only available in <em>report</em> and <em>book</em> document classes.</p><p>For a more complete discussion about the document structure see the <a href="https://cn.overleaf.com/learn/latex/Sections_and_chapters">article about sections and chapters</a>.</p><h3 id="Creating-tables"><a href="#Creating-tables" class="headerlink" title="Creating tables"></a>Creating tables</h3><h4 id="Creating-a-simple-table-in-LATEX"><a href="#Creating-a-simple-table-in-LATEX" class="headerlink" title="Creating a simple table in LATEX"></a>Creating a simple table in LATEX</h4><p>Below you can see the simplest working example of a table</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;center<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123; c c c <span class="token punctuation">&amp;</span>#125; cell1 <span class="token punctuation">&amp;</span> cell2 <span class="token punctuation">&amp;</span> cell3 <span class="token function selector">\\</span>  cell4 <span class="token punctuation">&amp;</span> cell5 <span class="token punctuation">&amp;</span> cell6 <span class="token function selector">\\</span>   cell7 <span class="token punctuation">&amp;</span> cell8 <span class="token punctuation">&amp;</span> cell9    <span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;center<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326145206465.png" alt="image-20220326145206465" style="zoom:67%;"><ul><li>The <strong><code>tabular</code></strong> environment is the default LATEX method to create tables. </li><li>You must specify a parameter to this environment, in this case <strong><code>&#123;c c c&#125;</code></strong>. This tells LATEX that there will be three columns and that the text inside each one of them must be centred. </li><li>You can also use <strong><code>r</code></strong> to align the text to the right and <strong><code>l</code></strong> for left alignment. The alignment symbol <strong><code>&amp;</code></strong> is used to specify the breaks in the table entries. <strong><u>There must always be one less alignment symbol in each line than the number of columns.</u></strong></li><li>To go to the next line of your table, we use the <em>new line</em> command <strong><code>\\</code></strong>. We wrap the entire table inside the <strong><code>center</code></strong> environment so that it will appear in the center of the page.</li></ul><h4 id="Adding-borders"><a href="#Adding-borders" class="headerlink" title="Adding borders"></a>Adding borders</h4><p>The <em>tabular</em> environment is more flexible, you can put separator lines in between each column.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;center<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123; |c|c|c| <span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\hline</span> cell1 <span class="token punctuation">&amp;</span> cell2 <span class="token punctuation">&amp;</span> cell3 <span class="token function selector">\\</span>  cell4 <span class="token punctuation">&amp;</span> cell5 <span class="token punctuation">&amp;</span> cell6 <span class="token function selector">\\</span>  cell7 <span class="token punctuation">&amp;</span> cell8 <span class="token punctuation">&amp;</span> cell9 <span class="token function selector">\\</span>  <span class="token function selector">\hline</span><span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;center<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326145515176.png" alt="image-20220326145515176" style="zoom:67%;"><p>You can add borders using the horizontal line command <strong><code>\hline</code></strong> and the vertical line parameter <strong><code>|</code></strong>.</p><ul><li><p><strong><code>&#123; |c|c|c| &#125;</code></strong>: This declares that three columns, separated by a vertical line, are going to be used in the table. The <strong><code>|</code></strong> symbol specifies that these columns should be separated by a vertical line.</p></li><li><p><strong><code>\hline</code></strong>: This will insert a horizontal line. We have included horizontal lines at the top and bottom of the table here. There is no restriction on the number of times you can use <strong><code>\hline</code></strong>.</p></li></ul><p>Below you can see a second example.</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;center<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;||c c c c||<span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\hline</span> Col1 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col3 <span class="token function selector">\\</span> <span class="token punctuation">[</span>0.5ex<span class="token punctuation">]</span>  <span class="token function selector">\hline</span><span class="token function selector">\hline</span> 1 <span class="token punctuation">&amp;</span> 6 <span class="token punctuation">&amp;</span> 87837 <span class="token punctuation">&amp;</span> 787 <span class="token function selector">\\</span>  <span class="token function selector">\hline</span> 2 <span class="token punctuation">&amp;</span> 7 <span class="token punctuation">&amp;</span> 78 <span class="token punctuation">&amp;</span> 5415 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 3 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 778 <span class="token punctuation">&amp;</span> 7507 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 4 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 18744 <span class="token punctuation">&amp;</span> 7560 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 5 <span class="token punctuation">&amp;</span> 88 <span class="token punctuation">&amp;</span> 788 <span class="token punctuation">&amp;</span> 6344 <span class="token function selector">\\</span> <span class="token punctuation">[</span>1ex<span class="token punctuation">]</span>  <span class="token function selector">\hline</span><span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;center<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326145638833.png" alt="image-20220326145638833" style="zoom:67%;"><ul><li>Creating tables in LATEX can be a bit tricky sometimes, so you may want to use the <a href="https://www.tablesgenerator.com/">TablesGenerator.com</a> </li><li>online tool to export LATEX code for tabulars. <strong><u>The <em>File &gt; Paste table data</em> option lets you copy and paste data from spreadsheet applications.</u></strong></li></ul><h3 id="Captions-labels-and-references-1"><a href="#Captions-labels-and-references-1" class="headerlink" title="Captions, labels and references"></a>Captions, labels and references</h3><p>You can caption and reference tables in much the same way as images. The only difference is that instead of the <strong><code>figure</code></strong> environment, you use the <strong><code>table</code></strong> environment.</p><pre class=" language-latex"><code class="language-latex">Table <span class="token function selector">\ref</span><span class="token punctuation">&amp;</span>#123;table:data<span class="token punctuation">&amp;</span>#125; is an example of referenced <span class="token function selector">\LaTeX</span><span class="token punctuation">&amp;</span>#123;<span class="token punctuation">&amp;</span>#125; elements.<span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;table<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">[</span>h!<span class="token punctuation">]</span><span class="token function selector">\centering</span><span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;||c c c c||<span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\hline</span> Col1 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col3 <span class="token function selector">\\</span> <span class="token punctuation">[</span>0.5ex<span class="token punctuation">]</span>  <span class="token function selector">\hline</span><span class="token function selector">\hline</span> 1 <span class="token punctuation">&amp;</span> 6 <span class="token punctuation">&amp;</span> 87837 <span class="token punctuation">&amp;</span> 787 <span class="token function selector">\\</span>  2 <span class="token punctuation">&amp;</span> 7 <span class="token punctuation">&amp;</span> 78 <span class="token punctuation">&amp;</span> 5415 <span class="token function selector">\\</span> 3 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 778 <span class="token punctuation">&amp;</span> 7507 <span class="token function selector">\\</span> 4 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 18744 <span class="token punctuation">&amp;</span> 7560 <span class="token function selector">\\</span> 5 <span class="token punctuation">&amp;</span> 88 <span class="token punctuation">&amp;</span> 788 <span class="token punctuation">&amp;</span> 6344 <span class="token function selector">\\</span> <span class="token punctuation">[</span>1ex<span class="token punctuation">]</span>  <span class="token function selector">\hline</span><span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;tabular<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\caption</span><span class="token punctuation">&amp;</span>#123;Table to test captions and labels<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\label</span><span class="token punctuation">&amp;</span>#123;table:data<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;table<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326150029813.png" alt="image-20220326150029813" style="zoom: 50%;"><p><em>Note: If you are using captions and references on your own computer, you will have to compile the document twice for the references to work. Overleaf will do this for you automatically.’</em></p><h3 id="Adding-a-Table-of-Contents"><a href="#Adding-a-Table-of-Contents" class="headerlink" title="Adding a Table of Contents"></a>Adding a Table of Contents</h3><p>To create the table of contents is straightforward, the command <strong><code>\tableofcontents</code></strong> does all the work for you:</p><pre class=" language-latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&amp;</span>#123;article<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&amp;</span>#123;inputenc<span class="token punctuation">&amp;</span>#125; <span class="token function selector">\title</span><span class="token punctuation">&amp;</span>#123;Sections and Chapters<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\author</span><span class="token punctuation">&amp;</span>#123;Gubert Farnsworth<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\date</span><span class="token punctuation">&amp;</span>#123; <span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\begin</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;  <span class="token function selector">\maketitle</span>  <span class="token function selector">\tableofcontents</span><span class="token function selector">\section</span><span class="token punctuation">&amp;</span>#123;Introduction<span class="token punctuation">&amp;</span>#125;   This is the first section.      Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscing  elit.   Etiam  lobortisfacilisis sem.  Nullam nec mi et neque pharetra sollicitudin.  Praesent imperdietmi nec ante. Donec ullamcorper, felis non sodales...       <span class="token function selector">\section*</span><span class="token punctuation">&amp;</span>#123;Unnumbered Section<span class="token punctuation">&amp;</span>#125;<span class="token function selector">\addcontentsline</span><span class="token punctuation">&amp;</span>#123;toc<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;section<span class="token punctuation">&amp;</span>#125;<span class="token punctuation">&amp;</span>#123;Unnumbered Section<span class="token punctuation">&amp;</span>#125;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra sollicitudin.  Praesent imperdiet mi necante...<span class="token function selector">\section</span><span class="token punctuation">&amp;</span>#123;Second Section<span class="token punctuation">&amp;</span>#125;       Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra sollicitudin.  Praesent imperdiet mi necante...         <span class="token function selector">\end</span><span class="token punctuation">&amp;</span>#123;document<span class="token punctuation">&amp;</span>#125;</code></pre><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326150254843.png" alt="image-20220326150254843" style="zoom:50%;"><p>Sections, subsections and chapters are automatically included in the table of contents. To manually add entries, for example when you want an unnumbered section, use the command <strong><code>\addcontentsline</code></strong> as shown in the example.</p>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Database system(C2)</title>
      <link href="/2022/03/03/Database-system-C2/"/>
      <url>/2022/03/03/Database-system-C2/</url>
      
        <content type="html"><![CDATA[<h1 id="chapter2-Introduction-to-relation-model"><a href="#chapter2-Introduction-to-relation-model" class="headerlink" title="chapter2 Introduction to relation model"></a>chapter2 Introduction to relation model</h1><h2 id="outline"><a href="#outline" class="headerlink" title="outline"></a>outline</h2><ul><li>Structure of Relation Database</li><li>Database Schema</li><li>keys, integrity constrains</li><li>Schema Diagram</li><li>Relational Query Languages</li><li>The Relational Algebra</li></ul><h3 id="Data-model"><a href="#Data-model" class="headerlink" title="Data model"></a>Data model</h3><p>Purpose: To represent data in an understandable way</p><p>Define: Integrated collection of concepts for describing data, relationships between data, and constraints on the data in an organization</p><p><strong>Data Model comprises:</strong></p><ul><li>A structural part</li><li>Possibly a set of integrity rules</li><li>a manipulative part</li></ul><h2 id="Relational-Model"><a href="#Relational-Model" class="headerlink" title="Relational Model"></a>Relational Model</h2><h3 id="Mathematical-Definition-of-Relation"><a href="#Mathematical-Definition-of-Relation" class="headerlink" title="Mathematical Definition of Relation"></a>Mathematical Definition of Relation</h3><ul><li><p>Formally, given sets D1, D2, …Dn</p><p>A relation r is a subset of D1*D2…*Dn</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>database system(W2)</title>
      <link href="/2022/03/03/database-system-C1/"/>
      <url>/2022/03/03/database-system-C1/</url>
      
        <content type="html"><![CDATA[<h1 id="Database-system"><a href="#Database-system" class="headerlink" title="Database system"></a>Database system</h1><h3 id="preview"><a href="#preview" class="headerlink" title="preview"></a>preview</h3><p>The benefits of database: </p><ul><li>control redundancy</li><li>share</li><li>maintain data integrity</li><li>allow data independence</li><li>perform automatic query optimization</li><li>allow concurrency</li><li>provide for backup and recovery</li><li>control security</li></ul><h3 id="Abstract-model"><a href="#Abstract-model" class="headerlink" title="Abstract model"></a>Abstract model</h3><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220303091944959.png" alt="image-20220303091944959" style="zoom: 33%;"><p><strong>Conceptual model(information model for DB design):</strong></p><ul><li>Entity-Relationship data model (mainly for database design)</li></ul><p><strong>Machine model(include logical and physical model)</strong></p><ul><li>logical model:<ul><li>Network model<ul><li>Hierarchical model</li></ul></li><li>relational model</li><li>Object-based data models(Object-oriented and Object-relational)</li><li>Semistructured data model</li><li>Unstructured model</li></ul></li><li>physical model:</li><li>Describe how data is stored and accessed in the system</li></ul><h2 id="3-chapter3-Introduction-to-SQL"><a href="#3-chapter3-Introduction-to-SQL" class="headerlink" title="3.chapter3 Introduction to SQL"></a>3.chapter3 Introduction to SQL</h2><h3 id="Preview"><a href="#Preview" class="headerlink" title="Preview:"></a>Preview:</h3><ul><li>Overview of SQL Query Language</li><li>Data Definition Language(DDL)</li><li>Data manipulation Language<ul><li>Modification of the Database</li><li>Basic Query Structure</li><li>Additional Basic Operations </li><li>Set Operationals</li><li>Null values</li><li>Aggregate Functions</li><li>Nested Subqueries</li></ul></li></ul><h3 id="1-Overview-of-SQL"><a href="#1-Overview-of-SQL" class="headerlink" title="1 Overview of SQL"></a>1 Overview of SQL</h3><h4 id="1-1-History"><a href="#1-1-History" class="headerlink" title="1.1 History"></a>1.1 History</h4><ul><li>IBM Sequel language developed as part of system R project at the IBM San Jose Research Laboratory</li><li>Renamed Structured Query Language(SQL)</li><li>ANSI and ISO standard SQL<ul><li>SQL-86, SQL-89, SQL-92</li><li>SQL:1999, SQL:2003, SQL:2008</li><li>Commercial systems offer most, if not all, SQL-92 features plus varying feature sets from later standards and special proprietary festures</li></ul></li></ul><h4 id="1-2-SQL-Parts"><a href="#1-2-SQL-Parts" class="headerlink" title="1.2 SQL Parts"></a>1.2 SQL Parts</h4><ul><li>DDL: allows the specification of information about relations schema</li><li>DML: provide the ability to query information from the database and to insert tuples into, delete tuples from, and modify tuples in the database</li><li>integrity: the DDL includes commands for specifying integrity constraints</li><li>View definitionL The DDl includes commands for defining views</li><li>Autorization: includes commands for specifying accsee rights to relations and views</li><li>Embedded SQL and dynamic SQL: define how SQL statements can be embedded within general-purpose programming languages</li><li>Transaction control: includes commands for specifying the beginning and ending of transactions</li></ul><h3 id="2-Data-Definition-language"><a href="#2-Data-Definition-language" class="headerlink" title="2. Data Definition language"></a>2. Data Definition language</h3><h4 id="2-1-Definition"><a href="#2-1-Definition" class="headerlink" title="2.1 Definition"></a>2.1 Definition</h4><p><strong>The SQL data-definition language(DDL) allows the specification of information about relations</strong></p><p>including:</p><ul><li>The domain of values associated with each attribute</li><li>The schema for each relation</li><li>Integrity constrains</li><li>And as we will see later, also other information such as<ul><li>Security and authorization information for each relation</li><li>The set of indices to be maintained for each relations</li><li>The physical storage structure of each relation on disk</li></ul></li></ul><p>Use DDL to create schemas of a database</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313170857633.png" alt="image-20220313170857633" style="zoom: 33%;"><h4 id="2-2-Domain-Types-in-SQL"><a href="#2-2-Domain-Types-in-SQL" class="headerlink" title="2.2 Domain Types in SQL"></a>2.2 Domain Types in SQL</h4><ul><li>char: Fixed length character string, with user-specified length n.</li><li>varchar: variable length character strings with user-specified maximum length n</li><li>int: Integer(A finite subset of the integers that is machine dependent)</li><li>smallint: Small integer</li><li>numeric(p,d): Fixed point number, with user-specified precision of <strong>p</strong> digits, with <strong>n</strong> digits to the right of decimal point</li><li>real, double precision: Flaoting poinit and double-precision floating point numbers, with machine-dependent precision</li><li>float</li></ul><p>Example:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313171704249.png" alt="image-20220313171704249" style="zoom: 33%;"><h4 id="2-3-Operate-Table-Construct"><a href="#2-3-Operate-Table-Construct" class="headerlink" title="2.3 Operate Table Construct"></a>2.3 Operate Table Construct</h4><p><strong>Create the table</strong></p><ul><li>An SQL relation is defined using the create table command</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313171905177.png" alt="image-20220313171905177" style="zoom:33%;"><ul><li>r is the name of the relation</li><li>each Ai is an attribute name in the schema of relation r</li><li>Di is the data type of values in the domain of attribute Ai</li></ul><p>Integrity constraint in create Table</p><ul><li>primary key(A1…AN)</li><li>foreign key(Am…An) reference r</li><li>not NULL</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313172630484.png" alt="image-20220313172630484" style="zoom: 33%;"><p><strong>Drop and alter Table Constructs</strong></p><ul><li><p>drop table </p><p>Delete the table and its contents</p></li><li><p>alter table R</p><p>alter table r add A D</p><ul><li>where A is the name of the attribute to be added to relation r and D is the domain of A</li><li>All tuples in the relation are assigned null as the value for the new attribute</li></ul></li><li><p>alter table r drop A</p><ul><li>where A is the name of an attribute of relation r</li><li>Dropping of attributes not supported by many database</li></ul></li></ul><h3 id="3-Data-Manipulation-language-DML"><a href="#3-Data-Manipulation-language-DML" class="headerlink" title="3. Data Manipulation language(DML)"></a>3. Data Manipulation language(DML)</h3><h4 id="3-1-Definition"><a href="#3-1-Definition" class="headerlink" title="3.1 Definition"></a>3.1 Definition</h4><ul><li><p>The SQL data-manipulation language(DML) provides the ability to </p><p>**Insert, delete and update tuples **</p><ul><li>Insertion of new tuples into a given relation</li><li>Deletion of tuples from a given relation</li><li>Updating values in some tuples in a given relation</li></ul></li><li><p>query information</p><ul><li>Basic Query Structure</li><li>Additional Basic Operations</li><li>NULL values</li><li>Aggregate function</li><li>Nested Subqueries</li></ul></li></ul><h4 id="3-2-Modification-of-the-Database"><a href="#3-2-Modification-of-the-Database" class="headerlink" title="3.2 Modification of the Database"></a>3.2 Modification of the Database</h4><p>Insertion:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313173957807.png" alt="image-20220313173957807" style="zoom: 33%;"><p>Deletion</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313174020882.png" alt="image-20220313174020882" style="zoom: 33%;"><p>Updates:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313174046457.png" alt="image-20220313174046457" style="zoom: 33%;"><h4 id="3-3-Basic-Query-structure"><a href="#3-3-Basic-Query-structure" class="headerlink" title="3.3 Basic Query structure"></a>3.3 Basic Query structure</h4><p>A typical SQL query has the form:</p><p>​          SELECT A1,A2,…,An</p><p>​          FROM r1,r2,…,rn</p><p>​          WHERE P</p><ul><li>Ai represents an attribute</li><li>Ri represents a relation</li><li>P is a predicate</li></ul><p>The result of an SQL query is a relation</p><p>Basic Clause:</p><ul><li>select clause</li><li>where clause</li><li>from clause</li></ul><p>Cartesian Product:</p><ul><li>joins</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313174954622.png" alt="image-20220313174954622" style="zoom:33%;"><ul><li>Natural join</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313175026668.png" alt="image-20220313175026668" style="zoom:33%;"><p><strong>String Operations:</strong></p><p>SQL includes a string-matching operator for comparisons on character strings. The operator “like” uses patterns that are described using two special characters</p><ul><li>percent(%) The % character matches any character.</li><li>underscore(_) The _ character matches any character</li></ul><p>Examples:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313175900987.png" alt="image-20220313175900987" style="zoom:33%;"><h4 id="3-4-Set-Operations"><a href="#3-4-Set-Operations" class="headerlink" title="3.4 Set Operations"></a>3.4 Set Operations</h4><ul><li><p>Set operations union, intersect, and execpt</p><ul><li>Each of the above operations automatically eliminates duplicates</li></ul></li><li><p>To retain duplicates use the corresponding multiset version union all, intersect all and except all .</p><p>Suppose a tuple occurs m times, and n times in s, then, it occurs:</p><ul><li>m+n times in r union all s</li><li>min{m,n} times in r intersect all s</li><li>max{0,m-n} times in r except all s</li></ul></li></ul><h4 id="3-5-NULL-values"><a href="#3-5-NULL-values" class="headerlink" title="3.5 NULL values"></a>3.5 NULL values</h4><ul><li>It is possible for tuples to have null value, denoted by null for some of their attributes</li><li><strong>null</strong> signifies an unknown value or that a value does not exist</li><li>The result of any arithmetic expression involving null is null: 5+null&#x3D;null</li><li><strong>The predicate is null can be used to check for null values</strong></li><li><strong>The predicate is not null succeeds if the value on which it is applied is not null</strong></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313181006727.png" alt="image-20220313181006727" style="zoom:33%;"><ul><li><p>SQL treats as unknown the result of any comparison involving a null value(other than predicates is null and is not null)</p><p>5&lt;null or null&lt;&gt;null or null&#x3D;null</p></li><li><p>The predicate in a where clause an involve Boolean operations(and,or,not); Thus the definitions of the Boolean operations need to be extended to deal with the value unknown</p></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220313181441902.png" alt="image-20220313181441902" style="zoom:33%;">]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件开发环境与工具</title>
      <link href="/2022/03/01/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E4%B8%8E%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/03/01/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E4%B8%8E%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="软件开发环境与工具"><a href="#软件开发环境与工具" class="headerlink" title="软件开发环境与工具"></a>软件开发环境与工具</h1><h2 id="第一章-软件开发环境与工具相关概念"><a href="#第一章-软件开发环境与工具相关概念" class="headerlink" title="第一章 软件开发环境与工具相关概念"></a>第一章 软件开发环境与工具相关概念</h2><ul><li>在软件工程学中，方法和工具是一个问题的两个方面</li><li><strong>方法</strong>是工具研制的先导</li><li><strong>工具</strong>是方法的具体体现</li><li>软件工程方法的研究成果需要转化为最终实现的软件工具和系统</li><li>软件开发环境是由工具构成的</li></ul><h3 id="1-1软件开发工具"><a href="#1-1软件开发工具" class="headerlink" title="1.1软件开发工具"></a>1.1软件开发工具</h3><ul><li><p>软件开发工具是用于辅助软件生命周期过程的基于计算机的工具</p></li><li><p>软件工具是指为支持计算机软件的开发、维护、模拟、移植或管理而研制的程序系统</p></li><li><p>软件工具通常由三部分组成：工具，工具接口，工具用户接口</p></li></ul><p><strong>软件开发工具的发展特点</strong></p><ol><li>软件开发工具由单个工具向多个工具集成化方向发展</li><li>重视用户界面的设计</li><li>不断采用新理论和新技术</li><li>软件工具的商品化推动了软件产业的发展，软件产业的发展，又反过来促进了软件工具的发展</li></ol><p><strong>软件开发工具5个方面的功能需求</strong></p><ol><li>认识与描述客观系统：<u>需求阶段</u></li><li>存储及管理开发过程中的信息：如配置管理，<strong>核心：</strong>保持数据的一致性</li><li>代码的编写和生成：编辑、编译、链接，<strong>核心</strong>：通过代码自动生成方式及软件重用提高效率</li><li>文档的编制与生成：World工具，<strong>核心：</strong>保持文档与软件的一致性</li><li>软件项目管理：为管理人员提供支持</li></ol><p>对应：需求工具、配置管理工具、编程工具、设计&#x2F;测试工具以及项目管理工具</p><p><strong>软件开发工具5个方面的性能要求</strong></p><ol><li>表达能力和描述能力</li><li>保持信息一致性的能力</li><li>使用的方便程度</li><li>工具的可靠程度</li><li>对硬件和软件环境的要求</li></ol><h3 id="1-2CASE工具概述"><a href="#1-2CASE工具概述" class="headerlink" title="1.2CASE工具概述"></a>1.2CASE工具概述</h3><p>CASE(Computer-Aided Software Engineering): 是一组工具和方法的集合，可以辅助软件开发生成周期各阶段进行软件开发，是软件工程发展的产物，例如：</p><ul><li>设计：Visio，Power Designer</li><li>版本管理：Clear case</li><li>集成开发环境：Visual Studio 2010</li></ul><h4 id="CASE工具要达到以下目标："><a href="#CASE工具要达到以下目标：" class="headerlink" title="CASE工具要达到以下目标："></a><strong>CASE工具要达到以下目标：</strong></h4><ol><li>高效及时完成开发工作</li><li>降低开发成本</li><li>达到软件的功能要求</li><li>取得较好的软件性能</li><li>降低软件维护费用</li></ol><p>核心：<strong>提高生产率，提高质量</strong></p><h4 id="CASE的作用："><a href="#CASE的作用：" class="headerlink" title="CASE的作用："></a><strong>CASE的作用：</strong></h4><ol><li>提供一个具有快速响应、早期查错功能的交互式开发环境</li><li>对软件的开发和维护过程中的许多环节实现自动化</li><li>通过一个强有力的图形接口，实现直观的程序设计</li></ol><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301143045412.png" alt="image-20220301143045412" style="zoom:67%;"><h4 id="CASE工具的分类："><a href="#CASE工具的分类：" class="headerlink" title="CASE工具的分类："></a><strong>CASE工具的分类：</strong></h4><ol><li>支持单个过程任务的工具，比如：编译器、连接器等</li><li>工作台支持某一过程某些活动或所有活动，比如C语言集成开发环境</li><li>环境支持软件过程大部分活动或所有活动</li></ol><h4 id="CASE工具台："><a href="#CASE工具台：" class="headerlink" title="CASE工具台："></a><strong>CASE工具台：</strong></h4><p>一个CASE工作台是一组工具集，支持图形化设计、编码实现或测试等特定的软件开发阶段，可以分为：</p><ol><li>分析和设计工作台（上游CASE工具）</li><li>程序设计工作台（下游CASE工具）</li><li>测试工作台</li></ol><h4 id="CASE软件的特点："><a href="#CASE软件的特点：" class="headerlink" title="CASE软件的特点："></a>CASE软件的特点：</h4><ol><li>将软件生存期各个阶段的工作连接在一起</li><li>收集和连接软件系统中从最初需求到软件维护各个阶段的所有信息</li><li>用人工智能技术实现软件开发和维护工作的自动化</li></ol><h4 id="方法的发展："><a href="#方法的发展：" class="headerlink" title="方法的发展："></a>方法的发展：</h4><ol><li>20世纪70年代  结构化方法</li><li>20世纪80年代  面向对象方法</li><li>20世纪90年代  快速原型法</li></ol><h4 id="CASE的集成化工具发展趋势"><a href="#CASE的集成化工具发展趋势" class="headerlink" title="CASE的集成化工具发展趋势"></a>CASE的集成化工具发展趋势</h4><ol><li>界面集成</li><li>数据集成</li><li>控制集成</li><li>过程集成</li></ol><h5 id="CASE工具的界面集成"><a href="#CASE工具的界面集成" class="headerlink" title="CASE工具的界面集成"></a>CASE工具的界面集成</h5><ul><li><p>界面集成是指一个系统中的工具使用共同的风格，以及采用共同的用户交互标准</p></li><li><p>界面集成的目的是通过减轻用户的认知负担而提高用户使用环境的效率和效果</p></li><li><p>如：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301151538584.png" style="zoom: 50%;"></li></ul><h5 id="CASE工具的数据集成"><a href="#CASE工具的数据集成" class="headerlink" title="CASE工具的数据集成"></a>CASE工具的数据集成</h5><ul><li>数据集成是指不同软件工程能相互交换数据</li><li>数据集成的目的是确认开发环境中的所有信息都作为一个整体数据被各部分操作或转换</li><li>数据集成包括：通用性、非冗余性、一致性、同步性和交换性五个方面属性</li></ul><h5 id="CASE工具的控制集成"><a href="#CASE工具的控制集成" class="headerlink" title="CASE工具的控制集成"></a>CASE工具的控制集成</h5><ul><li>控制集成支持工作台或环境中一个工具对系统中其它工具的访问</li><li>控制集成的目的是为了让工具共享功能</li><li>工具之间的控制关系包括：<ol><li>供给：一个工具被别的工具使用</li><li>使用：一个工具使用其他工具</li></ol></li></ul><h5 id="CASE的过程集成"><a href="#CASE的过程集成" class="headerlink" title="CASE的过程集成"></a>CASE的过程集成</h5><ul><li><p>过程是指开发软件所需要的阶段、任务活动序列，许多工具都服务于一定过程</p></li><li><p>过程集成是指CASE系统嵌入了关于过程活动、阶段、约束和支持这些活动所需要的工具的知识</p></li><li><p>过程集成属性包括：</p><ol><li>构成块</li><li>事件</li><li>约束</li></ol></li><li><p>如：vs</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301152150468.png" style="zoom:50%;"></li></ul><h3 id="1-3软件开发环境简介："><a href="#1-3软件开发环境简介：" class="headerlink" title="1.3软件开发环境简介："></a>1.3软件开发环境简介：</h3><ul><li>软件开发环境的发展</li><li>软件开发环境的要求</li><li>软件开发环境的特性</li><li>软件开发环境的分类</li></ul><p><strong><u>软件开发环境</u>是指在计算机的基础软件（比如操作系统）上，为了支持软件的开发而提供的一组工具软件系统</strong></p><h4 id="1-3-1软件开发环境的组成"><a href="#1-3-1软件开发环境的组成" class="headerlink" title="1.3.1软件开发环境的组成"></a>1.3.1软件开发环境的组成</h4><ol><li>人机接口 ——软件工具环境的重要质量标志</li><li>软件环境数据库—— 软件开发环境的核心</li><li>软件开发工具——完成具体的工作</li></ol><h4 id="1-3-2软件开发环境的数据库组成"><a href="#1-3-2软件开发环境的数据库组成" class="headerlink" title="1.3.2软件开发环境的数据库组成"></a>1.3.2软件开发环境的数据库组成</h4><ol><li>通用子程序数据库（比如函数库）</li><li>可重组的程序加工信息库（编译环境）</li><li>模块描述与接口信息库（接口，.h文件）</li><li>软件测试与纠错依据信息库（调试信息）</li><li>可行性和需求信息档案（需求文档）</li><li>阶段设计详细档案（设计文档）</li><li>测试驱动数据库（测试案例）</li><li>软件维护档案等（维护文档）</li></ol><p>示例：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301154646824.png" style="zoom:50%;"><h4 id="1-3-3软件开发环境的分层"><a href="#1-3-3软件开发环境的分层" class="headerlink" title="1.3.3软件开发环境的分层"></a>1.3.3软件开发环境的分层</h4><p><strong>通常分为以下四层：</strong></p><ol><li>宿主层</li><li>核心层</li><li>基本层</li><li>应用层</li></ol><h5 id="宿主层："><a href="#宿主层：" class="headerlink" title="宿主层："></a>宿主层：</h5><p>宿主层是软件开发环境依赖的计算机基础，包括：</p><ol><li>基本宿主硬件，如计算机、工作站、服务器等</li><li>基本宿主软件，如操作系统</li></ol><h5 id="核心层："><a href="#核心层：" class="headerlink" title="核心层："></a>核心层：</h5><p>核心层是软件开发环境本身的支持基础，比如：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301155909076.png" style="zoom:50%;"><ol><li>C#的CLR( Common Language Runtime)</li><li>Java的虚拟机JVM等</li></ol><h5 id="基本层："><a href="#基本层：" class="headerlink" title="基本层："></a>基本层：</h5><ul><li>基本层是软件开发工具的工作工具集，包括</li><li>最少限度的一组工具，比如：<ol><li>编译工具</li><li>连接工具</li><li>调试工具等</li></ol></li><li>这些工具由核心层支持</li></ul><h5 id="应用层："><a href="#应用层：" class="headerlink" title="应用层："></a>应用层：</h5><p>应用层是以特定的基本层为基础而引入的配套补充工具，比如：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301155836294.png" style="zoom:67%;"><ol><li>界面生成器</li><li>版本管理器</li><li>性能分析器等</li></ol><h4 id="1-3-4软件开发环境的发展"><a href="#1-3-4软件开发环境的发展" class="headerlink" title="1.3.4软件开发环境的发展"></a>1.3.4软件开发环境的发展</h4><p>软件开发环境的发展依赖于软件开发方法的发展</p><ul><li>20世纪70年代：结构化开发方法，主要是<strong>高级语言开发工具</strong>的发展</li><li>20世纪80年代：面向对象方法，主要是<strong>面向对象开发工具</strong>的发展</li><li>20世纪90年代：系统集成方法，CASE<strong>集成开发环境</strong>开始出现</li></ul><h5 id="结构化的开发方法和工具"><a href="#结构化的开发方法和工具" class="headerlink" title="结构化的开发方法和工具"></a>结构化的开发方法和工具</h5><ul><li>20世纪70年代：结构化开发方法，主要是结构化高级语言开发工具的发展</li><li>结构化程序设计方法又称为“自顶向下”或“逐步求精”法</li></ul><p><strong>结构化程序设计方法是按照模块划分原则以提高程序可读性和易维护性、可调性和可扩充性为目标的一种程序设计方法。</strong></p><p>在结构化的程序设计中，只允许三种基本的程序结构形式：</p><ol><li>顺序结构</li><li>分支结构</li><li>循环结构</li></ol><p><strong>这三种基本结构的共同特点是只允许有一个流动入口和一个出口，仅有这三种基本结构组成的程序称为<u>结构化程序</u></strong></p><h5 id="面向对象开发方法和工具："><a href="#面向对象开发方法和工具：" class="headerlink" title="面向对象开发方法和工具："></a>面向对象开发方法和工具：</h5><ul><li>20世纪80年代：面向对象方法，主要是面向对象开发工具的发展</li><li>面向对象编程的基础是类，三大机制： “封装、继承、多态”</li></ul><p>面向对象程序设计（Object Oriented Programming，OOP）是一种计算机编程架构。</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301161046444.png" alt="image-20220301161046444" style="zoom:50%;"><p><strong>OOP的一条基本原则是计算机程序由单个能够起到子程序作用的单元或对象组合而成。</strong></p><p>OOP达到了软件工程的三个主要目标：重用性、灵活性和扩展性。</p><p>OOP&#x3D;对象+类+继承+多态+消息，其中核心概念是类和对象。</p><h5 id="集成化开发方法和工具："><a href="#集成化开发方法和工具：" class="headerlink" title="集成化开发方法和工具："></a>集成化开发方法和工具：</h5><ul><li>20世纪90年代：系统集成方法，CASE集成开发环境开始出现</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301161425599.png" style="zoom:50%;"><h4 id="1-3-5软件开发环境的要求"><a href="#1-3-5软件开发环境的要求" class="headerlink" title="1.3.5软件开发环境的要求"></a>1.3.5软件开发环境的要求</h4><ol><li>高度集成化的系统</li><li>具有高度的通用性</li><li>易于定制，具有高度的适应性和灵活性</li><li>具有易用性</li><li>具有半自动或自动化的开发能力</li></ol><h5 id="高度集成化的系统"><a href="#高度集成化的系统" class="headerlink" title="高度集成化的系统"></a>高度集成化的系统</h5><p><strong>支持软件生存周期各个阶段的活动，包括：需求分析、系统设计、编码、调试以及维护等</strong></p><ul><li>支持软件生存周期各个阶段的管理和开发两方面的工作</li><li>协调一致地支持各阶段和各方面的工作，具有统一的内部数据表示</li><li>具有一致性的用户接口</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301161823472.png" style="zoom:50%;"><h5 id="高度的通用性："><a href="#高度的通用性：" class="headerlink" title="高度的通用性："></a>高度的通用性：</h5><ol><li>能适应最常用的几种语言</li><li>能适应和支持不同的开发方法</li><li>能适应不同的计算机硬件及其系统软件</li><li>能适应开发不同类型的软件</li><li>能适应并考虑到不同用户的需要（如程序员、系统分析员、项目经理、质量保证人员等）</li></ol><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301161951991.png" style="zoom:50%;"><h5 id="易于定制，裁剪和扩充"><a href="#易于定制，裁剪和扩充" class="headerlink" title="易于定制，裁剪和扩充"></a>易于定制，裁剪和扩充</h5><ul><li>定制是指软件开发环境应能符合项目特征、过程和用户的爱好</li><li>裁剪是指环境能按照用户需求建立好子环境</li><li>扩充是指环境能向上扩展，能根据用户新的需求或软件技术的新发展对原有的环境进行更新或扩充（Eclipse插件）</li></ul><h5 id="易学易用，经济高效"><a href="#易学易用，经济高效" class="headerlink" title="易学易用，经济高效"></a>易学易用，经济高效</h5><ul><li>易学、易用、响应时间合理和用户喜爱</li><li>能支持自然语言处理</li><li>能支持交互式和分布式软件开发</li><li>降低用户和环境的资源花费</li></ul><h5 id="具有半自动或自动化能力"><a href="#具有半自动或自动化能力" class="headerlink" title="具有半自动或自动化能力"></a>具有半自动或自动化能力</h5><ul><li>各个阶段的文档之间要能半自动或自动地变换和跟踪（Rational Rose UML)</li><li>应注重使用形式化技术</li><li>不同程度地、逐步采用“软件构件”的集成组装技术，并建立软件构件库</li><li>采用人工智能技术，逐步包含支持软件开发的专家系统</li></ul><h4 id="1-3-6软件开发环境的特性"><a href="#1-3-6软件开发环境的特性" class="headerlink" title="1.3.6软件开发环境的特性"></a>1.3.6软件开发环境的特性</h4><p>软件开发环境的特性包括：</p><ul><li>可用性</li><li>自动化程度</li><li>公共性</li><li>集成化程度</li><li>适应性</li></ul><h5 id="软件开发环境的分类："><a href="#软件开发环境的分类：" class="headerlink" title="软件开发环境的分类："></a>软件开发环境的分类：</h5><p>软件开发环境与软件生存期、软件开发方法、软件处理模型紧密相关，有多种分类方法：</p><ul><li>按问题分类</li><li>按软件开发环境的演变趋势分类</li><li>按集成化程度分类</li></ul><h5 id="按照问题分类："><a href="#按照问题分类：" class="headerlink" title="按照问题分类："></a>按照问题分类：</h5><h6 id="程序设计环境："><a href="#程序设计环境：" class="headerlink" title="程序设计环境："></a>程序设计环境：</h6><p>解决如何将规范说明（软件需求规格说明书）转换成可工作的程序（代码和运行程序）的问题，包括两个部分：方法和工具</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301163206591.png" alt="image-20220301163206591" style="zoom:67%;"><h6 id="系统合成环境-："><a href="#系统合成环境-：" class="headerlink" title="系统合成环境 ："></a>系统合成环境 ：</h6><p><strong>主要考虑把很多子系统集成为一个大系统的问题</strong></p><p>所有大型软件都有两个基本特点：</p><ol><li>由一些小的、较易理解的子系统组成</li><li>需要有一个系统合成环境来辅助控制系统及其向大系统的集成（基于组件的开发）</li></ol><p>如：原生插件调用</p><ul><li><p>二维码扫描</p></li><li><p>地理定位</p></li><li><p>摄像头拍照及录像</p></li><li><p>音频录制及播放</p></li><li><p>微信支付、支付宝支</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301163426274.png" alt="image-20220301163426274" style="zoom:50%;"></li></ul><h6 id="项目管理环境："><a href="#项目管理环境：" class="headerlink" title="项目管理环境："></a>项目管理环境：</h6><ul><li>大型软件系统的开发和维护必然会有很多人员在同一时间段内协同工作，需要对人与人之间的交流和合作进行管理</li><li>项目管理环境 的责任是解决由于软件产品的规模大、生存期长、人们的交往多而造成的问题</li></ul><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301163641467.png" alt="image-20220301163641467"></p><h3 id="1-4总结："><a href="#1-4总结：" class="headerlink" title="1.4总结："></a>1.4总结：</h3><p><strong>软件开发工具、环境和CASE之间的关系</strong></p><ul><li>工具是一款具体的开发软件</li><li>CASE是计算机软件工程的辅助工具</li><li>环境是开发工具的集合</li></ul><p>工具学习流程： 了解+掌握+应用</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301164114766.png" alt="image-20220301164114766" style="zoom:50%;"><h2 id="第二章-软件开发工具结构与分类"><a href="#第二章-软件开发工具结构与分类" class="headerlink" title="第二章 软件开发工具结构与分类"></a>第二章 软件开发工具结构与分类</h2><ul><li>软件开发工具的功能</li><li>软件开发工具的结构</li><li>软件开发工具的分类<ul><li>基于软件开发过程的工具</li><li>基于应用的软件开发工具</li><li>数据库设计工具介绍</li></ul></li></ul><h3 id="1-软件开发工具的功能"><a href="#1-软件开发工具的功能" class="headerlink" title="1.软件开发工具的功能"></a>1.软件开发工具的功能</h3><ul><li>软件开发工具种类繁多</li><li>有些工具只针对软件开发过程的一个方面，如语言工具，数据库工具</li><li>有些工具对软件开发的整个过程进行支持，如软件开发环境</li><li>功能不同，结构不同</li></ul><h4 id="1-1软件开发工具的基本功能"><a href="#1-1软件开发工具的基本功能" class="headerlink" title="1.1软件开发工具的基本功能"></a>1.1软件开发工具的基本功能</h4><h5 id="软件开发工具具有以下五方面基本功能："><a href="#软件开发工具具有以下五方面基本功能：" class="headerlink" title="软件开发工具具有以下五方面基本功能："></a><strong>软件开发工具具有以下五方面基本功能：</strong></h5><ol><li>描述软件状况及开发过程概念模式</li><li>提供存贮和管理有关信息的机制和手段</li><li>帮助使用者编制、生成文档</li><li>生成代码</li><li>对历史信息进行跨生命周期的管理</li></ol><h5 id="软件开发过程概念模式："><a href="#软件开发过程概念模式：" class="headerlink" title="软件开发过程概念模式："></a>软件开发过程概念模式：</h5><p><strong>软件开发工具都内置了自己的开发过程概念模式，帮助开发人员认识软件工作的环境、管理软件的开发过程</strong></p><p>概念模式的内容：</p><ol><li>对软件应用环境的认识和理解</li><li>对预期产生的软件产品的认识和理解</li><li>对软件开发过程的认识和理解</li></ol><h3 id="2-软件开发工具的一般结构"><a href="#2-软件开发工具的一般结构" class="headerlink" title="2.软件开发工具的一般结构"></a>2.软件开发工具的一般结构</h3><p><strong>软件开发工具一般由四个部分构成：</strong></p><ul><li>总控及人机界面</li><li>信息库及其管理</li><li>代码及文档生成</li><li>版本管理及项目管理</li></ul><h4 id="2-1软件开发环境的一般结构图"><a href="#2-1软件开发环境的一般结构图" class="headerlink" title="2.1软件开发环境的一般结构图"></a>2.1软件开发环境的一般结构图</h4><h6 id><a href="#" class="headerlink" title></a><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308140845300.png" alt="image-20220308140845300" style="zoom:50%;"></h6><h4 id="2-2总控部分和人机界面"><a href="#2-2总控部分和人机界面" class="headerlink" title="2.2总控部分和人机界面"></a>2.2总控部分和人机界面</h4><p>总控部分及人机界面是使用者和工具之间信息交流的桥梁</p><p><strong>人机界面应该遵循以下3条原则：</strong></p><ol><li>面向用户的原则</li><li>保证各部分之间信息的准确传递</li><li>保证系统的开放性和灵活性</li></ol><h5 id="2-2-1软件开发工具的信息库及管理"><a href="#2-2-1软件开发工具的信息库及管理" class="headerlink" title="2.2.1软件开发工具的信息库及管理"></a>2.2.1软件开发工具的信息库及管理</h5><ul><li>信息库是使用数据库技术存贮和管理软件开发过程的信息</li><li>信息库存贮开发过程中的四类信息</li><li>信息库管理涉及三方面管理功能</li></ul><h5 id="2-2-2信息库存贮的四类信息"><a href="#2-2-2信息库存贮的四类信息" class="headerlink" title="2.2.2信息库存贮的四类信息"></a>2.2.2信息库存贮的四类信息</h5><ol><li>软件环境状况信息，包括生成软件产品环境设置的描述</li><li>设计成果，包括逻辑设计和物理设计的成果，比如数据流图，模块图，代码等</li><li>运行状况的记录，包括运行效率、故障及其处理情况等</li><li>有关项目管理和版本管理的信息</li></ol><h5 id="2-2-3三类信息库管理功能"><a href="#2-2-3三类信息库管理功能" class="headerlink" title="2.2.3三类信息库管理功能"></a>2.2.3三类信息库管理功能</h5><p><strong>软件开发工具的信息库除具有一般数据库的管理功能外，还具有其它三类功能：</strong></p><ol><li>信息之间逻辑联系的识别与记录（设计视图与语言代码的一致性处理）</li><li>定量信息与文字信息的协调一致（文档信息从程序中自动提取）</li><li>历史信息处理的一致性控制</li></ol><h4 id="2-3软件开发工具的代码生成"><a href="#2-3软件开发工具的代码生成" class="headerlink" title="2.3软件开发工具的代码生成"></a>2.3软件开发工具的代码生成</h4><p><strong>代码生成是软件开发工具的主要功能<br>代码生成器的结构如下所示</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308141630276.png" alt="image-20220308141630276" style="zoom:50%;"><h5 id="2-3-1代码生成的材料"><a href="#2-3-1代码生成的材料" class="headerlink" title="2.3.1代码生成的材料"></a>2.3.1代码生成的材料</h5><p><strong>代码生成器依据三方面材料生成代码：</strong></p><ol><li>信息库中的资料，比如软件的总体结构，模块之间的关系，数据结构等</li><li>各种标准模块的框架和组件</li><li>通过屏幕输入的信息，比如输入的编译参数、将UML图形生成的语言类别等</li></ol><p><strong>代码环境信息</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308141911532.png" alt="image-20220308141911532" style="zoom:50%;"><h5 id="2-3-2代码生成的输出"><a href="#2-3-2代码生成的输出" class="headerlink" title="2.3.2代码生成的输出"></a>2.3.2代码生成的输出</h5><p><strong>代码生成器生成的数据包括：</strong></p><ul><li>高级程序语言的代码，比如Rational Rose工具可以根据类图生成不同语言的源代码</li><li>某种机器环境下的机器语言代码，一般的编译工具通常生成机器代码</li></ul><p>如：选择生成代码的类、组件或包后生成代码</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308142119685.png" alt="image-20220308142119685" style="zoom:50%;"><h4 id="2-4项目管理和版本管理"><a href="#2-4项目管理和版本管理" class="headerlink" title="2.4项目管理和版本管理"></a>2.4项目管理和版本管理</h4><ul><li><strong>项目管理与版本管理是跨生命周期的信息管理，关键是对历史信息的处理</strong></li><li><strong>项目管理包括：范围管理、时间管理、成本管理、质量管理、人力资源管理、沟通管理、风险管理、采购管理和集成管理等</strong></li><li><strong>版本管理主要涉及档案集中管理、包括版本管理，文件更新保护和版本比较等</strong></li></ul><h5 id="2-4-1-软件中的项目管理"><a href="#2-4-1-软件中的项目管理" class="headerlink" title="2.4.1 软件中的项目管理"></a>2.4.1 软件中的项目管理</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308142924599.png" alt="image-20220308142924599" style="zoom:50%;"><h5 id="2-4-2-软件中的版本管理"><a href="#2-4-2-软件中的版本管理" class="headerlink" title="2.4.2 软件中的版本管理"></a>2.4.2 软件中的版本管理</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308142952087.png" alt="image-20220308142952087" style="zoom:50%;"><h3 id="3-软件开发工具的分类"><a href="#3-软件开发工具的分类" class="headerlink" title="3.软件开发工具的分类"></a>3.软件开发工具的分类</h3><h4 id="3-1基于工作阶段的工具划分"><a href="#3-1基于工作阶段的工具划分" class="headerlink" title="3.1基于工作阶段的工具划分"></a>3.1基于工作阶段的工具划分</h4><p><strong>软件的开发是分阶段的，按照软件开发的阶段，软件开发工具可以分为：</strong></p><ul><li>需求分析工具</li><li>设计工具</li><li>编码工具</li><li>测试工具</li><li>运行维护工具</li><li>项目管理工具和版本管理工具等</li></ul><h5 id="3-1-1-需求分析工具"><a href="#3-1-1-需求分析工具" class="headerlink" title="3.1.1 需求分析工具"></a>3.1.1 需求分析工具</h5><ul><li>需求分析工具在系统分析阶段用来严格定义应用的需求规格</li><li>需求分析工具应该包括对分析的结果进行一致性和完整性的检查</li><li>需求分析工具包括UML用例图的绘制，数据流图、E-R图的绘制等</li><li>s工具包括：Rational Rose，EPWin以及BPWin等</li></ul><p>Rational Rose需求工具:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308143458584.png" alt="image-20220308143458584" style="zoom:50%;"><h5 id="3-1-2-设计工具"><a href="#3-1-2-设计工具" class="headerlink" title="3.1.2 设计工具"></a>3.1.2 设计工具</h5><ul><li>设计工具用来进行系统设计，将设计结果描述出来形成设计规格说明书，并检查设计的一致性</li><li>设计工具可以生成各种设计图形，比如类图、时序图、状态图、部署图等</li><li>常用的设计工具是：UML语言工具</li></ul><p>类图：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308143649791.png" alt="image-20220308143649791" style="zoom:50%;"><h5 id="3-1-3-软件编码工具"><a href="#3-1-3-软件编码工具" class="headerlink" title="3.1.3 软件编码工具"></a>3.1.3 软件编码工具</h5><p><strong>软件编码工具用来生成软件代码，通常包括正文编辑器、常规的编译程序、链接程序、调试跟踪程序等</strong></p><ul><li>Visual Studio6.0是只针对c++的编码工具</li><li>MATLAB是针对科学计算的编码工具</li><li>Python是针对Python语言的编码工具</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308143826548.png" alt="image-20220308143826548" style="zoom:50%;"><h5 id="3-1-4-软件测试工具"><a href="#3-1-4-软件测试工具" class="headerlink" title="3.1.4 软件测试工具"></a>3.1.4 软件测试工具</h5><ul><li>软件测试工具是软件质量的保证，用于发现程序错误并对错误进行管理</li><li>测试工具可以支持整个测试过程，包括：测试用例的选择，测试执行及测试评估等</li><li>软件测试工具包括静态分析器，动态覆盖率测试器，测试用例生成器，测试报告生成器，测试程序自动生成器，测试管理工具等</li><li>测试工具包括：WinRunner，LoadRunner等等</li></ul><p>性能测试工具loadRunner</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308144023332.png" alt="image-20220308144023332" style="zoom:50%;"><h5 id="3-1-5-软件运行维护工具"><a href="#3-1-5-软件运行维护工具" class="headerlink" title="3.1.5 软件运行维护工具"></a>3.1.5 软件运行维护工具</h5><ul><li>运行维护工具的目的是保证系统的正常运行，发现和解决软件的性能故障</li><li>运行维护阶段的工具包括支持逆向工程（Reverse-Engineering）或再工程（Reengineering）的反汇编工具等</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308144126508.png" alt="image-20220308144126508" style="zoom:50%;"><h5 id="3-1-6-软件项目管理工具"><a href="#3-1-6-软件项目管理工具" class="headerlink" title="3.1.6 软件项目管理工具"></a>3.1.6 软件项目管理工具</h5><ul><li>软件项目管理贯穿软件开发生命周期的全过程，包括对开发团队的组织以及开发过程中各种标准、规范的实施等</li><li>项目管理常用的工具有Gantt图，PERT图等</li><li>Microsoft Project是简单的项目管理工具</li></ul><h3 id="4-应用型的软件开发工具"><a href="#4-应用型的软件开发工具" class="headerlink" title="4.应用型的软件开发工具"></a>4.应用型的软件开发工具</h3><p><strong>按应用领域分类软件，种类繁多：</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308145726093.png" alt="image-20220308145726093" style="zoom: 67%;"><h4 id="4-1-Web应用开发工具"><a href="#4-1-Web应用开发工具" class="headerlink" title="4.1 Web应用开发工具"></a>4.1 Web应用开发工具</h4><p><strong>Web应用开发工具可分为前端、服务器以及数据库三类开发工具：</strong></p><ol><li>前端：WebStorm，Hbuilder等</li><li>服务器：Intellij IDEA， Eclipse等</li><li>数据库：Navicat Premium，Dbeaver等</li></ol><h5 id="4-1-1-Web应用前端开发工具举例"><a href="#4-1-1-Web应用前端开发工具举例" class="headerlink" title="4.1.1 Web应用前端开发工具举例"></a>4.1.1 Web应用前端开发工具举例</h5><p><strong>WebStorm是JetBrains旗下的JavaScript开发者工具，主要用于各种前端开发</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308150127390.png" alt="image-20220308150127390" style="zoom: 67%;"><h5 id="4-1-2-Web应用服务器开发工具举例"><a href="#4-1-2-Web应用服务器开发工具举例" class="headerlink" title="4.1.2 Web应用服务器开发工具举例"></a>4.1.2 Web应用服务器开发工具举例</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308150201452.png" alt="image-20220308150201452" style="zoom:67%;"><h5 id="4-1-3-Web应用数据库开发工具举例"><a href="#4-1-3-Web应用数据库开发工具举例" class="headerlink" title="4.1.3 Web应用数据库开发工具举例"></a>4.1.3 Web应用数据库开发工具举例</h5><p><strong>Navicat Premium是一款数据库管理工具。它可以连接不同数据库： MySQL、SQLite、Oracle 及 PostgreSQL 等。</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308150256539.png" alt="image-20220308150256539" style="zoom:67%;"><h4 id="4-2-人工智能应用开发工具（深度学习类型）"><a href="#4-2-人工智能应用开发工具（深度学习类型）" class="headerlink" title="4.2 人工智能应用开发工具（深度学习类型）"></a>4.2 人工智能应用开发工具（深度学习类型）</h4><p><strong>人工智能应用开发工具可分为数据标注、模型框架以及集成开发三类开发工具：</strong></p><ol><li>数据标注：Labelme，CVAT等</li><li>模型框架：Pytorch， Tensorflow等</li><li>集成开发：JetBrain，PyCharm等</li></ol><h5 id="4-2-1人工智能数据标注工具举"><a href="#4-2-1人工智能数据标注工具举" class="headerlink" title="4.2.1人工智能数据标注工具举"></a>4.2.1人工智能数据标注工具举</h5><p>Labelme是一个在线图像标注的Javascript 标注工具</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308150504611.png" alt="image-20220308150504611" style="zoom:67%;"><h5 id="4-2-2人工智能模型框架工具举例"><a href="#4-2-2人工智能模型框架工具举例" class="headerlink" title="4.2.2人工智能模型框架工具举例"></a>4.2.2人工智能模型框架工具举例</h5><p><strong>TensorFlow是google公司开发的一款开源机器学习平台。它拥有一个生态系统，其中包含各种工具、库和社区资源。</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308150607077.png" alt="image-20220308150607077" style="zoom: 80%;"><h5 id="4-2-3人工智能集成开发工具举例"><a href="#4-2-3人工智能集成开发工具举例" class="headerlink" title="4.2.3人工智能集成开发工具举例"></a>4.2.3人工智能集成开发工具举例</h5><p><strong>PyCharm是由JetBrains打造的一款Python IDE集成开发环境。</strong></p><p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308150703240.png" alt="image-20220308150703240"></p><h4 id="4-3-移动应用开发工具"><a href="#4-3-移动应用开发工具" class="headerlink" title="4.3 移动应用开发工具"></a>4.3 移动应用开发工具</h4><p><strong>移动应用开发工具可分为原型设计工具、后端服务以及脚本语言三类开发工具：</strong></p><ol><li>原型工具：Axure，Mockplus等</li><li>后端服务：Xcode， Android Studio等</li><li>脚本语言：RubyMotion等</li></ol><h5 id="4-3-1移动应用原型设计工具举例"><a href="#4-3-1移动应用原型设计工具举例" class="headerlink" title="4.3.1移动应用原型设计工具举例"></a>4.3.1移动应用原型设计工具举例</h5><p><strong>Axure RP是美国Axure Software Solution公司研制的一款专业快速原型设计工具</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308151016766.png" alt="image-20220308151016766" style="zoom:67%;"><h5 id="4-3-2-移动应用后端服务工具举例"><a href="#4-3-2-移动应用后端服务工具举例" class="headerlink" title="4.3.2 移动应用后端服务工具举例"></a>4.3.2 移动应用后端服务工具举例</h5><p><strong>Android Studio是谷歌公司推出的一款Android集成开发工具。</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308151116409.png" alt="image-20220308151116409" style="zoom:80%;"><h4 id="4-4-游戏开发工具"><a href="#4-4-游戏开发工具" class="headerlink" title="4.4 游戏开发工具"></a>4.4 游戏开发工具</h4><p><strong>游戏开发工具可分为建模工具、游戏引擎以及开发语言三类工具：</strong></p><ul><li>建模工具：3DMax，Maya，ZBrush等</li><li>游戏引擎：Unity3D， Unreal虚幻引擎等</li><li>开发语言：C#，Java，ObjectC等</li></ul><h5 id="4-4-1-游戏建模工具举例"><a href="#4-4-1-游戏建模工具举例" class="headerlink" title="4.4.1 游戏建模工具举例"></a>4.4.1 游戏建模工具举例</h5><p><strong>3DMax是Autodesk公司开发的3D建模工具，可用于影视、建筑等各种3D建模。</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308151402064.png" alt="image-20220308151402064" style="zoom:50%;"><p><strong>Maya是Autodesk公司推出最顶级三维建模工具，可以制作完成各种真实感的三维模型和动画。</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308151445459.png" alt="image-20220308151445459" style="zoom: 67%;"><h5 id="4-4-2-游戏开发引擎举例"><a href="#4-4-2-游戏开发引擎举例" class="headerlink" title="4.4.2 游戏开发引擎举例"></a>4.4.2 游戏开发引擎举例</h5><p><strong>Unity3D是一款实时3D游戏引擎，可以开发各种3D游戏，包括AR、VR游戏。</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308151547492.png" alt="image-20220308151547492" style="zoom: 80%;"><h3 id="5-数据库设计工具"><a href="#5-数据库设计工具" class="headerlink" title="5.数据库设计工具"></a>5.数据库设计工具</h3><p><strong>数据库设计工具协助与数据库开发相关人员在一个给定的应用环境中，通过合理的逻辑设计和有效的物理设计，构造优化的数据库模式，建立数据库及其应用系统，满足用户多种信息需求</strong></p><h4 id="5-1-数据库的设计方法"><a href="#5-1-数据库的设计方法" class="headerlink" title="5.1 数据库的设计方法"></a>5.1 数据库的设计方法</h4><p><strong>数据库设计（Database Design）是指根据用户需求，在某一个具体的数据库管理系统上，设计数据库的结构和建立数据库的过程</strong><br>数据库的设计一般包括:</p><ul><li>结构设计，如数据表格的设计</li><li>行为设计，如数据应用的设计</li></ul><h4 id="5-2-数据库设计过程"><a href="#5-2-数据库设计过程" class="headerlink" title="5.2 数据库设计过程"></a>5.2 数据库设计过程</h4><p><strong>数据库设计通常分为六个步骤</strong>:</p><ol><li>需求分析</li><li>概念设计</li><li>逻辑设计</li><li>物理设计</li><li>验证设计</li><li>运行与维护设计</li></ol><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308154747258.png" alt="image-20220308154747258" style="zoom:50%;"><h5 id="5-2-1-数据库的需求分析"><a href="#5-2-1-数据库的需求分析" class="headerlink" title="5.2.1 数据库的需求分析"></a>5.2.1 数据库的需求分析</h5><ul><li><strong>数据库的需求分析是指通过调查和分析用户的业务活动和数据的使用情况</strong></li><li><strong>弄清楚所用的数据种类、范围、数量以及他们在业务活动中的交互等情况</strong></li><li><strong>确定用户对数据库系统的使用要求和各种约束条件等，形成需求规格</strong></li></ul><h5 id="5-2-2-数据库的概念设计"><a href="#5-2-2-数据库的概念设计" class="headerlink" title="5.2.2 数据库的概念设计"></a>5.2.2 数据库的概念设计</h5><ul><li>数据库的概念设计是指通过对现实世界的分类，聚集和概括，建立抽象的概念数据模型</li><li>概念数据模型反应现实世界各部门的信息结构、信息流动情况、信息间的相互制约关系以及对信息储存、查询加工的要求等</li></ul><h5 id="5-2-3-数据库的逻辑设计"><a href="#5-2-3-数据库的逻辑设计" class="headerlink" title="5.2.3 数据库的逻辑设计"></a>5.2.3 数据库的逻辑设计</h5><p>数据库的逻辑设计是将现实世界的概念数据模型设计成数据库的一种逻辑模式，即适应特定数据库管理系统所支持的逻辑数据模式，行为准测</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308155118493.png" alt="image-20220308155118493" style="zoom: 80%;"><h5 id="5-2-4-数据库的物理设计"><a href="#5-2-4-数据库的物理设计" class="headerlink" title="5.2.4 数据库的物理设计"></a>5.2.4 数据库的物理设计</h5><p>数据库的物理设计是指根据数据库管理系统所提供的多种存贮结构和存取方法等依赖于具体计算机结构的各项物理设计措施</p><p>对具体的应用任务选定最合适的物理存贮结构、存取方法和存取路径等</p><h5 id="5-2-5-数据库的验证设计"><a href="#5-2-5-数据库的验证设计" class="headerlink" title="5.2.5 数据库的验证设计"></a>5.2.5 数据库的验证设计</h5><p>验证设计是指在数据库设计的基础上，收集数据并具体建立一个数据库，在该数据库上运行一些典型的应用任务来验证数据库设计的正确性和合理性</p><h5 id="5-2-6-数据库的运行与维护设计"><a href="#5-2-6-数据库的运行与维护设计" class="headerlink" title="5.2.6 数据库的运行与维护设计"></a>5.2.6 数据库的运行与维护设计</h5><p>在数据库系统正式投入运行的过程中，必须不断地对其进行调整和修改，这就是数据库的运行与维护</p><h4 id="5-3-典型的数据库开发工具"><a href="#5-3-典型的数据库开发工具" class="headerlink" title="5.3 典型的数据库开发工具"></a>5.3 典型的数据库开发工具</h4><p><strong>典型的数据库开发工具：</strong></p><ul><li>Oracle数据库</li><li>DB2数据库</li><li>SQL Server数据库</li><li>MySQL数据库</li><li>Access数据库</li><li>SQLite</li></ul><h5 id="5-3-1-Oracle数据库"><a href="#5-3-1-Oracle数据库" class="headerlink" title="5.3.1 Oracle数据库"></a>5.3.1 Oracle数据库</h5><ul><li>Oracle数据库是Oracle公司开发的一种大型关系数据库，一般用于商业、政府部门</li><li>Oracle数据库基于客户&#x2F;服务器模式的结构</li><li>该数据库具有强大的大数据处理能力和稳定性，被大公司采用，价格昂贵</li></ul><p>Oracle数据库管理器：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308155610361.png" alt="image-20220308155610361" style="zoom:50%;"><h5 id="5-3-2-DB2数据库"><a href="#5-3-2-DB2数据库" class="headerlink" title="5.3.2 DB2数据库"></a>5.3.2 DB2数据库</h5><ul><li>DB2数据库是IBM公司研制的关系数据库，主要应用与大型应用系统中，具有很好的可伸缩性、数据完整性和安全性</li><li>DB2具有很好的网络支持能力，每个子系统可以连接十几万分布式用户，可同时激活上千个活动线程，对于大型分布式系统的应用特别有用，比如银行</li><li>DB2可支持大型机到单用户环境，应用于OS&#x2F;2、Windows、Unix、VM及OS&#x2F;390等多种操作系统</li></ul><p>DB2数据库的工作原理：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308155847570.png" alt="image-20220308155847570" style="zoom:50%;"><h5 id="5-3-3-SQL-Server数据库"><a href="#5-3-3-SQL-Server数据库" class="headerlink" title="5.3.3 SQL Server数据库"></a>5.3.3 SQL Server数据库</h5><ul><li>SQL Server数据库是Microsoft，Sybase和Ashton-Tate三家公司共同开发的，于1988年推出第一个OS&#x2F;2版本</li><li>该数据库是一个全功能的数据库平台</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308160040287.png" alt="image-20220308160040287" style="zoom:67%;"><h5 id="5-3-4-MySQL数据库"><a href="#5-3-4-MySQL数据库" class="headerlink" title="5.3.4 MySQL数据库"></a>5.3.4 MySQL数据库</h5><ul><li>My SQL是一个小型关系数据库管理系统，由瑞典的MySQL AB公司开发，2008年被Sun公司收购</li><li>该数据库是一个开源数据库，具有体系小，成本低等特点</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308160137069.png" alt="image-20220308160137069" style="zoom: 67%;"><h5 id="5-3-5-Access数据库"><a href="#5-3-5-Access数据库" class="headerlink" title="5.3.5 Access数据库"></a>5.3.5 Access数据库</h5><ul><li>Access数据库是微软公司推出的基于Windows桌面操作系统的关系数据库，是Office应用软件之一</li><li>它提供表、查询、窗体、报表、页、宏、模块7种用来建立数据库的对象</li><li>提供了多种向导、生成器、模板、数据存贮、数据查询、界面设计以及报表生成等操作规范化</li></ul><p>Access数据库设计界面：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220308160350626.png" alt="image-20220308160350626" style="zoom:50%;"><h5 id="5-3-6-SQLite数据库"><a href="#5-3-6-SQLite数据库" class="headerlink" title="5.3.6 SQLite数据库"></a>5.3.6 SQLite数据库</h5><ul><li>SQLite，是一款轻型的数据库，是遵守ACID的关联式数据库管理系统</li><li>ACID是指原子性(Atomicity )、一致性( Consistency )、隔离性或独立性( Isolation)和持久性(Durabilily)</li><li>它的设计目标是嵌入式的，而且目前已经在很多嵌入式产品（比如手机）中使用了它，它占用资源非常低，在嵌入式设备中，可能只需几百K内存</li></ul><h3 id="6-总结："><a href="#6-总结：" class="headerlink" title="6.总结："></a>6.总结：</h3><ul><li>理解工具背后的概念模型对于熟练使用工具非常重要</li><li>综合性软件开发工具的结构一般包括：总控、信息库、代码生成器以及跨生命周期的项目管理和配置管理四个部分</li><li>按软件开发生命周期模型工具可分为需求、分析、编码、测试和维护等工具</li><li>数据库开发工具种类众多，属于应用型开发工具的一种</li></ul><h2 id="第三章-软件开发环境与工具的选用"><a href="#第三章-软件开发环境与工具的选用" class="headerlink" title="第三章 软件开发环境与工具的选用"></a>第三章 软件开发环境与工具的选用</h2><h3 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h3><ul><li>引言</li><li>软件开发工具选择概述</li><li>软件开发工具采用过程</li><li>工具选择与评价</li><li>工具切换</li><li>工具维护</li><li>工具采购</li></ul><h3 id="1-软件开发工具选择概述"><a href="#1-软件开发工具选择概述" class="headerlink" title="1. 软件开发工具选择概述"></a>1. 软件开发工具选择概述</h3><ul><li>软件开发工具对高效、高质量的开发软件起到重要作用</li><li>如何选择一款适合于公司的开发工具呢<ul><li>选择和采用工具的目标和依据是什么？</li><li>选择工具的过程如何？</li><li>如何对工具进行技术评价？需要考虑哪些因素？</li></ul></li></ul><h3 id="2-软件开发工具的采用过程"><a href="#2-软件开发工具的采用过程" class="headerlink" title="2. 软件开发工具的采用过程"></a>2. 软件开发工具的采用过程</h3><ul><li>软件开发工具作为软件开发过程和活动的一种辅助支持手段，具有重要作用</li><li>随着软件开发新技术、新方法和新概念的不断产生、发展，结合了这些新思想的软件开发工具也层出不穷</li><li>如何选择合适的开发工具是摆在开发组织面前的一项重要任务</li><li>国际标准化组织和国际电工委员会1999年发布了针对CASE工具采用的技术报告ISO&#x2F;IECTR14471《信息技术工具采用指南》，把CASE工具的采用工作划分为：<ul><li>1个主过程</li><li>4个子过程</li></ul></li></ul><p>工具采用过程如下图所示：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220315143223817.png" alt="image-20220315143223817" style="zoom:50%;"><h4 id="2-1-准备过程的四个活动"><a href="#2-1-准备过程的四个活动" class="headerlink" title="2.1 准备过程的四个活动"></a>2.1 准备过程的四个活动</h4><ol><li>设定目标</li><li>验证可行性和可测量性</li><li>制定方针</li><li>制定计划</li></ol><h5 id="2-1-1-设定目标"><a href="#2-1-1-设定目标" class="headerlink" title="2.1.1 设定目标"></a>2.1.1 设定目标</h5><ul><li>定义采购CASE工具高层商业目标，如<ol><li>提高组织竞争力</li><li>提高生产效率</li><li>提高产品质量</li><li>改进软件过程等</li></ol></li></ul><h5 id="2-1-2-验证可行性"><a href="#2-1-2-验证可行性" class="headerlink" title="2.1.2 验证可行性"></a>2.1.2 验证可行性</h5><p><strong>分析、确定组织采购工具在经济上和技术上的可行性</strong></p><h5 id="2-1-3-制定计划"><a href="#2-1-3-制定计划" class="headerlink" title="2.1.3 制定计划"></a>2.1.3 制定计划</h5><ul><li>制定一个具体的执行计划，包括：<ol><li>活动和任务的安排</li><li>成本估算</li><li>监督控制等内容</li></ol></li></ul><h5 id="2-1-4-准备过程的关键因素"><a href="#2-1-4-准备过程的关键因素" class="headerlink" title="2.1.4 准备过程的关键因素"></a>2.1.4 准备过程的关键因素</h5><ol><li>采用过程的目标是否清晰</li><li>采用过程的目标是否可测量</li><li>管理层的支持程度</li><li>工具在什么范围内使用的策略</li><li>是否制定了在组织内推广使用工具的计划</li><li>是否制定了工具采用过程有关的员工培训内容，以保证新旧工具的顺利更换</li></ol><h4 id="2-2-评价和选择过程"><a href="#2-2-评价和选择过程" class="headerlink" title="2.2 评价和选择过程"></a>2.2 评价和选择过程</h4><ul><li>评价和选择过程是为了从众多的候选工具中确定最合适的工具，以确保推荐的工具满足组织的目标要求</li><li>关键因素：<ol><li>对组织需要工具的需求加以构造，列出属于该工具的若干特性和子特性</li><li>对特性进行评价和测量</li><li>根据评价结果决定选择的工具</li></ol></li></ul><h4 id="2-3-试验过程"><a href="#2-3-试验过程" class="headerlink" title="2.3 试验过程"></a>2.3 试验过程</h4><ul><li>该过程为工具提供一个真实的试验环境，在这个环境中运行选用的CASE工具，确定工具满足组织的要求</li><li>该过程由四个活动组成<ol><li>起始试验</li><li>试验性能</li><li>评价试验</li><li>下一步决策</li></ol></li></ul><h4 id="2-4-转换过程"><a href="#2-4-转换过程" class="headerlink" title="2.4 转换过程"></a>2.4 转换过程</h4><ul><li>转换过程是从当前工作流程或工作习惯转为在整个组织内推广使用新工具的过程；这一过程由五个活动组成<ol><li>初始转换过程</li><li>培训</li><li>制度化</li><li>监控和持续支持</li><li>评价采用项目完成情况</li></ol></li></ul><h3 id="3-工具的评价与选择"><a href="#3-工具的评价与选择" class="headerlink" title="3. 工具的评价与选择"></a>3. 工具的评价与选择</h3><ul><li>工具的评价与选择，是对工具的质量特性进行测量和评级，以便为最终选择提供客观和可信的依据</li><li>评价方面包括：<ol><li>软件工具的一般特性</li><li>软件工具对开发过程、管理过程、维护过程等的特殊支持</li></ol></li></ul><h4 id="3-1-工具的评价选择标准"><a href="#3-1-工具的评价选择标准" class="headerlink" title="3.1 工具的评价选择标准"></a>3.1 工具的评价选择标准</h4><ul><li>工具的评价和选择标准包括:<ol><li>ISO&#x2F;IECTR14012《信息技术CASE工具的评价与选择指南》</li><li>ISO&#x2F;IEC9126《信息技术软件产品评价质量特性及其使用指南》</li><li>技术评价过程就是根据组织要求和评价标准选择一个开发工具的工程</li></ol></li></ul><h4 id="3-2-评价和选择过程的子过程"><a href="#3-2-评价和选择过程的子过程" class="headerlink" title="3.2 评价和选择过程的子过程"></a>3.2 评价和选择过程的子过程</h4><ul><li>工具的评价和选择过程包括四个子过程及13个活动：<ol><li>初始准备过程</li><li>构造过程</li><li>评价过程</li><li>选择过程</li></ol></li></ul><h5 id="3-2-1初始准备过程"><a href="#3-2-1初始准备过程" class="headerlink" title="3.2.1初始准备过程"></a>3.2.1初始准备过程</h5><ul><li>初始准备过程的目的是定义评价和选择工具具体目标和要求，由三个活动组成<ol><li>设定目标<br>提出需要CASE工具完成的功能，限制条件（成本，进度）以及获取方式（购买，开发等）</li><li>建立选择准则<br>对目标进行分解，构建选择的量化准测</li><li>制定项目计划<br>制定包括小组成员、工作进度在内的计划</li></ol></li></ul><h5 id="3-2-2-构造过程"><a href="#3-2-2-构造过程" class="headerlink" title="3.2.2 构造过程"></a>3.2.2 构造过程</h5><ul><li>构造过程的目的是根据选择工具的特性，将工具的要求细化，选择可能满足要求的工具，确定候选工具列表的过程，包括三个活动<ol><li>需求分析</li><li>收集工具信息</li><li>确定候选工具列表</li></ol></li></ul><h5 id="3-2-3-评价过程"><a href="#3-2-3-评价过程" class="headerlink" title="3.2.3 评价过程"></a>3.2.3 评价过程</h5><ul><li>评价过程的目的是产生技术评价报告，该报告将作为选择过程的主要输入信息，这一过程包括三个活动：<ol><li>评价的准备</li><li>评价CASE工具</li><li>报告评价结果</li></ol></li></ul><h6 id="3-2-3-1-评价过程的准备活动"><a href="#3-2-3-1-评价过程的准备活动" class="headerlink" title="3.2.3.1 评价过程的准备活动"></a>3.2.3.1 评价过程的准备活动</h6><ul><li>评价准备最终确定评价计划中的各种评价细节，包括：<ol><li>评价的场合</li><li>评价活动的进度安排</li><li>工具子特性用到的度量、等级等</li></ol></li></ul><h6 id="3-2-3-2-评价过程的评价活动"><a href="#3-2-3-2-评价过程的评价活动" class="headerlink" title="3.2.3.2 评价过程的评价活动"></a>3.2.3.2 评价过程的评价活动</h6><ul><li>评价过程的评价活动是将每个候选工具与选定的特性进行比较，依次完成测量、评级和评估工作<ol><li>测量是检查工具本身特有的信息，如功能、操作环境、限制条件等</li><li>评级是将测量值与评价计划中的定义值进行比较，确定等级</li><li>评估是使用评级结果及评估标准对照组织要求选定的特性和子特性进行评估</li></ol></li></ul><p>例：Jmeter与LoadRunner比较:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220315151019157.png" alt="image-20220315151019157" style="zoom:50%;"><h6 id="3-2-3-3-评价过程报告评价结果"><a href="#3-2-3-3-评价过程报告评价结果" class="headerlink" title="3.2.3.3 评价过程报告评价结果"></a>3.2.3.3 评价过程报告评价结果</h6><ul><li>评价活动的最终结果是产生评价报告，评价报告包括以下内容：<ol><li>关于工具本身的信息</li><li>关于评价过程的信息</li><li>评价结果的信息</li></ol></li></ul><h5 id="3-2-4-选择过程"><a href="#3-2-4-选择过程" class="headerlink" title="3.2.4 选择过程"></a>3.2.4 选择过程</h5><ul><li>选择过程是从评价报告的候选工具列表中确定最适合工具的过程，由四个活动组成<ol><li>选择准备</li><li>应用选择算法</li><li>推荐一个选择决定</li><li>确认选择</li></ol></li></ul><h6 id="3-2-4-1-选择过程的选择准备"><a href="#3-2-4-1-选择过程的选择准备" class="headerlink" title="3.2.4.1 选择过程的选择准备"></a>3.2.4.1 选择过程的选择准备</h6><ul><li>选择准备主要内容是最终确定各项选择准则，定义一种选择算法</li><li>常用的选择算法：<ol><li>基于成本的选择算法</li><li>基于得分的选择算法</li><li>基于排名的选择算法</li></ol></li></ul><h6 id="3-2-4-2-选择过程应用选择算法"><a href="#3-2-4-2-选择过程应用选择算法" class="headerlink" title="3.2.4.2 选择过程应用选择算法"></a>3.2.4.2 选择过程应用选择算法</h6><ul><li>应用选择算法是指把评价结果作为选择算法的输入，与候选工具相关的信息作为输出，每个工具的评价结果提供了该工具的一个技术总结，这个总结归纳为选择算法所规定的级别</li><li>选择算法将各个工具的评价结果汇总起来，给决策者提供一个分数比较</li></ul><h6 id="3-2-4-3-选择过程的选择决定"><a href="#3-2-4-3-选择过程的选择决定" class="headerlink" title="3.2.4.3 选择过程的选择决定"></a>3.2.4.3 选择过程的选择决定</h6><p>选择决定就是推荐一个或一组最合适的工具</p><h6 id="3-2-4-4-选择过程的选择确认"><a href="#3-2-4-4-选择过程的选择确认" class="headerlink" title="3.2.4.4 选择过程的选择确认"></a>3.2.4.4 选择过程的选择确认</h6><ul><li>选择确认就是将推荐的选择决定和组织最初的目标进行比较</li><li>如果确认这一个推荐结果，说明该工具能够满足组织要求</li><li>如果没有合适的工具存在，也应该能确定开发新的工具或修改一个现有的工具以满足要求</li></ul><h4 id="3-3-数据库工具的选择"><a href="#3-3-数据库工具的选择" class="headerlink" title="3.3 数据库工具的选择"></a>3.3 数据库工具的选择</h4><ul><li>数据库开发工具种类众多</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220315151623768.png" alt="image-20220315151623768" style="zoom:67%;"><h5 id="3-3-1-数据库的市场份额"><a href="#3-3-1-数据库的市场份额" class="headerlink" title="3.3.1 数据库的市场份额"></a>3.3.1 数据库的市场份额</h5><ul><li>2015年大公司数据库市场份额</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220315151718525.png" alt="image-20220315151718525" style="zoom:67%;"><h5 id="3-3-2-数据库开发工具的变化趋势"><a href="#3-3-2-数据库开发工具的变化趋势" class="headerlink" title="3.3.2 数据库开发工具的变化趋势"></a>3.3.2 数据库开发工具的变化趋势</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220315151751722.png" alt="image-20220315151751722" style="zoom: 80%;"><h5 id="3-3-3-数据库的客户流向"><a href="#3-3-3-数据库的客户流向" class="headerlink" title="3.3.3 数据库的客户流向"></a>3.3.3 数据库的客户流向</h5><ul><li>2016年各数据库的客户流向</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220315151840487.png" alt="image-20220315151840487" style="zoom:50%;"><h3 id="4-工具切换"><a href="#4-工具切换" class="headerlink" title="4. 工具切换"></a>4. 工具切换</h3><ul><li>当软件企业采购了合适的软件工具之后，就要在组织内部推广使用</li><li>如果组织内部原来使用一种软件工具，现在要使用新的工具，就需要进行工具的切换，工具切换包括两个过程：<ol><li>系统切换的准备工作</li><li>工具切换和运行方案选择</li></ol></li></ul><h4 id="4-1-系统切换的准备工作"><a href="#4-1-系统切换的准备工作" class="headerlink" title="4.1 系统切换的准备工作"></a>4.1 系统切换的准备工作</h4><ul><li>系统切换的准备工作包括四个步骤<ol><li>管理部门制定切换计划书</li><li>切换人员培训</li><li>数据准备</li><li>制定系统切换的应急方案</li></ol></li></ul><h5 id="4-1-1-管理部门制定切换计划书"><a href="#4-1-1-管理部门制定切换计划书" class="headerlink" title="4.1.1 管理部门制定切换计划书"></a>4.1.1 管理部门制定切换计划书</h5><ul><li>由于工具切换涉及到整个开发团队或企业，因此管理部门需要制定详细的切换计划书，保证切换的顺利进行，包括：</li><li>切换各阶段的进展时间</li><li>参与人员</li><li>设备到位</li><li>资金配套等</li></ul><h5 id="4-1-2-切换人员培训"><a href="#4-1-2-切换人员培训" class="headerlink" title="4.1.2 切换人员培训"></a>4.1.2 切换人员培训</h5><ul><li>在系统切换前，需要对整个开发团对进行培训，让他们从技术，心理以及习惯上适应新系统，培训包括：<ol><li>新工具的特点</li><li>系统切换带来的变化和改善</li><li>新工具的使用方法和注意事项等</li></ol></li></ul><h5 id="4-1-3-切换数据准备"><a href="#4-1-3-切换数据准备" class="headerlink" title="4.1.3 切换数据准备"></a>4.1.3 切换数据准备</h5><ul><li>数据准备工作包括：<ol><li>对老系统数据进行备份</li><li>对重要数据要有专人进行核对</li><li>对没有的数据进行手工输入</li><li>对旧系统数据进行合并与转换</li></ol></li></ul><h5 id="4-1-4-应急方案"><a href="#4-1-4-应急方案" class="headerlink" title="4.1.4 应急方案"></a>4.1.4 应急方案</h5><ul><li>应急方案主要是为了处理在系统切换工程中可能发生的意外</li><li>两个作用：<ol><li>保障系统平稳切换</li><li>在新系统无法正常运行时快速切换回老系统，减少风险</li></ol></li></ul><h4 id="4-2-工具的切换和运行方案选择"><a href="#4-2-工具的切换和运行方案选择" class="headerlink" title="4.2 工具的切换和运行方案选择"></a>4.2 工具的切换和运行方案选择</h4><ul><li>新工具开发完成或购买后，经过调试与测试，就可以投入使用，此时必须将所有的老业务从原来的老系统切换到新构建的系统</li><li>有三种切换的方法：<ol><li>直接切换</li><li>并行切换</li><li>分段切换</li></ol></li></ul><h5 id="4-2-1-直接切换"><a href="#4-2-1-直接切换" class="headerlink" title="4.2.1 直接切换"></a>4.2.1 直接切换</h5><ul><li>直接切换是指在指定时刻，旧系统停止使用，同时新系统立即开始运行</li><li>优点：切换简单，节约人力、物力和时间</li><li>缺点：风险过大，一旦切换失败会影响到公司的正常运转</li></ul><h5 id="4-2-2-并行切换"><a href="#4-2-2-并行切换" class="headerlink" title="4.2.2 并行切换"></a>4.2.2 并行切换</h5><ul><li>并行切换是在一段时间内，新、旧系统各自独立运行，完成相应的工作，并可以在两个系统间对比，审核，实现平稳过渡</li><li>优点：切换安全，风险最小</li><li>缺点：两套系统同时维护，投入的人力物力加倍，转换费用最高</li></ul><h5 id="4-2-3-分段切换"><a href="#4-2-3-分段切换" class="headerlink" title="4.2.3 分段切换"></a>4.2.3 分段切换</h5><ul><li>分段切换是指分阶段、分系统地逐步实现新旧系统的交替</li><li>优点：既可避免直接方式的风险，又可避免并行切换方式的双倍代价</li><li>缺点：需要设计转换过程，较复杂</li></ul><h3 id="5-工具的维护"><a href="#5-工具的维护" class="headerlink" title="5. 工具的维护"></a>5. 工具的维护</h3><ul><li>软件开发工具和其他应用软件一样，生命周期会长达数年，在这期间，需要对工具进行维护才能达到良好的使用效果</li><li>维护必要性和目的</li><li>维护类型</li><li>维护内容</li><li>维护管理</li></ul><h4 id="5-1维护的必要性和目的"><a href="#5-1维护的必要性和目的" class="headerlink" title="5.1维护的必要性和目的"></a>5.1维护的必要性和目的</h4><ul><li>维护必要性：软件工具可能存在不尽人意的地方，比如运行效率和方便程度；另外管理环境的变化可能会对工具提出新的要求</li><li>维护目的：保证软件开发工具正常可靠的运行，并能使软件开发工具得到改善和提高，以充分发挥作用</li></ul><h4 id="5-2-软件开发工具维护的类型"><a href="#5-2-软件开发工具维护的类型" class="headerlink" title="5.2 软件开发工具维护的类型"></a>5.2 软件开发工具维护的类型</h4><ul><li>按照每次进行维护的具体目标，软件维护可以分为四类：<ol><li>完善性维护</li><li>适应性维护</li><li>纠错性维护</li><li>预防性维护</li></ol></li></ul><h5 id="5-2-1-完善性维护"><a href="#5-2-1-完善性维护" class="headerlink" title="5.2.1 完善性维护"></a>5.2.1 完善性维护</h5><ul><li>完善性维护就是在软件开发工具使用期间不断完善和加强系统功能和性能，满足用户日益增长的需求而进行的维护工作</li><li>完善性维护在整个维护工作中约占50%的工作量</li></ul><h5 id="5-2-2-适应性维护"><a href="#5-2-2-适应性维护" class="headerlink" title="5.2.2 适应性维护"></a>5.2.2 适应性维护</h5><ul><li>适应性维护是指为了让软件工具适应新的运行环境而进行的维护活动</li><li>适应性维护在整个维护工作中约占25%的工作量</li></ul><h5 id="5-2-3-纠错性维护"><a href="#5-2-3-纠错性维护" class="headerlink" title="5.2.3 纠错性维护"></a>5.2.3 纠错性维护</h5><ul><li>纠错性维护的目的在于纠正开发期间未能发现的遗留错误，对这些错误的相继发现，并对它们进行诊断和改正的过程称为纠错性维护</li><li>纠错性维护在整个维护工作中约占21%的工作量</li></ul><h5 id="5-2-4-预防性维护"><a href="#5-2-4-预防性维护" class="headerlink" title="5.2.4 预防性维护"></a>5.2.4 预防性维护</h5><ul><li>预防性维护是指维护人员主动发现系统使用中的缺陷并进行维护</li><li>预防性维护在整个维护工作中约占4%的工作量</li></ul><h4 id="5-3-软件开发工具维护的内容"><a href="#5-3-软件开发工具维护的内容" class="headerlink" title="5.3 软件开发工具维护的内容"></a>5.3 软件开发工具维护的内容</h4><ul><li>软件开发工具包括五个方面的维护内容<ol><li>程序的维护</li><li>数据文件的维护</li><li>代码的维护</li><li>机器、设备的维护</li><li>机构和人员变动的维护等</li></ol></li></ul><h4 id="5-4-软件开发工具维护的管理"><a href="#5-4-软件开发工具维护的管理" class="headerlink" title="5.4 软件开发工具维护的管理"></a>5.4 软件开发工具维护的管理</h4><ul><li>软件开发维护管理工作的执行需要有一个正规的程序：<ol><li>提出修改要求</li><li>领导批准</li><li>分配任务</li><li>验收成果</li><li>登记修改情况</li></ol></li></ul><h3 id="6-工具的采购"><a href="#6-工具的采购" class="headerlink" title="6. 工具的采购"></a>6. 工具的采购</h3><ul><li>软件工具的采购可以采取招标和投标的方式</li><li>招标和投标是一种竞价方式，通常以公开的形式进行</li><li>投标方通常由很多商家构成</li><li>招标人通过对比不同投标方的方案，选择最优的方案中标</li></ul><h4 id="6-1-招投标的基本法律主体"><a href="#6-1-招投标的基本法律主体" class="headerlink" title="6.1 招投标的基本法律主体"></a>6.1 招投标的基本法律主体</h4><ul><li>招投标至少包含两类主体：招标人和投标人</li><li>招标人也叫招标采购人，是采用招标方式进行货物、工程或服务采购的法人或其他社会经济组织</li><li>投标人是按照招标文件的规定参加投标竞争的自然人、法人或其他社会经济组织</li></ul><h5 id="6-1-1-招标人的权利"><a href="#6-1-1-招标人的权利" class="headerlink" title="6.1.1 招标人的权利"></a>6.1.1 招标人的权利</h5><ul><li>招标人有以下权利：<ol><li>自行组织或委托招标代理机构进行招标</li><li>自由选择招标代理机构并核验资质</li><li>委托招标代理机构招标时，可以参与整个招标过程，其代表可进入评标委员会</li><li>要求投标人提供有关资质情况的资料</li><li>根据评标委员会推荐的候选人确定中标人</li></ol></li></ul><h5 id="6-1-2-招标人的义务"><a href="#6-1-2-招标人的义务" class="headerlink" title="6.1.2 招标人的义务"></a>6.1.2 招标人的义务</h5><ul><li>招标人有以下义务：<ol><li>不得侵犯投标人的合法权益</li><li>委托招标代理机构进行招标时，应当向其提供招标所需的有关资料并支付委托费</li><li>接受招投标管理机构的监督管理</li><li>与中标人签订并履行合同</li></ol></li></ul><h5 id="6-1-3-投标人的权利"><a href="#6-1-3-投标人的权利" class="headerlink" title="6.1.3 投标人的权利"></a>6.1.3 投标人的权利</h5><ul><li>投标人有以下权利：<ol><li>平等的获得招标信息</li><li>要求招标人或招标代理机构对招标文件中的有关问题进行答疑</li><li>控告、检举招标过程中的违法行为</li></ol></li></ul><h5 id="6-1-4-投标人的义务"><a href="#6-1-4-投标人的义务" class="headerlink" title="6.1.4 投标人的义务"></a>6.1.4 投标人的义务</h5><ul><li>投标人有以下义务：<ol><li>保证所提供的投标文件的真实性</li><li>按招标人或招标代理机构的要求对投标文件的有关问题进行答疑</li><li>提供投标保证金或其他形式的担保</li><li>中标后与招标人签订并履行合同，未经招标人同意不得转让或分包合同</li></ol></li></ul><h4 id="6-2-投标失效的情形"><a href="#6-2-投标失效的情形" class="headerlink" title="6.2 投标失效的情形"></a>6.2 投标失效的情形</h4><ul><li>在投标生效后，遇到下列情形之一，投标失效，投标人不再受其约束:<ol><li>投标人不符合招标文件的要求</li><li>投标有效期届满</li><li>投标人终止，如死亡、解散、破产等</li></ol></li></ul><h4 id="6-3-中标和合同成立"><a href="#6-3-中标和合同成立" class="headerlink" title="6.3 中标和合同成立"></a>6.3 中标和合同成立</h4><ul><li>招投标双方签订合同，合同成立可以分为要约和承诺两个阶段<ol><li>要约：招标</li><li>承诺：合同</li></ol></li></ul><h4 id="6-4-采购的其它形式"><a href="#6-4-采购的其它形式" class="headerlink" title="6.4 采购的其它形式"></a>6.4 采购的其它形式</h4><ul><li>采购方根据掌握信息的多少，除了招标采购外，还可采用其它形式：<ol><li>竞争性谈判<br>在投标人数量低于最低招标要求的情况下，可以采用竞争性谈判</li><li>询价采购<br>事先选定合格供应商范围，然后询价采购</li><li>单一来源采购<br>与某家企业已经建立良好合作信任</li></ol></li></ul><h3 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h3><ul><li>软件开发工具的采用过程包括：<ol><li>准备过程：目标、可行性、方针、计划</li><li>评价和选择过程：准备、构造、评价和选择</li><li>试验过程：起始、试验、评价和决策</li><li>转换过程：起始、培训、制度、监控和评价</li></ol></li><li>软件维护类型包括：完善性维护、适应性维护、纠错性维护和预防性维护</li><li>软件采购方式：招投标、竞争性谈判、询价采购、单一来源采购</li></ul><h2 id="第四章-软件需求工具"><a href="#第四章-软件需求工具" class="headerlink" title="第四章 软件需求工具"></a>第四章 软件需求工具</h2><p>提纲：</p><ul><li>软件需求概述</li><li>软件需求工程</li><li>软件需求工具概述</li><li>需求分析方法</li><li>典型的需求分析工具介绍</li></ul><h3 id="1-软件需求概述"><a href="#1-软件需求概述" class="headerlink" title="1. 软件需求概述"></a>1. 软件需求概述</h3><ul><li>需求的重要性</li><li>软件需求的质量高低决定了软件产品的成败和质量</li><li>据统计，软件中的错误大约有15%来源于软件需求；软件失败大约有50%是需求的不合理所致</li></ul><h4 id="1-1-需求是软件开发成败的关键"><a href="#1-1-需求是软件开发成败的关键" class="headerlink" title="1.1 需求是软件开发成败的关键"></a>1.1 需求是软件开发成败的关键</h4><p>软件的最大两个问题是：需求规格说明及管理客户需求</p><ol><li>需求规格说明</li><li>管理客户需求</li><li>建档</li><li>软件测试</li><li>项目管理</li><li>编码</li></ol><h4 id="1-2-软件需求错误的代价"><a href="#1-2-软件需求错误的代价" class="headerlink" title="1.2 软件需求错误的代价"></a>1.2 软件需求错误的代价</h4><ul><li>软件需求的错误在后期会被放大</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322150935467.png" alt="image-20220322150935467" style="zoom:50%;"><h3 id="2-软件需求工程"><a href="#2-软件需求工程" class="headerlink" title="2 软件需求工程"></a>2 软件需求工程</h3><ul><li>软件需求工程是需求供需双方采取被证明行之有效的原理、方法，通过使用适当的工具和符号体系，正确、全面地描述用户待开发系统的行为特征、质量要求、约束条件的过程</li><li>简单讲，软件需求工程就是获取用户需求的过程</li></ul><h4 id="2-1需求工程的目标"><a href="#2-1需求工程的目标" class="headerlink" title="2.1需求工程的目标"></a>2.1需求工程的目标</h4><ul><li>需求工程的目标是得到清晰、一致且无二义的需求模型</li><li>通常使用需求规格说明书（SRS）的形式来定义待开发系统的所有外部特征和内部质量属性</li></ul><h4 id="2-2需求工程涉及的角色"><a href="#2-2需求工程涉及的角色" class="headerlink" title="2.2需求工程涉及的角色"></a>2.2需求工程涉及的角色</h4><ul><li>需求工程涉及到的角色包括：<ol><li>客户</li><li>使用者</li><li>系统分析师</li><li>项目开发人员</li><li>项目管理人员</li></ol></li></ul><h4 id="2-3-需求工程的基本任务"><a href="#2-3-需求工程的基本任务" class="headerlink" title="2.3 需求工程的基本任务"></a>2.3 需求工程的基本任务</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151137059.png" alt="image-20220322151137059" style="zoom:50%;"><h5 id="2-3-1-需求获取"><a href="#2-3-1-需求获取" class="headerlink" title="2.3.1 需求获取"></a>2.3.1 需求获取</h5><ul><li>需求获取过程将归纳和整理用户提出的各种问题和需求，从非形式化的陈述中提取用户需求</li><li>需求获取的工具是Word等文字记录工具</li></ul><h5 id="2-3-2-需求分析"><a href="#2-3-2-需求分析" class="headerlink" title="2.3.2 需求分析"></a>2.3.2 需求分析</h5><ul><li>需求分析是系统分析员将利用特定的方法和工具将需求获取过程中得到的非形式化需求进行形式化描述，最终产生需求规格说明书（SRS）</li><li>需求分析的方法包括：结构化方法，面向对象方法和原型法</li><li>需求分析的工具包括 ：DFD图，UML用例图等</li></ul><h6 id="2-3-2-1-需求的形式化表达"><a href="#2-3-2-1-需求的形式化表达" class="headerlink" title="2.3.2.1 需求的形式化表达"></a>2.3.2.1 需求的形式化表达</h6><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151300256.png" alt="image-20220322151300256" style="zoom:50%;"><h5 id="2-3-3-需求验证"><a href="#2-3-3-需求验证" class="headerlink" title="2.3.3 需求验证"></a>2.3.3 需求验证</h5><ul><li>需求验证是对需求规格说明书（SRS）的质量进行检验的过程</li><li>这个过程确定SRS是否存在需求遗漏、需求错误以及需求不一致的地方，如果需求不合格则需要进一步进行需求工程</li><li>需求验证的工具有Xupper（业务建模，需求追溯）</li></ul><h4 id="2-4-需求变更管理"><a href="#2-4-需求变更管理" class="headerlink" title="2.4 需求变更管理"></a>2.4 需求变更管理</h4><ul><li>保持需求稳定具有重要意义</li><li>需求变更管理为保证需求稳定提供支持，是一个正规的流程</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151433056.png" alt="image-20220322151433056" style="zoom:80%;"><h4 id="2-5-需求的层次性"><a href="#2-5-需求的层次性" class="headerlink" title="2.5 需求的层次性"></a>2.5 需求的层次性</h4><p>软件需求具有不同的层次性，将形成不同的需求，包括：</p><ul><li>业务需求（Business Requirement）</li><li>用户需求（User Requirement）</li><li>功能需求（Functional Requirement）</li></ul><h5 id="2-5-1-业务需求"><a href="#2-5-1-业务需求" class="headerlink" title="2.5.1 业务需求"></a>2.5.1 业务需求</h5><ul><li>业务需求反映了用户对系统和产品的高层次目标要求，他们是用户组织机构流程的再现和模拟，是从用户组织机构工作流程角度进行的需求描述</li><li>业务需求使用流程图、活动图等来表达</li><li>制作业务需求的工具包括：BPwin，Microsoft Visio，UML工具等</li></ul><h6 id="2-5-1-1-业务流程举例1"><a href="#2-5-1-1-业务流程举例1" class="headerlink" title="2.5.1.1 业务流程举例1"></a>2.5.1.1 业务流程举例1</h6><ul><li><p>医生导出睡眠数据进行分析的流程</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151704490.png" alt="image-20220322151704490" style="zoom:50%;"></li></ul><h6 id="2-5-1-2-业务流程举例2"><a href="#2-5-1-2-业务流程举例2" class="headerlink" title="2.5.1.2 业务流程举例2"></a>2.5.1.2 业务流程举例2</h6><p><strong>公积金提取办理流程图</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151757329.png" alt="image-20220322151757329" style="zoom:50%;"><h5 id="2-5-2-用户需求"><a href="#2-5-2-用户需求" class="headerlink" title="2.5.2 用户需求"></a>2.5.2 用户需求</h5><ul><li>用户需求描述了用户使用产品必须要完成的任务</li><li>用户需求从用户的角度看系统，一般通过用例图来表达</li><li>用户需求的表达工具有 ：UML用例图</li></ul><h6 id="2-5-2-1-用户需求举例1"><a href="#2-5-2-1-用户需求举例1" class="headerlink" title="2.5.2.1 用户需求举例1"></a>2.5.2.1 用户需求举例1</h6><p>点餐系统的用例图：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151903183.png" alt="image-20220322151903183" style="zoom:50%;"><h6 id="2-5-2-2-用户需求举例2"><a href="#2-5-2-2-用户需求举例2" class="headerlink" title="2.5.2.2 用户需求举例2"></a>2.5.2.2 用户需求举例2</h6><p><strong>学生成绩管理系统的用例图</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322151947133.png" alt="image-20220322151947133" style="zoom:50%;"><h5 id="2-5-3-功能需求"><a href="#2-5-3-功能需求" class="headerlink" title="2.5.3 功能需求"></a>2.5.3 功能需求</h5><ul><li>功能需求定义了开发人员必须实现的软件功能，从而使用户能够完成任务，满足其业务需求</li><li>功能需求从开发人员的角度看系统，可以使用结构图表达（模块图，接口）</li><li>功能需求的表达工具有：Microsoft Visio</li></ul><h6 id="2-5-3-1-功能需求举例1"><a href="#2-5-3-1-功能需求举例1" class="headerlink" title="2.5.3.1 功能需求举例1"></a>2.5.3.1 功能需求举例1</h6><p>社交网站功能需求图：</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322152048158.png" alt="image-20220322152048158" style="zoom:50%;"><h6 id="2-5-3-2-功能需求举例2"><a href="#2-5-3-2-功能需求举例2" class="headerlink" title="2.5.3.2 功能需求举例2"></a>2.5.3.2 功能需求举例2</h6><p>基础架构平台（IaaS）的功能需求</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322152135885.png" alt="image-20220322152135885" style="zoom:50%;"><h5 id="2-5-4-软件不同层次需求的关系"><a href="#2-5-4-软件不同层次需求的关系" class="headerlink" title="2.5.4 软件不同层次需求的关系"></a>2.5.4 软件不同层次需求的关系</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322152237600.png" alt="image-20220322152237600" style="zoom:50%;"><h5 id="2-5-5-软件需求文档的组成"><a href="#2-5-5-软件需求文档的组成" class="headerlink" title="2.5.5 软件需求文档的组成"></a>2.5.5 软件需求文档的组成</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322152312226.png" alt="image-20220322152312226" style="zoom:50%;"><h3 id="3-软件需求工具概述"><a href="#3-软件需求工具概述" class="headerlink" title="3 软件需求工具概述"></a>3 软件需求工具概述</h3><ul><li>软件需求工具是辅助系统分析人员对用户需求进行提取、整理和分析的辅助工具</li><li>软件需求工具使用形式化的图形符号以及形式化的描述语言来完成软件需求的开发</li></ul><h4 id="3-1-软件需求工具的分类"><a href="#3-1-软件需求工具的分类" class="headerlink" title="3.1 软件需求工具的分类"></a>3.1 软件需求工具的分类</h4><ul><li>可以按照不同的方式对软件需求分析工具进行分类：<ol><li>按自动化程度进行分类</li><li>按分析方法进行分类</li><li>按特定的应用领域进行分类</li></ol></li></ul><h5 id="3-1-1-按自动化程度进行分类"><a href="#3-1-1-按自动化程度进行分类" class="headerlink" title="3.1.1 按自动化程度进行分类"></a>3.1.1 按自动化程度进行分类</h5><ul><li>按照自动化程度可以分类两类：<ol><li>人工方式为主的分析工具，使用Word等工具按照结构化分析和设计技术进行需求分析</li><li>自动化需求分析工具，通过保证需求信息的一致性和完整性来实现需求分析的自动化，比如Xupper工具</li></ol></li></ul><h5 id="3-1-2-按照分析方法进行分类"><a href="#3-1-2-按照分析方法进行分类" class="headerlink" title="3.1.2 按照分析方法进行分类"></a>3.1.2 按照分析方法进行分类</h5><ul><li>按照支持分析方法对需求工具分类：<ol><li>支持结构化分析方法需求分析工具，这类工具支持数据流图和数据字典的生成和管理，比如BPwin</li><li>支持面向对象方法的需求分析工具，这类工具支持UML语言的表达，比如Rational Rose</li><li>支持原型化分析的需求分析工具，这类工具支持快速生成原型，比如VB</li></ol></li></ul><h6 id="3-1-2-1-手机APP原型开发工具"><a href="#3-1-2-1-手机APP原型开发工具" class="headerlink" title="3.1.2.1 手机APP原型开发工具"></a>3.1.2.1 手机APP原型开发工具</h6><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322152630137.png" alt="image-20220322152630137" style="zoom:50%;"><h5 id="3-1-3-按照特定的领域进行分类"><a href="#3-1-3-按照特定的领域进行分类" class="headerlink" title="3.1.3 按照特定的领域进行分类"></a>3.1.3 按照特定的领域进行分类</h5><ul><li>按照支持的业务领域进行分类：<ol><li>支持ERP领域的需求分析工具</li><li>支持实时系统的需求分析工具</li><li>支持其它系统的需求分析工具</li></ol></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220322152726901.png" alt="image-20220322152726901" style="zoom:50%;"><h4 id="3-2-需求分析工具的功能特性"><a href="#3-2-需求分析工具的功能特性" class="headerlink" title="3.2 需求分析工具的功能特性"></a>3.2 需求分析工具的功能特性</h4><ul><li>针对不同的设计方法需求分析工具应该尽量满足该设计方法的功能特性<ol><li>结构化方法</li><li>面向对象的方法</li><li>共性</li></ol></li></ul><h5 id="3-2-1-针对结构化方法"><a href="#3-2-1-针对结构化方法" class="headerlink" title="3.2.1 针对结构化方法"></a>3.2.1 针对结构化方法</h5><ol><li>支持多种分析与设计方法（SA、SADT，面向数据结构等</li><li>支持数据流图（DFD）的编辑功能</li><li>图形的一致化检查，防止数据项的重名等错误</li></ol><h5 id="3-2-2-针对面向对象的方法"><a href="#3-2-2-针对面向对象的方法" class="headerlink" title="3.2.2 针对面向对象的方法"></a>3.2.2 针对面向对象的方法</h5><ol><li>支持多种面向对象方法（如OMT、OOSE以及UML）</li><li>支持类定义和类关系描述</li><li>支持对象的交互描述</li><li>一致性检查，检查对象关系的一致性</li></ol><h5 id="3-2-3-共同特性"><a href="#3-2-3-共同特性" class="headerlink" title="3.2.3 共同特性"></a>3.2.3 共同特性</h5><ol><li>支持信息仓库</li><li>支持版本控制</li><li>支持脚本</li><li>支持生成需求规格说明书</li><li>图形化界面</li><li>形式化的需求表达</li></ol><h4 id="3-3-衡量需求工具的依据"><a href="#3-3-衡量需求工具的依据" class="headerlink" title="3.3 衡量需求工具的依据"></a>3.3 衡量需求工具的依据</h4><ul><li>可以使用以下方法对需求工具进行衡量：<ol><li>使用的方便程度，图形化界面</li><li>与设计工具的衔接程度</li><li>资源占用情况</li><li>是否提供错误检测机制</li><li>用户领域知识的提示功能</li></ol></li></ul><h3 id="4-需求分析具体方式"><a href="#4-需求分析具体方式" class="headerlink" title="4 需求分析具体方式"></a>4 需求分析具体方式</h3><ul><li>需求分析的具体方式包括：自顶向下的分析和自底向上的分析</li><li>自顶向下的分析方式采用逐层分解的方式分析系统，用数据流图和数据字典描述系统</li></ul><h4 id="4-1-数据流图"><a href="#4-1-数据流图" class="headerlink" title="4.1 数据流图"></a>4.1 数据流图</h4><ul><li>数据流图（Data Flow Diagram DFD）是从数据传递和加工的角度，以图形化的方式刻画数据流从输入到输出的变换过程。其包含三种基本元素：<ol><li>命名的箭头表示数据流</li><li>圆圈表示数据处理</li><li>矩形或其他形状表示数据存贮</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件开发环境与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>introduction to software engineer</title>
      <link href="/2022/02/28/introduction%20to%20software%20engineer/"/>
      <url>/2022/02/28/introduction%20to%20software%20engineer/</url>
      
        <content type="html"><![CDATA[<h1 id="introduction-to-software-engineer"><a href="#introduction-to-software-engineer" class="headerlink" title="introduction to software engineer"></a>introduction to software engineer</h1><h2 id="1-Software-and-Software-Engineering"><a href="#1-Software-and-Software-Engineering" class="headerlink" title="1.Software and Software Engineering"></a>1.Software and Software Engineering</h2><h3 id="1-1The-Nature-of-Software"><a href="#1-1The-Nature-of-Software" class="headerlink" title="1.1The Nature of Software"></a>1.1The Nature of Software</h3><h4 id="defining-software"><a href="#defining-software" class="headerlink" title="defining software"></a>defining software</h4><p>software is :</p><ol><li>instructions that when executed provide desired features, function and performance</li><li>data structures that enable the programs to adequately manipulate information</li><li>descriptive information in both hard copy and virtual forms that describes the operation and use of the program</li></ol><p><strong>software has one fundamental characteristics that makes it considerably different from hardware: <u>software doesn’t wear out</u></strong></p><p><strong>bathtub curve</strong></p><h4 id="software-Application-Domain"><a href="#software-Application-Domain" class="headerlink" title="software Application Domain"></a>software Application Domain</h4><ul><li>System software</li><li>Application software</li><li>Engineering&#x2F;scientific software</li><li>Embedded software</li><li>Product-line software</li><li>Web&#x2F;mobile applications</li><li>artificial intelligence software</li></ul><h4 id="The-legacy-Software"><a href="#The-legacy-Software" class="headerlink" title="The legacy Software"></a>The legacy Software</h4><p>The legacy software can be described in the following way:</p><p><strong>Legacy software systems were developed decades ago and have been continually modified to meet changes in business requirements and computing platforms</strong></p><p><strong>The proliferation of such systems is causing headaches for large organizations who find them costly to maintain and risky to evolve</strong></p><p>The reason for the legacy software to be fixed only include:</p><ul><li>The software must be adapted to meet the needs of new computing environments of technology</li><li>The software must be enhanced tp implement new business requirements</li><li>The software must be enhanced to make it work with other more modern systems of databases</li><li>The software must be re-architected to make it viable within an evolving computing environment</li></ul><h3 id="1-2"><a href="#1-2" class="headerlink" title="1.2"></a>1.2</h3><h2 id="2-Process-model"><a href="#2-Process-model" class="headerlink" title="2.Process model"></a>2.Process model</h2><h3 id="2-0-Preview"><a href="#2-0-Preview" class="headerlink" title="2.0 Preview"></a>2.0 Preview</h3><p><strong>“Software Process”</strong> Definition: A series of predictable steps (a road map) that helps you deliver a high-quality product on time</p><p>A process provides stability, control, and organization to an activity so that it does not become chaotic</p><p>The process that you adopt depends on the software that you are building.</p><h4 id="2-0-1-Software-process-model"><a href="#2-0-1-Software-process-model" class="headerlink" title="2.0.1 Software process model"></a>2.0.1 <strong>Software process model</strong></h4><ul><li><p><strong>Process model</strong></p><ul><li>Determine the order of stages involved in software development and evolution;</li><li>Establish the transition criteria for progressing from one stage to the next;</li><li><u><strong>Addresses the following software project questions:</strong></u><ul><li><u><strong>What shall we do next?</strong></u></li><li><u><strong>How long shall we continue to do it?</strong></u></li></ul></li></ul></li><li><p>Attempt to organize the software cycle by </p><ul><li>defining activities involved in software production</li><li>order of activities and their reationships</li></ul></li><li><p>Goals of a software process</p><ul><li>standardization</li><li>predictability</li><li>productivity</li><li>high product quality</li><li>ability to plan time and budget requirements</li></ul></li></ul><h4 id="2-0-2-The-reason-for-models"><a href="#2-0-2-The-reason-for-models" class="headerlink" title="2.0.2 The reason for models:"></a>2.0.2 <strong>The reason for models:</strong></h4><ul><li>Software crisis<ul><li>scheduled time and cost exceeded</li><li>user expectations not met</li><li>poor quality</li></ul></li><li>The size and economic value of software applications required appropriate “<u>process models</u>“</li></ul><h4 id="2-0-3-Problems"><a href="#2-0-3-Problems" class="headerlink" title="2.0.3 Problems"></a>2.0.3 Problems</h4><ul><li>The assumptions is that requirements can be fully understood prior to development</li><li>Interaction with the customer occurs only at the beginning(requirements) and end(after delivery)</li></ul><p><strong><u>Unfortunately the assumption almost never holds</u></strong></p><h4 id="2-0-4-Advantages"><a href="#2-0-4-Advantages" class="headerlink" title="2.0.4 Advantages"></a>2.0.4 Advantages</h4><ul><li>Reduce risks by improving visibility</li><li>Allow project changes as the project progresses</li><li>The changes based on feedback from the customer</li></ul><h3 id="2-1-A-generic-process-model"><a href="#2-1-A-generic-process-model" class="headerlink" title="2.1 A generic process model"></a>2.1 A generic process model</h3><h4 id="2-1-1-Process-define"><a href="#2-1-1-Process-define" class="headerlink" title="2.1.1 Process define"></a>2.1.1 Process define</h4><p>**A process was defined as a collection of activities, actions, and tasks that are performed when some product is to be created. **</p><p><strong>Each of the activities, actions, and tasks resides within <u>a framework or model that defines their relationship with the process and with another</u>.</strong></p><p>Each framework activity is populated by a set of software engineering actions</p><p>Each software engineering action is defined by a task set that identifies the work tasks that are to be completed.</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220307143810330.png" style="zoom:50%;"><p><strong>A generic process framework for software engineering defines five framework activities:</strong></p><ul><li>communication</li><li>planning </li><li>modeling</li><li>construction</li><li>deployment</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220307144011382.png" style="zoom:50%;"><h4 id="2-1-2Process-flow"><a href="#2-1-2Process-flow" class="headerlink" title="2.1.2Process flow:"></a>2.1.2<strong>Process flow:</strong></h4><p><strong>Linear flow:</strong></p><p>A linear process flow executes each of the five framework activities in sequence</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f44a28c6aec3a047b5eb880024c6295e.png" alt="img"></p><p><strong>Iterative process flow:</strong></p><p>May repeats one or more of the activities before proceeding to the next</p><img src="https://img-blog.csdnimg.cn/img_convert/cf11e9dccd3c25263b98f6860b214ff0.png" alt="img" style="zoom: 67%;"><p><strong>Evolutionary process flow:</strong></p><p> This executes the activities in a “circular” manner, each circuit through the five activities leads to a more complete version of the software.</p><img src="https://img-blog.csdnimg.cn/img_convert/a8a7615a48f0b6c8d54eb3fbb47fa786.png" alt="img" style="zoom: 67%;"><p><strong>Parallel process flow:</strong></p><p>This executes one or more activities in parallel with other activities(modeling for one aspect of the software might be executed in parallel with construction of another aspect of the software)</p><img src="https://img-blog.csdnimg.cn/img_convert/6417d23c758a1c60a5a4a40beb8c179f.png" alt="img" style="zoom: 67%;"><h3 id="2-2Prescriptive-process-model"><a href="#2-2Prescriptive-process-model" class="headerlink" title="2.2Prescriptive process model"></a>2.2Prescriptive process model</h3><p>Prescriptive process models define a predefined set of process elements and a predictable process work flow</p><h4 id="2-2-1The-waterfall-model"><a href="#2-2-1The-waterfall-model" class="headerlink" title="2.2.1The waterfall model"></a>2.2.1The waterfall model</h4><p>The waterfall model, sometimes called the “linear sequential model”, suggests a systematic, sequential approach to software development</p><p><strong>Waterfall models needs that the requirements for a problem are well understood, this situation is sometimes encountered when well-defined adaptations r enhancements are well defined and reasonably stable</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312131312356.png" alt="image-20220312131312356" style="zoom:50%;"><ul><li>PRO: the most widely used model; a template for use</li><li>CON: inflexible to changing customer requirements, this is a good model to use when requirements are well</li></ul><p>Drawback:</p><ul><li>customer has to state all requirements explicitly; </li><li>doesn’t support change; </li><li>customer can see a working version of the program until code phase.</li></ul><p>The reason for waterfall failure:</p><ol><li>Real projects rarely follow the sequential flow that the model proposes;</li><li>It is often difficult for the customer to state all requirements explicitly;</li><li>The customer must have patience.</li></ol><h4 id="2-2-2Incremental-model"><a href="#2-2-2Incremental-model" class="headerlink" title="2.2.2Incremental model"></a>2.2.2Incremental model</h4><p><strong>Delivers software in small but usable pieces, each piece builds on pieces already delivered:</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312133145520.png" alt="image-20220312133145520" style="zoom:50%;"><p><strong><u>RAD model</u></strong>:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312133509524.png" alt="image-20220312133509524" style="zoom:50%;"><p><strong>Makes heavy use of reusable software components with an extremely short development cycle</strong> </p><ul><li>The RAD model is a high-speed adaptation of the linear sequential model. Project requirements must be well understood and the project scope tightly constrained</li><li>Developers can use component-based construction techniques to build a fully functional system in a short time period</li></ul><p>Pro: may shorten development time significantly<br>Con: the system may not be modularized; performance issue; risk issue</p><h4 id="2-2-3-Prototyping-process-model"><a href="#2-2-3-Prototyping-process-model" class="headerlink" title="2.2.3 Prototyping process model"></a>2.2.3 Prototyping process model</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312135039886.png" alt="image-20220312135039886" style="zoom:50%;"><p><strong>Good first step when customer has a legitimate need, but is clueless about the details, developer needs to resist pressure to extend a rough prototype into a production product</strong></p><p><strong>This model is good to use when the customer has legitimate needs, but is not able to articulate the details at the start of the project. A small mock-up of a working system is developed and presented to the customer.</strong> </p><ul><li><strong>Pro: evaluated by user and used to refine requirements</strong></li><li><strong>Con: the first system built is barely usable; unrealistic expectations from the customer; the performance issue</strong></li></ul><p>Aspects:</p><ul><li>Designed to assist the customer or developer in understanding requirements.</li><li>Quick design (focus on representation of software aspects visible to the user)</li><li>Prototype is evaluated by the customer, and used to identify and refine requirements</li><li>Prototype  is discarded (at least in part)</li></ul><h4 id="2-2-4-Evolutionary-process-model"><a href="#2-2-4-Evolutionary-process-model" class="headerlink" title="2.2.4 Evolutionary process model"></a>2.2.4 Evolutionary process model</h4><h5 id="Spiral-model"><a href="#Spiral-model" class="headerlink" title="**Spiral model: **"></a>**Spiral model: **</h5><p><strong><u>Spiral model: is an evolutionary software process model</u> that couples iterative nature of prototyping with the controlled and systematic aspects of the linear sequential model</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312140313213.png" alt="image-20220312140313213" style="zoom:50%;"><p><strong>Distinguishing features:</strong></p><ul><li>A cyclic approach for incrementally growing a system’s degree of definition and implementation while decreasing its degree of risk;</li><li>A set of anchor point milestones for ensuring stakeholder commitment to feasible and mutually satisfactory system solutions.</li></ul><p><strong>Process features of spiral model:</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312142423000.png" alt="image-20220312142423000" style="zoom:50%;"><ul><li>Simplified form<br>Waterfall model plus risk analysis</li><li>Precede each phase by<br>Alternatives<br>Risk analysis</li><li>Follow each phase by<br>Evaluation<br>Planning of next phase</li></ul><p><strong>Full Spiral Model:</strong> </p><p><strong><u>If risks cannot be resolved, project is immediately terminated</u></strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312142859521.png" alt="image-20220312142859521" style="zoom:50%;"><p>Analysis of Spiral Model:</p><ul><li>Strengths<ul><li>Easy to judge how much to test</li><li>No distinction between development, maintenance</li></ul></li><li>Weaknesses<ul><li>For large-scale software only </li><li>For internal (in-house) software only</li></ul></li></ul><h5 id="Concerns-of-Evolutionary-Software-Process"><a href="#Concerns-of-Evolutionary-Software-Process" class="headerlink" title="Concerns of Evolutionary Software Process"></a>Concerns of Evolutionary Software Process</h5><ul><li>Prototyping poses a problem to project planning because of the uncertain number of cycles required to construct the product;</li><li>Evolutionary software processes do not establish the maximum speed of the evolution;</li><li>Software processes should be focused on flexibility and extensibility rather than on high quality;</li></ul><h4 id="2-2-5-Specialized-Process-Models"><a href="#2-2-5-Specialized-Process-Models" class="headerlink" title="2.2.5 Specialized Process Models"></a>2.2.5 Specialized Process Models</h4><p>Component-Based Development: Software reuse</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312143945970.png" alt="image-20220312143945970" style="zoom:50%;"><p>This is a formal Methods Model:</p><ul><li>Emphasizes the mathematical specification of requirements</li><li>Rigorous mathematical notation used to specify, design, and verify computer-based systems</li></ul><p>The reason of formal Methods model:</p><ul><li>The development of formal models is time-consuming and expensive;</li><li>Extensive developers training is required;</li><li>It is difficult to use the models as a communication mechanism for customers;</li></ul><h4 id="2-2-6-Unified-Process-Model"><a href="#2-2-6-Unified-Process-Model" class="headerlink" title="2.2.6 Unified Process Model"></a>2.2.6 Unified Process Model</h4><p>A Unified Modeling Language (UML) that is:</p><ul><li>use-case driven: A text narrative or template that describes a system function or feature from the user’s point of view</li><li>architecture-centric</li><li>iterative and incremental</li></ul><p>Steps:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312145322396.png" alt="image-20220312145322396" style="zoom:50%;"><p>Generic activities of the Unified Process:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312145518058.png" alt="image-20220312145518058" style="zoom:50%;"><p><strong>Lifecycle for Enterprise Unified Process:</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220312145755437.png" alt="image-20220312145755437" style="zoom:50%;"><h2 id="3-Agility-and-process"><a href="#3-Agility-and-process" class="headerlink" title="3. Agility and process"></a>3. Agility and process</h2><h3 id="Quick-look"><a href="#Quick-look" class="headerlink" title="Quick look:"></a>Quick look:</h3><p> What is it:</p><p>Agile software engineering combines a philosophy and a set of development guidelines.</p><p>The philosophy encourages customer satisfaction and early incremental delivery of software</p><h2 id="8-Understanding-Requirements"><a href="#8-Understanding-Requirements" class="headerlink" title="8. Understanding Requirements"></a>8. Understanding Requirements</h2><h3 id="Outline"><a href="#Outline" class="headerlink" title="Outline"></a>Outline</h3><ul><li>What is RE?</li><li>RE tasks</li><li>RE process</li><li>Eliciting requirements</li><li>Development Use-Case</li><li>Building the Analysis Model</li><li>Negotiating Requirements</li><li>Validating</li></ul><h3 id="8-1-Requirements"><a href="#8-1-Requirements" class="headerlink" title="8.1 Requirements"></a>8.1 Requirements</h3><p><strong>Requirements unambiguously specify the solution to the customer’s problems you trying to solve</strong></p><p>(include external behavior&#x2F;functionality, product and process quality, project constraints)</p><ul><li>Requirements drive all software activities</li><li>They are needed by:<ul><li>Project managers … to know what your team must deliver</li><li>Designers … to know what to design</li><li>Coders … to know what to code</li><li>Testers … to know what to test</li><li>Documentation writers … to know what to write in the user’s manual</li></ul></li><li>Requirements represent contract between your team and you customer</li></ul><p>Importance of Requirements </p><ul><li>The set of requirements constitute a contract between the client and the software developer<ul><li>It should be written such that all stakeholders can understand what the system will do.</li><li>It allows developer to map problem domain concepts to solution domain concepts</li></ul></li></ul><p>Requirements Engineering:</p><ul><li>It helps software engineering to better understand the problem to be solved;</li><li>It encompasses the set of questions:<ul><li>What is the business impact of the software?</li><li>What the customer wants? </li><li>How end-users will interact with the software?</li></ul></li></ul><h3 id="8-2-RE-Tasks"><a href="#8-2-RE-Tasks" class="headerlink" title="8.2 RE Tasks"></a>8.2 RE Tasks</h3><h4 id="Requirements-Engineering-Tasks"><a href="#Requirements-Engineering-Tasks" class="headerlink" title="Requirements Engineering Tasks:"></a><strong>Requirements Engineering Tasks</strong>:</h4><ul><li>Inception（初启）—Establish a basic understanding of the problem and the nature of the solution. </li><li>Elicitation（导出）—Draw out the requirements from stakeholders.</li><li>Elaboration（精化）—Create an analysis model that represents information, functional, and behavioral aspects of the requirements.</li><li>Negotiation（谈判）—Agree on a deliverable system that is realistic for developers and customers.</li><li>Specification（规格说明）—Describe the requirements formally or informally.</li><li>Validation（确认）—Review the requirement specification for errors, ambiguities（模糊）, omissions（遗漏）, and conflicts. </li><li>Requirements management（管理）—Manage changing requirements.</li></ul><h5 id="8-2-1-Inception"><a href="#8-2-1-Inception" class="headerlink" title="8.2.1 Inception"></a>8.2.1 Inception</h5><p>Ask “context-free” questions:</p><ul><li><p>Who is behind the request for this work?</p></li><li><p>Who will use the solution (product&#x2F;system)?</p></li><li><p>What will be the economic benefits?</p></li><li><p>How would you characterize “good” output from the system?</p></li><li><p>What problems does this solution address?</p></li><li><p>What environment will the product be used in?</p></li><li><p>Are you the right person to answer these questions?</p></li><li><p>Are these question relevant?</p></li><li><p>Can anyone else provide additional information?</p></li><li><p>Should I be asking you anything else?</p></li></ul><h5 id="8-2-2-Elicitation"><a href="#8-2-2-Elicitation" class="headerlink" title="8.2.2 Elicitation"></a>8.2.2 Elicitation</h5><p>Why is it so difficult to clearly understand what the customer wants?</p><ul><li>Scope<ul><li>The boundary of the system is ill-defined.</li><li>Customers&#x2F;users specify unnecessary technical detail that may confuse rather than clarify objectives.</li></ul></li><li>Understanding<ul><li>Customers are not completely sure of what is needed.</li><li>Customers have a poor understanding of the capabilities and limitations of the computing environment.</li><li>Customers don’t have a full understanding of their problem domain.</li><li>Customers have trouble communicating needs to the system engineer.</li><li>Customers omit detail that is believed to be obvious.</li><li>Customers specify requirements that are ambiguous or untestable.</li></ul></li><li>Volatility（不稳定性）<ul><li>Requirements change over time.</li></ul></li></ul><h5 id="8-2-3-Elaboration（求精）"><a href="#8-2-3-Elaboration（求精）" class="headerlink" title="8.2.3 Elaboration（求精）"></a>8.2.3 Elaboration（求精）</h5><ul><li>It is a good thing, but you have to know when to stop;</li><li>The key is to describe the problem in a way that establishes a firm base for design;</li><li>If you work beyond that point, you’re doing design;</li></ul><h5 id="8-2-4-Negotiation（谈判）"><a href="#8-2-4-Negotiation（谈判）" class="headerlink" title="8.2.4 Negotiation（谈判）"></a>8.2.4 Negotiation（谈判）</h5><ul><li>There should be no winner and no loser in an effective negotiation（ Win – Win );</li><li>Both sides win because a “deal” that both can live with is solidified.</li></ul><h5 id="8-2-5-Specification（规格说明）"><a href="#8-2-5-Specification（规格说明）" class="headerlink" title="8.2.5 Specification（规格说明）"></a>8.2.5 Specification（规格说明）</h5><p><strong>The formality and format of a specification varies with the size and the complexity of the software to be built.</strong></p><h5 id="8-2-6-Validation（确认）"><a href="#8-2-6-Validation（确认）" class="headerlink" title="8.2.6 Validation（确认）"></a>8.2.6 Validation（确认）</h5><ul><li>A key concern during requirements validation is consistency（一致性）;</li><li>Use the analysis model to ensure that requirements have been consistently stated;</li></ul><h5 id="8-2-7-Requirements-Management"><a href="#8-2-7-Requirements-Management" class="headerlink" title="8.2.7 Requirements Management"></a>8.2.7 Requirements Management</h5><ul><li>Features traceability table;</li><li>Source traceability table;</li><li>Dependency traceability table;</li><li>Subsystem traceability table;</li><li>Interface traceability table;</li></ul><h4 id="How-to-maintain-traceability-relationships-…"><a href="#How-to-maintain-traceability-relationships-…" class="headerlink" title="How to maintain traceability relationships …"></a>How to maintain traceability relationships …</h4><ul><li>Most easily maintained using tools.</li><li>Low tech tools: Excel, Word, …<ul><li>Can be good enough (and better than nothing).</li></ul></li><li>Specialized tools: RequisitePro.<ul><li>Tools can be used to automatically generate views in the form to Matrices.</li><li>NOTE: consider the cost of learning and using tools.</li></ul></li></ul><h3 id="8-3-RE-process"><a href="#8-3-RE-process" class="headerlink" title="8.3 RE process"></a>8.3 RE process</h3><ul><li>Identifying the stakeholders</li><li>Recognizing multiple viewpoints</li><li>Working toward collaboration</li><li>Asking the first questions</li></ul><p><strong>Stakeholders in SE:</strong></p><ul><li>Customers<ul><li>Those who pay for the software</li></ul></li><li>Users<ul><li>Those who use the software</li></ul></li><li>Software developers</li><li>Development Managers</li></ul><p><strong><u> Problem: The customer often doesn’t have good grasp of what he wants.</u></strong></p><h3 id="8-4-Eliciting-Requirements"><a href="#8-4-Eliciting-Requirements" class="headerlink" title="8.4 Eliciting Requirements"></a>8.4 Eliciting Requirements</h3><ul><li>Collaborative Requirements Gathering;</li><li>Quality Function Deployment;</li><li>User Scenarios;</li><li>Elicitation Work Products;</li></ul><h4 id="8-4-1-Collaborative-Requirements-Gathering"><a href="#8-4-1-Collaborative-Requirements-Gathering" class="headerlink" title="8.4.1 Collaborative Requirements Gathering"></a>8.4.1 Collaborative Requirements Gathering</h4><p><strong><u>Meeting</u></strong></p><p><strong>How to conduct a meeting?</strong></p><ul><li>Meetings are attended by all interested stakeholders.</li><li>Rules established for preparation and participation.</li><li>Agenda should be formal enough to cover all important points, but informal enough to encourage the free flow of ideas.</li><li>A facilitator controls the meeting.</li><li>A definition mechanism (blackboard, flip charts, etc.) is used.</li></ul><p><strong>During the meeting:</strong></p><ul><li>The problem is identified.</li><li>Elements of the solution are proposed.</li><li>Different approaches are negotiated.</li><li>A preliminary set of solution requirements are obtained.</li><li>The atmosphere is collaborative and non-threatening.</li></ul><h4 id="8-4-2-Quality-Function-Deployment"><a href="#8-4-2-Quality-Function-Deployment" class="headerlink" title="8.4.2 Quality Function Deployment"></a>8.4.2 Quality Function Deployment</h4><ul><li>QFD Defines requirements in a way that maximizes customer satisfaction.</li><li>Three types of requirements:<ul><li>Normal Requirements;    </li><li>Expected Requirements;</li><li>Exciting Requirements;</li></ul></li></ul><h5 id="8-4-2-1Three-Level-Requirements"><a href="#8-4-2-1Three-Level-Requirements" class="headerlink" title="8.4.2.1Three Level Requirements:"></a>8.4.2.1<strong>Three Level Requirements:</strong></h5><ul><li>Stakeholder Needs</li><li>Features of the System</li><li>Software Requirements</li></ul><h5 id="8-4-2-2Software-Requirements-Types"><a href="#8-4-2-2Software-Requirements-Types" class="headerlink" title="8.4.2.2Software Requirements Types:"></a>8.4.2.2<strong>Software Requirements Types:</strong></h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220314161609102.png" alt="image-20220314161609102" style="zoom:33%;"><ul><li><p>Functional Requirements(FR):</p><ul><li>Describe the functionality or services that the system is expected to provide </li><li>Address the input-output behavior of a system</li></ul></li><li><p>Non-Functional Requirement(NFRS):</p><p><strong>Specifying various quality attributes of the system</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319164350389.png" alt="image-20220319164350389" style="zoom:50%;"></li></ul><h5 id="8-4-2-3-Design-Constraints"><a href="#8-4-2-3-Design-Constraints" class="headerlink" title="8.4.2.3 Design Constraints"></a>8.4.2.3 Design Constraints</h5><ul><li>Restrictions upon the design of a system, or the process by which a system is developed ,which do not affect the external behavior must be fulfilled to meet technical, business, or contractual obligations</li><li>They constrain the way a designer and implementer can make decisions</li></ul><h3 id="8-5-User-Scenarios（用户脚本）"><a href="#8-5-User-Scenarios（用户脚本）" class="headerlink" title="8.5 User Scenarios（用户脚本）"></a>8.5 User Scenarios（用户脚本）</h3><ul><li><p>Scenarios ( use-case ):</p><ul><li>identify a thread of usage for the system to be constructed.</li><li>Provide a description of how the system will be used</li></ul><p>Example:</p></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319165652047.png" alt="image-20220319165652047" style="zoom: 67%;"><ul><li>Elicitation Work Products<ul><li>Statement of need and feasibility.</li><li>Statement of scope.</li><li>List of participants in requirements elicitation.</li><li>Description of the system’s technical environment.</li><li>List of requirements and associated domain constraints.</li><li>List of usage scenarios.</li><li>Any prototypes developed to refine requirements.</li></ul></li></ul><h3 id="8-6-Developing-Use-Cases"><a href="#8-6-Developing-Use-Cases" class="headerlink" title="8.6 Developing Use-Cases"></a>8.6 Developing Use-Cases</h3><ul><li>A use-case is a story about how someone or something external to the software (known as an actor) interacts with the system.</li><li>Use-case are defined from an actor’s point of view.</li><li>An actor is a role that people or devices play as they interact with the software.</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319170957340.png" alt="image-20220319170957340" style="zoom:50%;"><ul><li>Each scenario answers the following questions:<ul><li>Who is the primary actor, the secondary actor(s)?</li><li>What are the actor’s goals?</li><li>What preconditions should exist before the story begins?</li><li>What main tasks or functions are performed by the actor?</li><li>What exceptions might be considered as the story is described?</li><li>What variations in the actor’s interaction are possible?</li><li>What system information will the actor acquire, produce, or change? </li><li>Will the actor have to inform the system about changes in the external environment?</li><li>What information does the actor desire from the system?</li><li>Does the actor wish to be informed about unexpected changes?</li></ul></li></ul><h3 id="8-6-Building-the-Analysis-Model"><a href="#8-6-Building-the-Analysis-Model" class="headerlink" title="8.6 Building the Analysis Model"></a>8.6 Building the Analysis Model</h3><ul><li>Elements of the Analysis Model;</li><li>Analysis Patterns;</li></ul><h4 id="Elements-of-the-Analysis-Model"><a href="#Elements-of-the-Analysis-Model" class="headerlink" title="Elements of the Analysis Model"></a>Elements of the Analysis Model</h4><ul><li>Scenario-based elements<ul><li>Use-case—How external actors interact with the system (use-case diagrams; detailed templates)</li><li>Functional—How software functions are processed in the system (flow charts; activity diagrams)</li></ul></li><li>Class-based elements<ul><li>The various system objects (obtained from scenarios) including their attributes and functions (class diagram)</li></ul></li><li>Behavioral elements<ul><li>How the system behaves in response to different events (state diagram)</li></ul></li><li>Flow-oriented elements<ul><li>How information is transformed as if flows through the system (data flow diagram)</li></ul></li></ul><h5 id="Use-Case-Diagram"><a href="#Use-Case-Diagram" class="headerlink" title="Use-Case Diagram"></a>Use-Case Diagram</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319171528803.png" alt="image-20220319171528803" style="zoom:50%;"><h5 id="Activity-Diagram-for-RE"><a href="#Activity-Diagram-for-RE" class="headerlink" title="Activity Diagram for RE"></a>Activity Diagram for RE</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319171604459.png" alt="image-20220319171604459" style="zoom:50%;"><h5 id="Class-Diagram"><a href="#Class-Diagram" class="headerlink" title="Class Diagram"></a>Class Diagram</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319171704345.png" alt="image-20220319171704345" style="zoom:50%;"><h5 id="State-Diagram"><a href="#State-Diagram" class="headerlink" title="State Diagram"></a>State Diagram</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319171742317.png" alt="image-20220319171742317" style="zoom:50%;"><h4 id="Analysis-Patterns"><a href="#Analysis-Patterns" class="headerlink" title="Analysis Patterns"></a>Analysis Patterns</h4><ul><li>They  are conceptual models, which capture an abstraction of a situation that can often be encountered in modeling. </li><li>Analysis patterns suggest solutions within the application domain that can be reused when modeling many application.<ul><li>Analysis patterns speed up the development of abstract analysis models.</li><li>Analysis patterns facilitate the transformation of the analysis model into a design model.</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220319172159037.png" alt="image-20220319172159037" style="zoom:67%;"><h5 id="Normal-format"><a href="#Normal-format" class="headerlink" title="Normal format:"></a>Normal format:</h5><ul><li><p>Pattern name:  Captures the essence of the pattern. </p></li><li><p>Intent: What the pattern accomplishes or represents. </p></li><li><p>Motivation:  A scenario that illustrates how the pattern solves a problem.</p></li><li><p>Forces and context:  External issues (forces) that affect how the pattern is used, and external issues resolved when the pattern is applied. </p></li><li><p>Solution:  How the pattern is applied to solve the problem; emphasizes structural and behavioral issues.</p></li><li><p>Consequences:  What happens when the pattern is applied; what trade-offs exist during its application.</p></li><li><p>Design:  How the pattern can be achieved via known design patterns.</p></li><li><p>Known uses:  Examples of uses within actual systems.</p></li><li><p>Related patterns:  Patterns related to the named pattern because</p><ol><li>they are commonly used with the named pattern;</li><li>they are structurally similar to the named pattern;</li><li>they are a variation of the named pattern.</li></ol></li></ul><h3 id="8-7-Negotiating-Requirements"><a href="#8-7-Negotiating-Requirements" class="headerlink" title="8.7 Negotiating Requirements"></a>8.7 Negotiating Requirements</h3><ul><li>Identify the key stakeholders<ul><li>These are the people who will be involved in the negotiation</li></ul></li><li>Determine each of the stakeholders “win conditions”<ul><li>Win conditions are not always obvious</li></ul></li><li>Negotiate<ul><li>Work toward a set of requirements that lead to “win-win”</li></ul></li></ul><h3 id="8-8-Validating-Requirements"><a href="#8-8-Validating-Requirements" class="headerlink" title="8.8 Validating Requirements"></a>8.8 Validating Requirements</h3><ul><li>Is each requirement consistent with the objective of the system?</li><li>Have all requirements been specified at the proper level of abstraction? </li><li>Is the requirement really necessary?</li><li>Is each requirement bounded and unambiguous?</li><li>Does each requirement have attribution? </li><li>Do any requirements conflict with other requirements?</li><li>Is each requirement achievable in the system’s technical environment?</li><li>Is each requirement testable, once implemented?</li><li>Does the model reflect the system’s information, function and behavior?</li><li>Has the model been appropriately “partitioned”?</li><li>Have appropriate requirements patterns been used?</li></ul><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
      
      
      <categories>
          
          <category> introduction to software engineer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>computer network</title>
      <link href="/2022/02/24/computer-network/"/>
      <url>/2022/02/24/computer-network/</url>
      
        <content type="html"><![CDATA[<h1 id="computer-network"><a href="#computer-network" class="headerlink" title="computer network"></a>computer network</h1><h2 id="1-chapter1-computer-networks-and-the-Internet"><a href="#1-chapter1-computer-networks-and-the-Internet" class="headerlink" title="1.chapter1  computer networks and the Internet"></a>1.chapter1  computer networks and the Internet</h2><h3 id="Internet"><a href="#Internet" class="headerlink" title="Internet"></a>Internet</h3><ul><li>Internet: “network of networks” Interconnected ISPs</li><li>protocols: control sending , receiving of message. TCP,IP,HTTP,Skype</li><li>Internet standards:<ul><li>RFC: Request for comments</li><li>IETF: Internet Engineering task force</li></ul></li><li>Internet: a serve view<ul><li>infrastructure that provides services to applications: Web,VoIP,email,games,ecommerce,social nets</li></ul></li></ul><h3 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h3><p>protocol define format, order of message sent and received among network entities , and actions taken on message transmission ,receipt</p><h3 id="1-1network-structure"><a href="#1-1network-structure" class="headerlink" title="1.1network structure"></a>1.1network structure</h3><ul><li><p>network edge: </p><ul><li>hosts: clients and servers </li><li>servers often in data centers</li></ul></li><li><p>access networks,physical media:</p><p>wired,wireless,communication links</p></li><li><p>network core :</p><ul><li>interconnected routers</li><li>network of networks</li></ul></li></ul><h3 id="1-2network-edge"><a href="#1-2network-edge" class="headerlink" title="1.2network edge"></a>1.2network edge</h3><h4 id="ISP-internet-service-provider"><a href="#ISP-internet-service-provider" class="headerlink" title="ISP(internet service provider)"></a>ISP(internet service provider)</h4><p>End system access the Internet through ISP, such as local cable or telephone companies</p><h4 id="Access-networks"><a href="#Access-networks" class="headerlink" title="Access networks"></a>Access networks</h4><ul><li>serveral connect methods<ul><li>ressidential access nets</li><li>institutional nets wnetworks</li><li>mobile access networks</li></ul></li></ul><ol><li><p><strong>DSL(digitl subscriber line)</strong></p><ul><li>use existing telephone line to central office DSLAM<ul><li>data over DSL phone line goes to internet</li><li>voice over DSL phone line goes to telephone net</li></ul></li><li><u>&lt;2.5Mbps Upstream rtansmission rate (typically &lt; 1Mbps)</u></li><li><u>&lt;24Mbps downstream transmission rate (typically &lt; 10Mbps)</u></li></ul></li><li><p>Cable network</p><p>frequency division multiplexing : different channels transmitted in different frequency bands</p><ul><li><p>HFC: hybrid fiber coax</p><p>asymmetric network: <u>30Mbps downstream transmission rate, 2Mbps upstream transmission rate</u></p></li><li><p>network of cable,fiber attaches homes to ISP router</p><ul><li>home share access network to cable headend</li><li>unlike DSL, which has dedicated access to central office</li></ul></li></ul></li><li><p>home network: various devices </p></li><li><p>Ethernet (Enterprise access networks)</p><ul><li>typically used in companies,universities etc.</li><li>10Mbps,100Mbps,1Gbps,10Gbps transmission rates</li><li>today,end system typcally connect into Ethernet switch</li></ul></li><li><p>wireless access networks</p><ul><li>shared wireless access network connects end system to router : via base station aka “access point”</li><li><u>Wireless LANs</u><ol><li>within building (100ft.)</li><li>wifi: 1,54,450Mbps transimission rate</li></ol></li><li><u>wide area wireless access</u><ol><li>provided by telco(cellular) operator</li><li>between 1 and 10Mbps</li><li>3G,4G:LTE</li></ol></li></ul></li></ol><h4 id="sending-message"><a href="#sending-message" class="headerlink" title="sending message"></a>sending message</h4><p>link transmission rate, aka link capacity , aka link bandwidth</p><p>packet transmission delay &#x3D; L(bits)&#x2F;R(bits&#x2F;sec)</p><h4 id="Physical-media"><a href="#Physical-media" class="headerlink" title="Physical media"></a>Physical media</h4><ul><li><p>bit: propagates between transmitter&#x2F;receiver pairs</p></li><li><p>physical link: what lies between transmitter&amp;receiver</p></li><li><p>guide media: </p><p>signals propagate in solid media: copper,fiber,coax</p></li><li><p>unguided media</p><p>signals propagate freely,ratio</p></li><li><p>Twisted pair(TP)</p><p>two insulated copper wires</p><p>category5: 100Mbps,1Gbps Ethernet</p><p>category6: 10Gbps</p></li><li><p><u>coaxial cable</u></p><ul><li>two concentric copper conductors</li><li>bidirectional</li><li>broadband<ul><li>Mutiple channels on cable</li><li>HFC</li></ul></li></ul></li><li><p>fiber optic cable</p><ul><li>glass fiber carrying light pulses , each pulse a bit</li><li>high-speed operation: high-speed point-to-point ransmission(10’s-100’sGbps transmission rate)</li></ul></li><li><p>lowrer error rate</p><ul><li>repeaters spaced far apart </li><li>immune to electronmagnetic noise</li></ul></li><li><p>radio</p><ul><li><p>no phsical “wire”  bidirectional </p></li><li><p>radio link types:</p><ol><li><p>terrestrial microwave </p><p>up to 45Mbps channels</p></li><li><p>LAN(wifi)</p><p>54Mbps</p></li><li><p>wide area</p><p>4G cellular:~10 Mbps</p></li><li><p>satellite</p><ul><li>Kbps to 45Mbps channel(or mutiple smaller channels)</li><li>270 msec end-to-end delays</li><li>geosynchronous versus low altitude</li></ul></li></ol></li></ul></li></ul><h3 id="1-3network-core"><a href="#1-3network-core" class="headerlink" title="1.3network core"></a>1.3network core</h3><ul><li>mesh of interconnected router</li><li>packet-switching: hosts break application-layer message into packets<ul><li>forward packets form one router to the next ,across links on path from source to destination</li><li>each packet transmitted at full link capacity</li></ul></li></ul><h4 id="Packet-switch-store-and-forward"><a href="#Packet-switch-store-and-forward" class="headerlink" title="Packet-switch: store-and-forward"></a>Packet-switch: store-and-forward</h4><ul><li>It takes L&#x2F;R seconds to transmit L-bit packet into link at R bps</li><li>store and forward: entire packet must arrive at router before it can be transmitted on next link</li><li>end-end delay &#x3D;2L&#x2F;R(assuming zero propagation delay)</li></ul><h4 id="Packet-switching-queueing-delaying-loss"><a href="#Packet-switching-queueing-delaying-loss" class="headerlink" title="Packet-switching: queueing delaying,loss"></a>Packet-switching: queueing delaying,loss</h4><p>if arrival rate(in bits)to link exceeds transmission rate of link for a period of time:</p><ul><li>packets will queue, wait to be transimitted on link </li><li>packets can be dropped(lost) if memory(buffers) fills up</li></ul><h4 id="Tow-key-network-core-functions"><a href="#Tow-key-network-core-functions" class="headerlink" title="Tow key network-core functions"></a>Tow key network-core functions</h4><ul><li>routing: determines source-destination route taken by packets</li><li>forwarding: move packets from router’ input to appropriate router ouput</li></ul><h4 id="Alternative-core-circuit-switching"><a href="#Alternative-core-circuit-switching" class="headerlink" title="Alternative core: circuit switching"></a>Alternative core: circuit switching</h4><p>end-end resources allocated to,reserved for “call” between source&amp;destination</p><ul><li><p>in diagram, each links has four circuits </p><p>call gets 2nd circuit in top link and 1st circuit in right link</p></li><li><p>dedicated resources: no sharing</p><p>circuit-like(guaranteed) performance</p></li><li><p>circuit segment idle if not used by call(no sharing)</p></li><li><p>commonly used in traditional telephone networks</p></li></ul><h4 id="FDM-versus-TDM"><a href="#FDM-versus-TDM" class="headerlink" title="FDM versus TDM"></a>FDM versus TDM</h4><p>FDM: frequency-division multiplexing</p><p>TDM: time-division multiplexing</p><ul><li>With FDM each circuit continuously gets a fraction of the bandwidth</li><li>With TDM each circuit gets all of the bandwidth periodically during brief of time</li></ul><h4 id="Packet-switching-versus-circuit-switching"><a href="#Packet-switching-versus-circuit-switching" class="headerlink" title="Packet switching versus circuit switching"></a>Packet switching versus circuit switching</h4><ul><li><p>Packet switching </p><p>Advantages:</p><ul><li>great for bursty data</li><li>resource sharing</li><li>simpler, no call set up</li></ul><p>excessive congestion possible: </p><ul><li>packet delay and loss</li><li>protocols needed for reliable data transfer, congestion control</li></ul></li><li><p>circuit switching </p><ul><li>bandwidth guarantees needed for audio&#x2F;video apps</li><li>still an unsolved problem(chapter 7)</li></ul></li></ul><h4 id="Internet-structure-network-of-networks"><a href="#Internet-structure-network-of-networks" class="headerlink" title="Internet structure: network of networks"></a>Internet structure: network of networks</h4><ul><li>End-system connect to the access ISP</li><li>access ISP connect to the regional ISP </li><li>regional access connect to tier ISP</li></ul><h3 id="1-4Delay-loss-and-throughput-in-packet-switched-Networks"><a href="#1-4Delay-loss-and-throughput-in-packet-switched-Networks" class="headerlink" title="1.4Delay,loss,and throughput in packet-switched Networks"></a>1.4Delay,loss,and throughput in packet-switched Networks</h3><h4 id="Delay"><a href="#Delay" class="headerlink" title="Delay:"></a>Delay:</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220228233531690.png" style="zoom:50%;"><ul><li><p>Processing delay (<u>this relates to router’s cycle of instruction</u>) (constant)</p><p>The time required to examine the packet’s header and determine where to direct the part</p><p>Processing delays in high-speed routers are typically on the order of microseconds or less</p><p><u>After this nodal processing, the router directs the packet to the queue that precedes the links to router B</u> </p></li><li><p>Queuing delay (variable)</p><p>The time it waits to be transmitted onto the link.</p><p>This can be on the order of microseconds to milliseconds in practice</p></li><li><p>Transmission delay (constant)</p><p>This can be different in various way </p><p>Typically , the first-come-first-served manner, the delay formula is</p><p><strong>D(delay)&#x3D;L(Packet length)&#x2F;R(link bandwidth)</strong></p><p>Transmission delays are typically on the order of microseconds to milliseconds in practice</p></li><li><p>Propagation delay (constant)</p><p>The time required to propagate from the beginning of the link to router B </p><p>This propagation speed is the range of </p><p><strong>2<em>10^8 meter&#x2F;sec to 3</em>10^8 meters&#x2F;sec</strong></p><p>The formula is</p><p><strong>D(delay)&#x3D;d(length of physical link)&#x2F;s(propagation speed)</strong></p></li></ul><p><strong>link : the device transform the digital signal to the analog signal</strong></p><p><strong>relay device: the intermedium device transmit the analog signal</strong>  </p><h4 id="Queuing-delay-and-packet-loss"><a href="#Queuing-delay-and-packet-loss" class="headerlink" title="Queuing delay and packet loss"></a>Queuing delay and packet loss</h4><ul><li><p>Queuing delay:</p><p>traffic intensity: terminology to describe the congestion of the queue</p><p>The fofmula:</p><p><strong>Traffic intensity &#x3D; L*a&#x2F;R</strong></p><p>L:Per packet consists of L bits data</p><p>a:Average rate of link packets arrive the queue (packets&#x2F;sec)</p><p>R:The rate at witch bits are pushed out the queue (bits&#x2F;sec)</p></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220228233646419.png" alt="image-20220228233646419" style="zoom:50%;"><ul><li><p>Packet loss</p><p>Queue preceding link n buffer has finite capacity</p><p>packet arriving to full queue dropped </p><p>lost packet may be retransmitted by previous node, by source end system, or not at all</p></li></ul><h4 id="Throughput"><a href="#Throughput" class="headerlink" title="Throughput"></a>Throughput</h4><p>The rate(bits&#x2F;time unit) at witch bits transferred between sender and receiver</p><ul><li><p>instantaneous: rate at given point in time</p></li><li><p>average: rate over longer period of time</p></li><li><p>The formula for throughput</p><p><strong>The bottleneck link: The minimal transmission rate of witch router has in the entire network</strong></p><ul><li>throughput &#x3D; min{Rs,Rc} only client and server</li><li>throughut &#x3D; min {R1,R2,…,Rn,Rs,Rc} include other routers</li><li>throughput &#x3D; min{R1,R2,…,Rn,Rs,Rc,R(<u>bottleneck&#x2F;users</u>)} multiple users sharing one network</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220228233249932.png" style="zoom:50%;"><h3 id="1-5Protocol-layers-service-models"><a href="#1-5Protocol-layers-service-models" class="headerlink" title="1.5Protocol layers, service models"></a>1.5Protocol layers, service models</h3><h4 id="Layers"><a href="#Layers" class="headerlink" title="Layers:"></a>Layers:</h4><p> Each layer implements a service</p><ul><li>via its own internal-layer actions</li><li>relying on services provides by layer below</li></ul><p>dealing with complex systems:</p><ul><li>explicit structure allows identification, relationship of complex system’s pieces<ul><li>layered reference model for discussion</li></ul></li><li>modularization eases maintenance, updating of system<ul><li>change of implementation of layers’ service transparent to rest of system</li><li>change in gate procedure doesn’t affect rest of system</li></ul></li></ul><p><strong>Internet protocol stack</strong> (From bottom to top)</p><ul><li><p>Application: supporting network applications</p><p>FTP,SMTP,HTTP</p></li><li><p>Transport: process-process data transfer</p><p>TCP(typical),UDP(no-frills)</p></li><li><p>Network: the routing of datagrams from source to destination</p><p>IP,routing protocol</p></li><li><p>link: data transfer between neighboring network elements</p><p>Ethernet,Wifi,PPP</p></li><li><p>physical: bits “on the wire”</p></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220228231507652.png" style="zoom: 33%;"><p><strong>IOS&#x2F;OSI reference model</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301205238242.png" alt="image-20220301205238242" style="zoom:50%;"><ul><li>presentation: allow applications to interpret meaning of data, encryption, compression, machine-specific conventions</li><li>session: synchronization, checkpointing, recovery of data exchange</li></ul><p><strong>Internet stack “missing” these layers!</strong></p><p>these services, if needed, must be implemented in application</p><h4 id="Encapsulation"><a href="#Encapsulation" class="headerlink" title="Encapsulation:"></a>Encapsulation:</h4><ul><li>Application: append message</li><li>transport: append segment</li><li>network: append datagram</li><li>link: append frame</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220228231927492.png" style="zoom: 50%;"><p>Typically, switch only has link and physical layers, no network layer ,witch means it doesn’t have IP address and cannot be found by uesers </p><p><strong>PDU: Each layer in protocol stack, except layer-1(physical), has its PDU(protocol data unit)</strong></p><p><strong>Data + header &#x3D; PDU</strong></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220228232827461.png" style="zoom: 50%;"><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220301211157835.png" alt="image-20220301211157835" style="zoom:50%;"><ul><li>Application-layer-<strong>message</strong>: Exchange of packet information</li><li>Transport-layer-<strong>segment</strong>: Appending <strong><u>additional information</u></strong>(so-called transport-layer header information, the added information may include information allowing the receiver-side transport layer to deliver the message up to the appropriate application, and error detection bits which show whether the message have been changed), which will be used by the receiver-side transport-layer, <strong><u>the message and header comprise of segment</u></strong></li><li>Network-layer-<strong>datagram</strong>: Appending network-layer header, such as source and destination end system address, creating a <strong><u>datagram</u></strong></li><li>Link-layer-frame: appending linked-layer header</li><li>Each packet has two type of fields: header and payload(A packet form the layer above)</li></ul><h3 id="1-6-The-homework-supplements-（extension-and-correct）"><a href="#1-6-The-homework-supplements-（extension-and-correct）" class="headerlink" title="1.6 The homework supplements （extension and correct）"></a>1.6 The homework supplements （extension and correct）</h3><ul><li>NAT(Network Address Transmission)</li><li>A router equipped with NAT software is called a NAT router and has at least one valid external global IP address (public IP address)</li><li>Host &#x3D; end system; end system &#x3D; clients + server (page 11)</li><li>Two nodes in the internet are connected together by communication links</li><li>socket: A interface that specifies how a program running on one end system asks the internet infrastructure to deliver data to a specific destination program running on other end system</li><li>FDDI(Fiber Distributed Data Interface): typically used in area network(campus network)</li><li>Two types of packet-switch network: datagram networks and virtual-circuit networks<ul><li>virtual-circuit: no destination code, just have a virtual code(int, witch points the next Router), then, a virtual circuit are constructed, the transmission direction has been fixed.</li></ul></li><li>There is no congestion in a circuit switching network</li><li>The drawbacks of message segmentation(packet-switch): <ul><li>Packets have to be put in sequence at the destination </li><li>Message segmentation results in many smaller packets. Since header size is usually the same for all packets regardless of their size, with message segmentation the total amount of header bytes is more</li></ul></li></ul><h2 id="2-chaper2-Application-layer"><a href="#2-chaper2-Application-layer" class="headerlink" title="2. chaper2 Application layer"></a>2. chaper2 Application layer</h2><h3 id="Outline"><a href="#Outline" class="headerlink" title="Outline:"></a>Outline:</h3><p>2.1 principles of network applications</p><p>2.2 Web and HTTP</p><p>2.3 electronic mail</p><ul><li>SMTP, POP3, IMAP</li></ul><p>2.4 DNS</p><p>2.5 P2P applications</p><p>2.6 video streaming and </p><ul><li>content distribution </li><li>networks</li></ul><p>2.7 socket programming </p><ul><li>with UDP and TCP</li></ul><h3 id="2-1-principles-of-network-applications"><a href="#2-1-principles-of-network-applications" class="headerlink" title="2.1 principles of network applications"></a>2.1 principles of network applications</h3><h4 id="2-1-1-Goals："><a href="#2-1-1-Goals：" class="headerlink" title="2.1.1 Goals："></a>2.1.1 Goals：</h4><ul><li><p>conceptual,  implementation aspects  of network application  protocols</p></li><li><p>transport-layer  </p></li><li><p>service models </p></li><li><p>client-server paradigm </p></li><li><p>peer-to-peer paradigm </p></li><li><p>content distribution networks</p></li><li><p>learn about protocols by  examining popular  application-level  protocols</p><ul><li>HTTP </li><li>FTP </li><li>SMTP &#x2F; POP3 &#x2F; IMAP </li><li>DNS</li></ul></li><li><p>creating network</p><ul><li>socket API</li></ul></li></ul><h4 id="2-1-2-Creating-a-network-app"><a href="#2-1-2-Creating-a-network-app" class="headerlink" title="2.1.2 Creating a network app"></a>2.1.2 Creating a network app</h4><p><strong>write programs that:</strong></p><ul><li>run on (different) end systems</li><li>communicate over network</li><li>e.g., web server software  communicates with browser  software</li></ul><p><strong>no need to write software  for network-core devices</strong></p><ul><li>network-core devices do not  run user applications</li><li>applications on end systems  allows for rapid app  development, propagation</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326165226295.png" alt="image-20220326165226295" style="zoom: 50%;"><h4 id="2-1-3-Application-architectures"><a href="#2-1-3-Application-architectures" class="headerlink" title="2.1.3 Application architectures"></a>2.1.3 Application architectures</h4><p>possible structure of applications: </p><ul><li>client-server </li><li>peer-to-peer (P2P)</li></ul><h4 id="2-1-4-Client-server-architecture"><a href="#2-1-4-Client-server-architecture" class="headerlink" title="2.1.4 Client-server architecture"></a>2.1.4 Client-server architecture</h4><p>server: </p><ul><li>always-on host </li><li>permanent IP address </li><li>data centers for scaling</li></ul><p>clients:</p><ul><li>Communicate with server </li><li>May be intermittently connected </li><li>May have dynamic IP addresses </li><li>Do not communicate directly with each other</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326165647217.png" alt="image-20220326165647217" style="zoom:50%;"><h4 id="2-1-5-P2P-architecture"><a href="#2-1-5-P2P-architecture" class="headerlink" title="2.1.5 P2P architecture"></a>2.1.5 P2P architecture</h4><ul><li>no always-on server </li><li>arbitrary end systems directly communicate </li><li>peers request service from other peers, provide service in return to other peers </li><li>self scalability – new peers bring new service capacity, as well as new  service demands </li><li>peers are intermittently connected and change IP addresses <ul><li>complex management</li></ul></li></ul><h4 id="2-1-6-Processes-communicating"><a href="#2-1-6-Processes-communicating" class="headerlink" title="2.1.6 Processes communicating"></a>2.1.6 Processes communicating</h4><ul><li><p>process: program running  within a host</p><ul><li>within same host, two processes communicate using inter-process communication (defined by  OS) </li><li>processes in different hosts communicate by exchanging messages</li></ul></li><li><p>aside: applications with P2P architectures have client processes &amp; server processes</p></li></ul><h4 id="2-1-7-Sockets"><a href="#2-1-7-Sockets" class="headerlink" title="2.1.7 Sockets"></a>2.1.7 Sockets</h4><ul><li>process sends&#x2F;receives messages to&#x2F;from its socket </li><li>socket analogous to door <ul><li>sending process shoves message out door </li><li>sending process relies on transport infrastructure on other side of door to deliver message to socket at receiving process</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326170347226.png" alt="image-20220326170347226" style="zoom:67%;"><h4 id="2-1-8-Addressing-processes"><a href="#2-1-8-Addressing-processes" class="headerlink" title="2.1.8 Addressing processes"></a>2.1.8 Addressing processes</h4><ul><li>to receive messages, process must have identifier </li><li>host device has unique 32- bit IP address </li><li>Q: does IP address of host  on which process runs suffice for identifying the process?<ul><li>A: no, many processes  can be running on same host</li></ul></li><li>identifier includes both IP address and port numbers associated with process on host</li><li>example port numbers: <ul><li>HTTP server: 80 </li><li>mail server: 25</li></ul></li><li>to send HTTP message to gaia.cs.umass.edu web  server: <ul><li>IP address: 128.119.245.12 </li><li>port number: 80</li></ul></li></ul><h4 id="2-1-9App-layer-protocol-defines"><a href="#2-1-9App-layer-protocol-defines" class="headerlink" title="2.1.9App-layer protocol defines"></a>2.1.9App-layer protocol defines</h4><ul><li>types of messages  exchanged<ul><li>e.g., request, response</li></ul></li><li>message syntax:<ul><li>hat fields in messages  &amp; how fields are  delineated</li></ul></li><li>message semantics<ul><li>meaning of information  in fields</li></ul></li><li>rules for when and how  processes send &amp; respond  to messages</li><li>open protocols:<ul><li>defined in RFCs </li><li>allows for interoperability </li><li>e.g., HTTP, SMTP</li></ul></li><li>proprietary protocols: <ul><li>e.g., Skype</li></ul></li></ul><h4 id="2-1-10-What-transport-service-does-an-app-need"><a href="#2-1-10-What-transport-service-does-an-app-need" class="headerlink" title="2.1.10 What transport service does an app need?"></a>2.1.10 What transport service does an app need?</h4><ul><li><h5 id="data-integrity"><a href="#data-integrity" class="headerlink" title="data integrity"></a>data integrity</h5><ul><li>some apps (e.g., file transfer, web transactions) require 100% reliable data transfer </li><li>other apps (e.g., audio) can tolerate some loss</li></ul></li><li><p>timing </p><ul><li>some apps (e.g., Internet telephony, interactive games) require low delay to be “effective”</li></ul></li><li><p>throughput </p><ul><li>some apps (e.g., multimedia) require minimum amount of throughput to be “effective” </li><li>other apps (“elastic apps”) make use of whatever throughput they get</li></ul></li></ul><h4 id="2-1-11-Transport-service-requirements-common-apps"><a href="#2-1-11-Transport-service-requirements-common-apps" class="headerlink" title="2.1.11 Transport service requirements: common apps"></a>2.1.11 Transport service requirements: common apps</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326171736908.png" alt="image-20220326171736908" style="zoom:50%;"><h4 id="2-1-12-Internet-transport-protocols-services"><a href="#2-1-12-Internet-transport-protocols-services" class="headerlink" title="2.1.12 Internet transport protocols services"></a>2.1.12 Internet transport protocols services</h4><ul><li><p>TCP service: </p><ul><li>reliable transport between sending and receiving process </li><li>flow control: sender won’ t overwhelm receiver </li><li>congestion control: throttle sender when network overloaded </li><li>does not provide: timing, minimum throughput guarantee, security </li><li>connection-oriented: setup required between client and server processes</li></ul></li><li><p>UDP service: </p><ul><li>unreliable data transfer between sending and receiving process </li><li>does not provide: reliability, flow control, congestion control, timing, throughput guarantee, security, or connection setup</li></ul></li></ul><h4 id="2-1-13-Internet-apps-application-transport-protocols"><a href="#2-1-13-Internet-apps-application-transport-protocols" class="headerlink" title="2.1.13 Internet apps: application, transport protocols"></a>2.1.13 Internet apps: application, transport protocols</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326172120563.png" alt="image-20220326172120563" style="zoom:50%;"><h4 id="2-1-14-Securing-TCP"><a href="#2-1-14-Securing-TCP" class="headerlink" title="2.1.14 Securing TCP"></a>2.1.14 Securing TCP</h4><ul><li><p>TCP &amp; UDP  </p><ul><li><p>no encryption </p></li><li><p>cleartext passwords sent into socket traverse Internet in cleartext</p></li></ul></li><li><p>SSL </p><ul><li>provides encrypted TCP  connection </li><li>data integrity </li><li>end-point authentication</li></ul></li><li><p>SSL is at app layer </p><ul><li>apps use SSL libraries, that  “talk” to TCP</li></ul></li><li><p>SSL socket API </p><ul><li><p>cleartext passwords sent into socket traverse Internet encrypted  </p></li><li><p>see Chapter 8</p></li></ul></li></ul><h3 id="2-2-Web-and-HTTP"><a href="#2-2-Web-and-HTTP" class="headerlink" title="2.2 Web and HTTP"></a>2.2 Web and HTTP</h3><h4 id="2-2-1-Preview"><a href="#2-2-1-Preview" class="headerlink" title="2.2.1 Preview"></a>2.2.1 Preview</h4><ul><li>web page consists of objects </li><li>object can be HTML file, JPEG image, Java applet,  udio file,… </li><li>web page consists of base HTML-file which includes several referenced objects </li><li>each object is addressable by a URL, e.g.</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326173006283.png" alt="image-20220326173006283" style="zoom:50%;"><h4 id="2-2-2-HTTP-overview"><a href="#2-2-2-HTTP-overview" class="headerlink" title="2.2.2 HTTP overview"></a>2.2.2 HTTP overview</h4><p>HTTP: hypertext transfer protocol</p><ul><li>Web’s application layer protocol </li><li>client&#x2F;server model <ul><li>client: browser that requests, receives, (using HTTP protocol) and “displays” Web objects </li><li>server: Web server sends (using HTTP  protocol) objects in response to requests</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326173142865.png" alt="image-20220326173142865" style="zoom:50%;"><ul><li>uses TCP: <ul><li>client initiates TCP connection (creates  socket) to server, port 80 </li><li>server accepts TCP connection from client </li><li>HTTP messages (application-layer protocol messages) exchanged between browser (HTTP client) and Web server (HTTP server) </li><li>TCP connection closed</li></ul></li><li>HTTP is “stateless” <ul><li>server maintains no information about past client requests</li></ul></li></ul><p>aside:</p><ul><li>protocols that maintain “ state ” are complex! <ul><li>past history (state) must be maintained </li><li>if server&#x2F;client crashes, their views of “ state ” may be  inconsistent, must be reconciled</li></ul></li></ul><h4 id="2-2-3-HTTP-connections"><a href="#2-2-3-HTTP-connections" class="headerlink" title="2.2.3 HTTP connections"></a>2.2.3 HTTP connections</h4><ul><li>non-persistent HTTP<ul><li>at most one object sent over TCP connection <ul><li>connection then closed</li></ul></li><li>downloading multiple objects required multiple connections</li></ul></li><li>persistent HTTP<ul><li>multiple objects can be sent over single TCP connection between client, server</li></ul></li></ul><h5 id="Non-persistent-HTTP"><a href="#Non-persistent-HTTP" class="headerlink" title="Non-persistent HTTP"></a><strong>Non-persistent HTTP</strong></h5><p>suppose user enters URL:</p><p><a href="http://www.someschool.edu/someDepartment/home.index">http://www.someschool.edu/someDepartment/home.index</a></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326174540188.png" alt="image-20220326174540188" style="zoom:50%;"><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326174551021.png" alt="image-20220326174551021" style="zoom:50%;"><h5 id="Non-persistent-HTTP-response-time"><a href="#Non-persistent-HTTP-response-time" class="headerlink" title="Non-persistent HTTP: response time"></a>Non-persistent HTTP: response time</h5><p>RTT (definition): time for a small packet to travel from client to server and back</p><p>HTTP response time:</p><ul><li>one RTT to initiate TCP connection </li><li>one RTT for HTTP request and first few bytes of HTTP response to return </li><li>file transmission time</li><li>non-persistent HTTP  response time &#x3D; 2RTT + file transmission time</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326174807388.png" alt="image-20220326174807388" style="zoom:50%;"><h5 id="Persistent-HTTP"><a href="#Persistent-HTTP" class="headerlink" title="Persistent HTTP"></a>Persistent HTTP</h5><ul><li><p>non-persistent HTTP issues: </p><ul><li>requires 2 RTTs per object </li><li>OS overhead for each TCP connection </li><li>browsers often open parallel TCP connections to fetch referenced objects</li></ul></li><li><p>persistent HTTP: </p></li><li><p>server leaves connection open after sending response </p></li><li><p>subsequent HTTP  messages between same client&#x2F;server sent over open connection </p></li><li><p>client sends requests as  soon as it encounters a referenced object </p></li><li><p>as little as one RTT for all the referenced objects</p></li></ul><h4 id="2-2-4-HTTP-request-message"><a href="#2-2-4-HTTP-request-message" class="headerlink" title="2.2.4 HTTP request message"></a>2.2.4 HTTP request message</h4><ul><li>two types of HTTP messages: request, response </li><li>HTTP request message: <ul><li>ASCII (human-readable format)</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326175056578.png" alt="image-20220326175056578" style="zoom:50%;"><h5 id="HTTP-request-message-general-format"><a href="#HTTP-request-message-general-format" class="headerlink" title="HTTP request message: general format"></a>HTTP request message: general format</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326175225959.png" alt="image-20220326175225959" style="zoom:50%;"><h5 id="Uploading-form-input"><a href="#Uploading-form-input" class="headerlink" title="Uploading form input"></a>Uploading form input</h5><ul><li><p>POST method: </p><ul><li><p>web page often includes form input </p></li><li><p>input is uploaded to server in entity body</p></li></ul></li><li><p>URL method: </p><ul><li>uses GET method </li><li>input is uploaded in URL field of request line:</li></ul></li></ul><h5 id="Method-types"><a href="#Method-types" class="headerlink" title="Method types"></a>Method types</h5><ul><li>HTTP&#x2F;1.0: <ul><li>GET</li><li>POST </li><li>HEAD <ul><li>asks server to leave requested object out of response</li></ul></li></ul></li><li>HTTP&#x2F;1.1: <ul><li>GET, POST, HEAD </li><li>PUT <ul><li>uploads file in entity body to path specified  in URL field</li></ul></li><li>DELETE <ul><li>deletes file specified in the URL field</li></ul></li></ul></li></ul><h4 id="2-2-5-HTTP-response-message"><a href="#2-2-5-HTTP-response-message" class="headerlink" title="2.2.5 HTTP response message"></a>2.2.5 HTTP response message</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326175647911.png" alt="image-20220326175647911" style="zoom:50%;"><h5 id="HTTP-response-status-codes"><a href="#HTTP-response-status-codes" class="headerlink" title="HTTP response status codes"></a>HTTP response status codes</h5><ul><li>status code appears in 1st line in server-toclient response message.</li><li>some sample codes:<ul><li>200 OK <ul><li>request succeeded, requested object later in this msg</li></ul></li><li>301 Moved Permanently <ul><li>requested object moved, new location specified later in this msg (Location:)</li></ul></li><li>400 Bad Request <ul><li>request msg not understood by server</li></ul></li><li>404 Not Found <ul><li>requested document not found on this server</li></ul></li><li>505 HTTP Version Not Supported</li></ul></li></ul><h5 id="User-server-state-cookies"><a href="#User-server-state-cookies" class="headerlink" title="User-server state: cookies"></a>User-server state: cookies</h5><p>many Web sites use cookies four components:</p><ol><li>cookie header line of HTTP response message </li><li>cookie header line in next HTTP request message </li><li>cookie file kept on user ’s host, managed by user’s browser </li><li>back-end database at Web site</li></ol><p>example:</p><ul><li>Susan always access Internet from PC </li><li>visits specific e-commerce site for first time </li><li>when initial HTTP requests arrives at site, site creates: <ul><li>unique ID </li><li>entry in backend  database for ID</li></ul></li></ul><h6 id="Cookies-keeping-“-state-”"><a href="#Cookies-keeping-“-state-”" class="headerlink" title="Cookies: keeping “ state ”"></a>Cookies: keeping “ state ”</h6><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326180056977.png" alt="image-20220326180056977" style="zoom: 50%;"><p>what cookies can be used  for: </p><ul><li>authorization </li><li>shopping carts </li><li>recommendations </li><li>user session state (Web e-mail)</li></ul><p>how to keep “ state ” : </p><ul><li>protocol endpoints: maintain state at sender&#x2F;receiver over multiple transactions </li><li>cookies: http messages carry state</li></ul><p>aside:</p><p>cookies and privacy:</p><ul><li>cookies permit sites to learn a lot about you </li><li>you may supply name and e-mail to sites</li></ul><h4 id="2-2-6-Web-caches-proxy-server"><a href="#2-2-6-Web-caches-proxy-server" class="headerlink" title="2.2.6 Web caches (proxy server)"></a>2.2.6 Web caches (proxy server)</h4><p>Goal: satisfy client request without involving origin server</p><ul><li>user sets browser: Web accesses via cache </li><li>browser sends all HTTP requests to cache <ul><li>object in cache: cache returns object </li><li>else cache requests object from origin server, then returns object to client</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326180400483.png" alt="image-20220326180400483" style="zoom:50%;"><h5 id="More-about-Web-caching"><a href="#More-about-Web-caching" class="headerlink" title="More about Web caching:"></a>More about Web caching:</h5><ul><li><p>cache acts as both client and server </p></li><li><p>server for original requesting client </p></li><li><p>client to origin server</p></li><li><p>typically cache is installed by ISP (university, company, residential ISP)</p></li></ul><p>why Web caching?</p><ul><li>reduce response time for client request </li><li>reduce traffic on an institution’s access link </li><li>Internet dense with caches: enables “poor” content providers to effectively deliver content (so too does P2P file sharing)</li></ul><p>Caching example: </p><p>Method 1: Low access rate without cache</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181205889.png" alt="image-20220326181205889" style="zoom:50%;"><p>consequence:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181234796.png" alt="image-20220326181234796" style="zoom: 50%;"><p>Method 2: High access rate without cache</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181323168.png" alt="image-20220326181323168" style="zoom:50%;"><p>consequence:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181345960.png" alt="image-20220326181345960" style="zoom:50%;"><p>Method 3: Low access rate with cache</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181511953.png" alt="image-20220326181511953" style="zoom:50%;"><p>consequence:</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181528314.png" alt="image-20220326181528314" style="zoom:50%;"><h5 id="Conditional-GET"><a href="#Conditional-GET" class="headerlink" title="Conditional GET"></a>Conditional GET</h5><ul><li><p>Goal: don’t send object if cache has up-to-date cached version </p><ul><li>no object transmission  delay </li><li>lower link utilization</li></ul></li><li><p>cache: specify date of cached copy in HTTP request </p><ul><li>If-modified-since: date</li></ul></li><li><p>server: response contains no object if cached copy is not up-to-date:</p><p>HTTP&#x2F;1.0 304 Not Modified</p></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220326181815633.png" alt="image-20220326181815633" style="zoom:50%;"><h3 id="2-3-Electronic-mail"><a href="#2-3-Electronic-mail" class="headerlink" title="2.3 Electronic mail"></a>2.3 Electronic mail</h3><h4 id="2-3-1-preview"><a href="#2-3-1-preview" class="headerlink" title="2.3.1 preview"></a>2.3.1 preview</h4><ul><li><p>Three major components: </p><ul><li>user agents </li><li>mail servers </li><li>simple mail transfer protocol: SMTP</li></ul></li><li><p>User Agent </p><ul><li>a.k.a. “mail reader” </li><li>composing, editing, reading smail messages </li><li>e.g., Outlook, Thunderbird, iPhone mail client </li><li>outgoing, incoming messages stored on server</li></ul></li></ul><p><strong>Mail server</strong></p><ul><li>mailbox contains incoming messages for user </li><li>message queue of outgoing (to be sent) mail messages </li><li>SMTP protocol between mail servers to send email messages<ul><li>client: sending mail server </li><li>“server”: receiving mail server</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327103254234.png" alt="image-20220327103254234" style="zoom:50%;"><h4 id="2-3-2-SMTP-RFC-2821"><a href="#2-3-2-SMTP-RFC-2821" class="headerlink" title="2.3.2 SMTP [RFC 2821]"></a>2.3.2 SMTP [RFC 2821]</h4><ul><li><p>uses TCP to reliably transfer email message from client to server, port 25 </p></li><li><p>direct transfer: sending server to receiving  server </p></li><li><p>three phases of transfer </p><ul><li>handshaking (greeting) </li><li>transfer of messages </li><li>closure</li></ul></li><li><p>command&#x2F;response interaction (like HTTP) </p><ul><li>commands: ASCII text </li><li>response: status code and phrase</li></ul></li><li><p>messages must be in 7-bit ASCI</p></li></ul><h5 id="Scenario-Alice-sends-message-to-Bob"><a href="#Scenario-Alice-sends-message-to-Bob" class="headerlink" title="Scenario: Alice sends message to Bob"></a>Scenario: Alice sends message to Bob</h5><ol><li>Alice uses UA to compose message “ to ” <a href="mailto:&#98;&#x6f;&#x62;&#x40;&#x73;&#111;&#x6d;&#x65;&#x73;&#99;&#x68;&#x6f;&#111;&#108;&#46;&#x65;&#100;&#x75;">&#98;&#x6f;&#x62;&#x40;&#x73;&#111;&#x6d;&#x65;&#x73;&#99;&#x68;&#x6f;&#111;&#108;&#46;&#x65;&#100;&#x75;</a> </li><li>Alice’s UA sends message to her mail server; message placed in message queue </li><li>client side of SMTP opens TCP connection with Bob’ s mail server </li><li>SMTP client sends Alice’ s message over the TCP connection </li><li>Bob’s mail server places the message in Bob’s mailbox </li><li>Bob invokes his user agent  to read message</li></ol><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327103711929.png" alt="image-20220327103711929" style="zoom:50%;"><h5 id="Final-words"><a href="#Final-words" class="headerlink" title="Final words"></a>Final words</h5><ul><li><strong>SMTP uses persistent connections</strong> </li><li>SMTP requires message (header &amp; body) to be in 7-bit ASCII </li><li>SMTP server uses CRLF.CRLF to determine end of message</li></ul><p><strong>comparison with HTTP:</strong></p><ul><li>HTTP: pull </li><li>SMTP: push </li><li>both have ASCII command&#x2F;response interaction, status codes </li><li>HTTP: each object encapsulated in its own response message </li><li>SMTP: multiple objects sent in multipart message</li></ul><h4 id="2-3-3-Mail-message-format"><a href="#2-3-3-Mail-message-format" class="headerlink" title="2.3.3 Mail message format"></a>2.3.3 Mail message format</h4><p>SMTP: protocol for exchanging email messages</p><p>RFC 822: standard for text  message format:</p><ul><li><p>header lines, e.g., </p></li><li><p>To: </p></li><li><p>From: </p></li><li><p>Subject: </p><p>different from SMTP MAIL FROM, RCPT TO: commands! </p></li><li><p>Body: the “ message ” </p><ul><li>ASCII characters only</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327104353861.png" alt="image-20220327104353861" style="zoom:50%;"><h4 id="2-3-4-Mail-access-protocols"><a href="#2-3-4-Mail-access-protocols" class="headerlink" title="2.3.4 Mail access protocols"></a>2.3.4 Mail access protocols</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327104429481.png" alt="image-20220327104429481" style="zoom:50%;"><ul><li>SMTP: delivery&#x2F;storage to receiver’ s server</li><li>mail access protocol: retrieval from server<ul><li>POP: Post Office Protocol [RFC 1939]: authorization, download  </li><li>IMAP: Internet Mail Access Protocol [RFC 1730]: more features, including manipulation of stored messages on  server </li><li>HTTP: gmail, Hotmail, Yahoo! Mail, etc.</li></ul></li></ul><h4 id="2-3-5-POP3-protocol"><a href="#2-3-5-POP3-protocol" class="headerlink" title="2.3.5 POP3 protocol"></a>2.3.5 POP3 protocol</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327104621649.png" alt="image-20220327104621649" style="zoom:50%;"><h5 id="POP3-more-and-IMAP"><a href="#POP3-more-and-IMAP" class="headerlink" title="POP3 (more) and IMAP"></a>POP3 (more) and IMAP</h5><p>more about POP3 </p><ul><li>previous example uses POP3 “download and delete” mode </li><li>Bob cannot re-read e-mail if he changes client </li><li>POP3 “download-and-keep”: copies of messages on different clients </li><li>POP3 is stateless across sessions</li></ul><p>IMAP </p><ul><li>keeps all messages in one place: at server </li><li>allows user to organize messages in folders </li><li>keeps user state across sessions: <ul><li>names of folders and mappings between message IDs and folder name</li></ul></li></ul><h3 id="2-4-DNS"><a href="#2-4-DNS" class="headerlink" title="2.4 DNS"></a>2.4 DNS</h3><h4 id="2-4-1-preview"><a href="#2-4-1-preview" class="headerlink" title="2.4.1 preview"></a>2.4.1 preview</h4><p>people: many identifiers: </p><ul><li>SSN, name, passport</li></ul><p>Internet hosts, routers: </p><ul><li>IP address (32 bit) - used for addressing datagrams </li><li>“ name ” , e.g.,  <a href="http://www.yahoo.com/">www.yahoo.com</a> - used by humans</li></ul><p>Question: how to map between IP address and name, and vice versa ?</p><p><strong>Domain Name System:</strong></p><ul><li>distributed database implemented in hierarchy of many name servers </li><li>application-layer protocol: hosts, name servers communicate to resolve names (address&#x2F;name  translation) <ul><li>note: core Internet function, implemented as applicationlayer protocol </li><li>complexity at network’ s “edge”</li></ul></li></ul><h4 id="2-4-2-services-structure"><a href="#2-4-2-services-structure" class="headerlink" title="2.4.2 services, structure"></a>2.4.2 services, structure</h4><p>DNS services </p><ul><li>hostname to IP address translation </li><li>host aliasing <ul><li>canonical, alias names</li></ul></li><li>mail server aliasing </li><li>load distribution <ul><li>replicated Web servers: many IP addresses correspond to one name</li></ul></li></ul><p>why not centralize DNS? </p><ul><li>single point of failure </li><li>traffic volume </li><li>distant centralized database </li><li>maintenance</li></ul><h4 id="2-4-3-hierarchical-database"><a href="#2-4-3-hierarchical-database" class="headerlink" title="2.4.3 hierarchical database"></a>2.4.3 hierarchical database</h4><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327105738764.png" alt="image-20220327105738764" style="zoom:50%;"><p>client wants IP for <a href="http://www.amazon.com/">www.amazon.com</a>; 1st approximation: </p><ul><li>client queries root server to find com DNS server </li><li>client queries .com DNS server to get amazon.com DNS server </li><li>client queries amazon.com DNS server to get IP address for <a href="http://www.amazon.com/">www.amazon.com</a></li></ul><h5 id="root-name-servers"><a href="#root-name-servers" class="headerlink" title="root name servers"></a>root name servers</h5><ul><li>contacted by local name server that can not resolve name</li><li>root name server: <ul><li>contacts authoritative name server if name mapping not known </li><li>gets mapping </li><li>returns mapping to local name server</li></ul></li></ul><h5 id="TLD-and-authoritative-servers"><a href="#TLD-and-authoritative-servers" class="headerlink" title="TLD and authoritative servers"></a>TLD and authoritative servers</h5><p>top-level domain (TLD) servers: </p><ul><li>responsible for com, org, net, edu, aero, jobs, museums, and all top-level country domains, e.g.: uk, fr, ca, jp </li><li>Network Solutions maintains servers for .com TLD </li><li>Educate for .edu TLD</li></ul><p>authoritative DNS servers: </p><ul><li>organization’s own DNS server(s), providing authoritative hostname to IP mappings for organization’ s named hosts  </li><li>can be maintained by organization or service provider</li></ul><h5 id="Local-DNS-name-server"><a href="#Local-DNS-name-server" class="headerlink" title="Local DNS name server"></a>Local DNS name server</h5><ul><li>does not strictly belong to hierarchy </li><li>each ISP (residential ISP, company, university) has one <ul><li>also called “default name server”</li></ul></li><li>when host makes DNS query, query is sent to its  local DNS server <ul><li>has local cache of recent name-to-address translation pairs (but may be out of date!) </li><li>acts as proxy, forwards query into hierarchy</li></ul></li></ul><h5 id="DNS-name-resolution-example"><a href="#DNS-name-resolution-example" class="headerlink" title="DNS name  resolution example"></a>DNS name  resolution example</h5><p>host at cis.poly.edu  wants IP address for  gaia.cs.umass.edu</p><p>Type 1: iterated query</p><ul><li>contacted server replies with name of server to contact </li><li>“I don’t know this name, but ask this server ”</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327110905696.png" alt="image-20220327110905696" style="zoom: 33%;"><p>Type 2: recursive query</p><ul><li>puts burden of name resolution on contacted name server </li><li>heavy load at upper levels of hierarchy?</li></ul><h4 id="2-4-5-caching-updating-records"><a href="#2-4-5-caching-updating-records" class="headerlink" title="2.4.5 caching, updating records"></a>2.4.5 caching, updating records</h4><ul><li>once (any) name server learns mapping, it caches mapping<ul><li>cache entries timeout (disappear) after some time (TTL)</li><li>TLD servers typically cached in local name servers<ul><li><strong>thus root name servers not often visited</strong></li></ul></li></ul></li><li>cached entries may be out-of-date (best effort name-to-address translation!)<ul><li>if name host changes IP address, may not be known Internet-wide until all TTLs expire</li></ul></li><li>update&#x2F;notify mechanisms proposed IETF standard <ul><li>RFC 2136</li></ul></li></ul><h4 id="2-4-6-DNS-records"><a href="#2-4-6-DNS-records" class="headerlink" title="2.4.6 DNS records"></a>2.4.6 DNS records</h4><p>DNS: distributed database storing <u>resource records (RR)</u></p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327111423967.png" alt="image-20220327111423967" style="zoom:50%;"><p>type &#x3D; A </p><ul><li>name is hostname </li><li>value is IP address</li></ul><p>type &#x3D; NS</p><ul><li>name is domain (e.g.,  foo.com) </li><li>value is hostname of authoritative name server for this domain</li></ul><p>type &#x3D; CNAME</p><ul><li>name is alias name for some “canonical” (the real) name </li><li><a href="http://www.ibm.com/">www.ibm.com</a> is really servereast.backup2.ibm.com </li><li>value is canonical name</li></ul><p>type &#x3D; MX</p><ul><li>value is name of mail server associated with name</li></ul><h4 id="2-4-7-protocol-messages"><a href="#2-4-7-protocol-messages" class="headerlink" title="2.4.7 protocol, messages"></a>2.4.7 protocol, messages</h4><ul><li>query and reply messages, both with same message  format</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327111823333.png" alt="image-20220327111823333" style="zoom:50%;"><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327111912135.png" alt="image-20220327111912135" style="zoom:50%;"><h4 id><a href="#" class="headerlink" title></a></h4><h4 id="2-4-8-Inserting-records-into-DNS"><a href="#2-4-8-Inserting-records-into-DNS" class="headerlink" title="2.4.8 Inserting records into DNS"></a>2.4.8 Inserting records into DNS</h4><ul><li><p>example: new startup “Network Utopia” </p></li><li><p>register name networkuptopia.com at DNS registrar (e.g., Network Solutions)</p><ul><li>provide names, IP addresses of authoritative name server (primary and secondary) </li><li>registrar inserts two RRs into .com TLD server: (networkutopia.com, dns1.networkutopia.com, NS) (dns1.networkutopia.com, 212.212.212.1, A)</li></ul></li><li><p>create authoritative server type A record for  <a href="http://www.networkuptopia.com/">www.networkuptopia.com</a>; type MX record for  networkutopia.com</p></li></ul><h4 id="2-4-9-Attacking-DNS"><a href="#2-4-9-Attacking-DNS" class="headerlink" title="2.4.9 Attacking DNS"></a>2.4.9 Attacking DNS</h4><p>DDoS attacks</p><ul><li>bombard root servers with traffic <ul><li>not successful to date</li><li>traffic filtering </li><li>local DNS servers cache IPs of TLD servers, allowing root server bypass</li></ul></li><li>bombard TLD servers <ul><li>potentially more dangerous</li></ul></li></ul><p>redirect attacks</p><ul><li><p>man-in-middle </p><ul><li>Intercept queries</li></ul></li><li><p>DNS poisoning </p><ul><li>Send bogus relies to DNS server, which caches</li></ul></li></ul><p>exploit DNS for DDoS </p><ul><li>send queries with spoofed source address: target IP </li><li>requires amplification</li></ul><h3 id="2-5-P2P-applications"><a href="#2-5-P2P-applications" class="headerlink" title="2.5 P2P applications"></a>2.5 P2P applications</h3><h4 id="2-5-1-Pure-P2P-architecture"><a href="#2-5-1-Pure-P2P-architecture" class="headerlink" title="2.5.1 Pure P2P architecture"></a>2.5.1 Pure P2P architecture</h4><ul><li>no always-on server </li><li>arbitrary end systems directly communicate </li><li>peers are intermittently connected and change IP addresses</li></ul><p>examples:</p><ul><li>file distribution (Bit Torrent) </li><li>Streaming (KanKan) </li><li>sVoIP (Skype)</li></ul><h4 id="2-5-2-File-distribution-client-server-vs-P2P"><a href="#2-5-2-File-distribution-client-server-vs-P2P" class="headerlink" title="2.5.2 File distribution: client-server vs P2P"></a>2.5.2 File distribution: client-server vs P2P</h4><p><strong><u>Question: how much time to distribute file (size F) from one server to N peers?</u></strong></p><ul><li>peer upload&#x2F;download capacity is limited resource</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327112951097.png" alt="image-20220327112951097" style="zoom:50%;"><h5 id="File-distribution-time-client-server"><a href="#File-distribution-time-client-server" class="headerlink" title="File distribution time: client-server"></a>File distribution time: client-server</h5><ul><li><p>server transmission: must sequentially send (upload) N  file copies: </p><ul><li>time to send one copy: F&#x2F;us </li><li>time to send N copies: NF&#x2F;us</li></ul></li><li><p>client: each client must download file copy </p><ul><li>dmin &#x3D; min client download rate </li><li>min client download time: F&#x2F;dmin</li></ul></li><li><p>Time to distribute F to N clients using client-server approach:</p></li></ul><p>$$<br>D_{c-s} \ge max(\frac{NF}{u_s},\frac{F}{d_{min}})<br>$$</p><p><strong>The coefficient of the NF increases linearly in N</strong></p><h5 id="File-distribution-time-P2P"><a href="#File-distribution-time-P2P" class="headerlink" title="File distribution time: P2P"></a>File distribution time: P2P</h5><ul><li><p>server transmission: must upload at least one copy</p><ul><li>time to send one copy: F&#x2F;u</li></ul></li><li><p>client: each client must download file copy </p><ul><li>min client download time: F&#x2F;dmin</li></ul></li><li><p>clients: as aggregate must download NF bits</p><ul><li>max upload rate (limiting max download rate) is us + Sui</li></ul></li><li><p>time to distribute F to N clients using P2P approach<br>$$<br>D_{P2P} \ge max(\frac{F}{u_s},\frac{F}{d_{min}},\frac{NF}{u_s + \sum{u_i}})<br>$$</p></li></ul><p><strong>The coefficient of the NF increases linearly also in N, but so does, as each peer brings service capacity</strong></p><p> Comparison:</p><p>Hypothesize: client upload rate &#x3D; u, F&#x2F;u &#x3D; 1 hour, us &#x3D; 10u, dmin ≥ us</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327114828901.png" alt="image-20220327114828901" style="zoom:50%;"><h4 id="2-5-3-BitTorrent"><a href="#2-5-3-BitTorrent" class="headerlink" title="2.5.3  BitTorrent"></a>2.5.3  BitTorrent</h4><ul><li>file divided into 256Kb chunks </li><li>peers in torrent send&#x2F;receive file chunks</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327114927703.png" alt="image-20220327114927703" style="zoom: 33%;"><ul><li><p>peer joining torrent: </p><ul><li>has no chunks, but will accumulate them over time from other peers </li><li>registers with tracker to get list of peers, connects to subset of peers (“neighbors”)</li></ul></li><li><p>while downloading, peer uploads chunks to other peers </p></li><li><p>peer may change peers with whom it exchanges chunks </p></li><li><p>churn: peers may come and go </p></li><li><p>once peer has entire file, it may (selfishly) leave or (altruistically) remain in torrent</p></li></ul><h5 id="requesting-sending-file-chunks"><a href="#requesting-sending-file-chunks" class="headerlink" title="requesting, sending file chunks"></a>requesting, sending file chunks</h5><p>requesting chunks:</p><ul><li>at any given time, different peers have different subsets of file chunks </li><li>periodically, Alice asks each peer for list of chunks that they have </li><li>Alice requests missing chunks from peers, rarest first</li></ul><p>sending chunks: tit-for-tat</p><ul><li>Alice sends chunks to those four peers currently sending her chunks at highest rate<ul><li>other peers are choked by Alice (do not receive chunks from her) </li><li>re-evaluate top 4 every 10 secs</li></ul></li><li>every 30 secs: randomly select another peer, starts sending  chunks </li><li>“optimistically unchoke” this peer </li><li>newly chosen peer may join top 4</li></ul><h5 id="tit-for-tat"><a href="#tit-for-tat" class="headerlink" title="tit-for-tat"></a>tit-for-tat</h5><ol><li>Alice “optimistically unchokes” Bob </li><li>Alice becomes one of Bob’ s top-four providers; Bob reciprocates </li><li>Bob becomes one of Alice’ s top-four providers</li></ol><h3 id="2-6-video-streaming-and-content-distribution-networks-CDNs"><a href="#2-6-video-streaming-and-content-distribution-networks-CDNs" class="headerlink" title="2.6 video streaming and  content distribution  networks (CDNs)"></a>2.6 video streaming and  content distribution  networks (CDNs)</h3><h4 id="2-6-1-Video-Streaming-and-CDNs-context"><a href="#2-6-1-Video-Streaming-and-CDNs-context" class="headerlink" title="2.6.1 Video Streaming and CDNs: context"></a>2.6.1 Video Streaming and CDNs: context</h4><ul><li>video traffic: major consumer of Internet bandwidth <ul><li>Netflix, YouTube: 37%, 16% of downstream residential ISP traffic</li><li>~1B YouTube users, ~75M Netflix users</li></ul></li><li>challenge: scale - how to reach ~1B  users? <ul><li>single mega-video server won’t work (why?)</li></ul></li><li>challenge: </li><li>heterogeneity <ul><li>different users have different capabilities (e.g.,  wired versus mobile; bandwidth rich versus  bandwidth poor)</li></ul></li><li>solution: distributed, application-level  infrastructure</li></ul><h4 id="2-6-2Multimedia-video"><a href="#2-6-2Multimedia-video" class="headerlink" title="2.6.2Multimedia: video"></a>2.6.2Multimedia: video</h4><ul><li><p>video: sequence of images displayed at constant rate </p><ul><li>e.g., 24 images&#x2F;sec</li></ul></li><li><p>digital image: array of pixels </p><ul><li>each pixel represented  by bits</li></ul></li><li><p>coding: use redundancy within and between images to decrease # bits used to encode image </p><ul><li>spatial (within image) </li><li>temporal (from one image to next)</li></ul></li></ul><p>CBR: (constant bit rate):  video encoding rate fixed</p><p>VBR: (variable bit rate):  video encoding rate changes as amount of spatial, temporal coding changes </p><p>examples: </p><ul><li>MPEG1 (CD-ROM) 1.5  Mbps </li><li>MPEG2 (DVD) 3-6 Mbps </li><li>MPEG4 (often used in  Internet, &lt; 1 Mbps)</li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327134304886.png" alt="image-20220327134304886" style="zoom: 50%;"><h4 id="2-6-3-Streaming-multimedia-DASH"><a href="#2-6-3-Streaming-multimedia-DASH" class="headerlink" title="2.6.3 Streaming multimedia: DASH"></a>2.6.3 Streaming multimedia: DASH</h4><ul><li><p>DASH: Dynamic, Adaptive Streaming over HTTPs</p></li><li><p>server: </p><ul><li>divides video file into multiple chunks </li><li>each chunk stored, encoded at different rates  </li><li>manifest file: provides URLs for different chunks</li></ul></li><li><p>client: </p><ul><li>periodically measures server-to-client bandwidth </li><li>consulting manifest, requests one chunk at a time  </li><li>chooses maximum coding rate sustainable given current bandwidth </li><li>can choose different coding rates at different points in time (depending on available bandwidth at time)</li></ul></li><li><p>“intelligence” at client: client determines </p><ul><li>when to request chunk (so that buffer starvation, or overflow does not occur) </li><li>what encoding rate to request (higher quality when more bandwidth available) </li><li>where to request chunk (can request from URL server that is “close” to client or has high available bandwidth)</li></ul></li></ul><h4 id="2-6-4-Content-distribution-networks-CDNs"><a href="#2-6-4-Content-distribution-networks-CDNs" class="headerlink" title="2.6.4 Content distribution networks(CDNs)"></a>2.6.4 Content distribution networks(CDNs)</h4><ul><li><p>challenge: how to stream content (selected from millions of videos) to hundreds of thousands of simultaneous users?</p></li><li><p>option 1: single, large “mega-server”</p><ul><li>single point of failure </li><li>point of network congestion </li><li>long path to distant clients </li><li>multiple copies of video sent over outgoing link</li></ul></li><li><p>option 2: store&#x2F;serve multiple copies of videos at multiple geographically distributed sites (CDN)</p><ul><li>enter deep: push CDN servers deep into many access  networks <ul><li>close to users </li><li>used by Akamai, 1700 locations</li></ul></li><li>bring home: smaller number (10’s) of larger clusters in POPs near (but not within) access networks</li><li>used by Limelight</li></ul></li><li><p>CDN: stores copies of content at CDN nodes </p><ul><li>e.g. Netflix stores copies of MadMen</li></ul></li><li><p>subscriber requests content from CDN:</p><ul><li>directed to nearby copy, retrieves content </li><li>may choose different copy if network path congested</li></ul></li></ul><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327135820577.png" alt="image-20220327135820577" style="zoom:50%;"><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327135927172.png" alt="image-20220327135927172" style="zoom:50%;"><ul><li>OTT challenges: coping with a congested Internet<ul><li>from which CDN node to retrieve content?</li><li>viewer behavior in presence of congestion? </li><li>what content to place in which CDN node?</li></ul></li></ul><h5 id="closer-look"><a href="#closer-look" class="headerlink" title="closer look"></a>closer look</h5><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327140133656.png" alt="image-20220327140133656" style="zoom:50%;"><p>case: Netflix</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327140216236.png" alt="image-20220327140216236" style="zoom:50%;"><h3 id="2-7-socket-programming-with-UDP-and-TCP"><a href="#2-7-socket-programming-with-UDP-and-TCP" class="headerlink" title="2.7 socket programming  with UDP and TCP"></a>2.7 socket programming  with UDP and TCP</h3><h4 id="2-7-1-Socket-programming"><a href="#2-7-1-Socket-programming" class="headerlink" title="2.7.1 Socket programming"></a>2.7.1 Socket programming</h4><p>goal: learn how to build client&#x2F;server applications that communicate using sockets、</p><p>socket: door between application process and end-end-transport protocol</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327140604126.png" alt="image-20220327140604126" style="zoom:50%;"><p>Two socket types for two transport services: </p><ul><li>UDP: unreliable datagram </li><li>TCP: reliable, byte stream-oriented</li></ul><p>Application Example:</p><ol><li>client reads a line of characters (data) from its keyboard and sends data to server </li><li>server receives the data and converts characters to uppercase </li><li>server sends modified data to client </li><li>client receives modified data and displays line on its screen</li></ol><h4 id="2-7-2-UDP"><a href="#2-7-2-UDP" class="headerlink" title="2.7.2  UDP"></a>2.7.2  UDP</h4><p>UDP: no “connection” between client &amp; server</p><ul><li>no handshaking before sending data </li><li>sender explicitly attaches IP destination address and port # to each packet </li><li>receiver extracts sender IP address and port# from received packet</li></ul><p>UDP: transmitted data may be lost or received out-of-order</p><p>Application viewpoint:</p><ul><li>UDP provides unreliable transfer of groups of bytes (“datagrams”) between client and server</li></ul><p>Client&#x2F;server socket interaction: UDP</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327141318253.png" alt="image-20220327141318253" style="zoom: 50%;"><p>Example app: UDP client</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327141437609.png" alt="image-20220327141437609" style="zoom: 33%;"><p>Example app: UDP server</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327141551327.png" alt="image-20220327141551327" style="zoom: 33%;"><h4 id="-1"><a href="#-1" class="headerlink" title></a></h4><h4 id="2-7-3-TCP"><a href="#2-7-3-TCP" class="headerlink" title="2.7.3  TCP"></a>2.7.3  TCP</h4><ul><li><p>client must contact server </p><ul><li><p>server process must first be running </p></li><li><p>server must have created socket (door) that welcomes client’s contact</p></li></ul></li><li><p>client contacts server by:</p><ul><li>Creating TCP socket, specifying IP address, port number of server process </li><li>when client creates socket: client TCP establishes connection to server TCP</li><li>when contacted by client, server TCP creates new socket for server process to communicate with that particular client <ul><li>allows server to talk with multiple clients </li><li>source port numbers used to distinguish clients (more in Chap 3)</li></ul></li></ul></li><li><p>application viewpoint:</p><ul><li>TCP provides reliable, in-order byte-stream transfer (“pipe”)  between client and server</li></ul></li></ul><p>Client&#x2F;server socket interaction: TCP</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327142056192.png" alt="image-20220327142056192" style="zoom: 50%;"><p>Example app: TCP client</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327142231464.png" alt="image-20220327142231464" style="zoom: 33%;"><p>Example app: TCP server</p><img src="https://blogpicture01.oss-cn-beijing.aliyuncs.com/img/image-20220327142258946.png" alt="image-20220327142258946" style="zoom: 33%;">]]></content>
      
      
      <categories>
          
          <category> computer network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>servelet学习</title>
      <link href="/2022/02/23/servelet/"/>
      <url>/2022/02/23/servelet/</url>
      
        <content type="html"><![CDATA[<h1 id="javaweb"><a href="#javaweb" class="headerlink" title="javaweb"></a>javaweb</h1><p>Tomcat: web 应用服务器</p><h2 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h2><p>web开发基石，与平台无关的服务器组件，负责与客户端进行通信</p><p>servlet本身是一堆接口，自定义一个类，并实现servlet</p><p>客户端无法直接访问servlet，只能在服务器端添加映射才能访问</p><p>映射需要开发者手动配置，有两种：</p><ul><li><p>基于xml的配置方式，直接手写映射</p></li><li><p>基于注解的方式，在需要映射的类名上方使用@添加注释</p><p>上述两种配置方法结果一致</p></li></ul><h3 id="1-servlet功能"><a href="#1-servlet功能" class="headerlink" title="1.servlet功能"></a>1.servlet功能</h3><ul><li>创建并返回给予客户请求的动态页面</li><li>与数据库进行通信</li></ul><h3 id="2-servlet生命周期"><a href="#2-servlet生命周期" class="headerlink" title="2.servlet生命周期"></a>2.servlet生命周期</h3><ol><li><p>当浏览器访问servle的时候，Tomcat会查询当前servlet的实例化对象是否存在，<u>若不存在，则通过反射机制动态创建对象（运行时类，获取类名-》获取构造器-》调用构造器创建对象， 若存在则直接执行第三步操作）</u></p></li><li><p>调用init方法完成初始化操作</p></li><li><p>调用service方法完成业务逻辑操作</p></li><li><p>关闭Tomcat时，调用destroy方法，释放当前占用资源</p><p>​    servlet生命周期方法：无参构造函数，init，service，destroy</p></li></ol><h3 id="3-servletconfig"><a href="#3-servletconfig" class="headerlink" title="3.servletconfig"></a>3.servletconfig</h3><p>该接口用来描述servlet的基本信息</p><ul><li>getservletname()  获取全类名</li><li>getinitparameter(string key)  过去init参数值(web.xml)</li><li>getinitparametername() 返回所有的initparameter的name值，用于遍历所有初始化值</li><li>getservletcontent 返回servletcontext，它是servlet的上下文，整个servlet的管理者</li></ul><h4 id="servletconfig与servletcontext的区别："><a href="#servletconfig与servletcontext的区别：" class="headerlink" title="servletconfig与servletcontext的区别："></a>servletconfig与servletcontext的区别：</h4><p>config作用于某个servlet对象，context作用于整个web应用</p><p>config具体实例，context全局</p><h3 id="4-servlet的层次结构"><a href="#4-servlet的层次结构" class="headerlink" title="4.servlet的层次结构"></a>4.servlet的层次结构</h3><p>servlet-》genericservlet（屏蔽常用方法）-》Httpservlet（处理HTTP请求）</p><ul><li>Genericservlet实现了servlet接口，同时为它的子类屏蔽不常用方法，子类只需要重写service方法，HTTPservice方法即可</li><li>HTTPservlet继承Genericservlet，根据请求类型进行分发处理，GET进入doGET方法等</li></ul><p>开发者自定义servlet只需继承HTTPservlet即可</p><h4 id="HTTP请求类型："><a href="#HTTP请求类型：" class="headerlink" title="HTTP请求类型："></a>HTTP请求类型：</h4><ul><li>Get 读</li><li>post 存</li><li>put 放</li><li>delete 删</li></ul><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><p>PS：jsp会将写入的代码转化为servlet，在调用write（）方法将HTML内容逐行输出</p><p> JSP本质上就是一个servlet，jsp主要负责于用户交互，将最终的界面全部呈现给用户，即HTML+CSS+JS混合文件</p><p> Tomcat会将jsp转化为servlet，将代码逐行输出，所有信息组合成完整的HTML代码</p><h3 id="1-转换流程"><a href="#1-转换流程" class="headerlink" title="1.转换流程"></a>1.转换流程</h3><p>​              <img src="/C:/Users\khdiu\AppData\Roaming\Typora\typora-user-images\image-20211126203817591.png" alt="image-20211126203817591" style="zoom: 50%;"></p><h3 id="2-HTML中嵌入JAVA程序"><a href="#2-HTML中嵌入JAVA程序" class="headerlink" title="2.HTML中嵌入JAVA程序"></a>2.HTML中嵌入JAVA程序</h3><ol><li>jsp脚本：执行JAVA代码用&lt;% code %&gt;单标签</li><li>jsp声明：定义JAVA方法用&lt;%! code%&gt;单标签</li><li>jsp表达式：把JAVA对象直接输出到HTML页中&lt;%&#x3D; java变量%&gt;</li></ol><h3 id="3-jsp内置对象"><a href="#3-jsp内置对象" class="headerlink" title="3.jsp内置对象"></a>3.jsp内置对象</h3><ul><li>request 表示一次请求 Httpservletservice</li><li>response 表示一次响应 Httpservletresponse</li><li>pagecontext 页面上下文 获取页面信息 </li><li>session 表示一次会话 保存用户信息 Httpsession</li><li>applocation 表示当前web应用，全局对象，保存所有用户共享信息 servletcontext</li><li>config 当前就jsp对应servlet的servletconfig对象，获取当前的servlet信息</li><li>out 向浏览器输出数据 jspwriter</li><li>page 当前jsp对应的servlet对象 servlet</li><li>exception 表示jsp页面发生的异常</li></ul><h3 id="4-request常用方法"><a href="#4-request常用方法" class="headerlink" title="4.request常用方法"></a>4.request常用方法</h3><ol><li>string getparameter(string key)获取从客户端传来的参数</li><li>void setAttribute(string key,objerct value) 通过键值对</li><li>string getAttribute(string key) 源JSP调用getrequestDispatcher(jsp名).forward(request,response)将对象传递给其他的JSP，之后由其他JSP处理请求</li><li>requestDispatcher ，getrequestdispatcher(string path)返回一个requestdispatcher对象</li><li>string[] getparametervalues()获取客户端传来的多个同名参数</li><li>void setcharacterEncoding(string charset)指定每个请求的编码</li></ol><h3 id="5-response常用方法"><a href="#5-response常用方法" class="headerlink" title="5.response常用方法"></a>5.response常用方法</h3><p>senddirect(string path)重定向，页面之间的跳转</p><p><u>转发是将同请求传递给下个页面，重定向是创建一个新的请求给下一个页面，之前的请求结束生命周期</u></p><ul><li>转发：同一个请求在服务器之间的传毒，地址栏不变，也叫服务器跳转</li><li>重定向：由客户端发送一个新的请求来访问跳转后的目标资源，地址栏改变，也叫客户端跳转</li></ul><p><strong>如果两个页面之间需要通过request来传值，则必须使用转发，不能使用重定向</strong></p><p>如：用户名登录，则需要将用户名传递给下一个页面</p><h2 id="session会话"><a href="#session会话" class="headerlink" title="session会话"></a>session会话</h2><p><u>服务器无法识别每一次HTTP请求的出处(<strong>无法识别来自哪个终端</strong>)，它只会接受到一个请求信号，必须有一种技术让服务器知道请求来自哪，这就是会话技术</u></p><h3 id="会话："><a href="#会话：" class="headerlink" title="会话："></a>会话：</h3><p>​      就是客户端与服务器之间发生的一系列连续的请求和响应的过程，<strong>打开浏览器到关闭浏览器进行的过程操作</strong></p><h3 id="会话状态："><a href="#会话状态：" class="headerlink" title="会话状态："></a>会话状态：</h3><p>指服务器和浏览器在会话过程中产生的状态信息，借助于会话状态，服务器能够把属于同一次会话的一系列请求和响应关联起来</p><p>属于同一次会话的请求共用一个标识符，即session id（同一浏览器多个窗口属于同一会话，即共用同一id，关闭浏览器后再次打开，id刷新）</p><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><ul><li>string getid() 获取session id</li><li>vodi setmaxnactiveinterval（） 设置session失效时间，单位秒</li><li>int getmaxinactiveinterval 获取当前session的失效时间</li><li>void invalidate 设置session失效时间</li><li>void setattribute（string key，object value） 通过键值对存储数据</li><li>object getattribute(string key) 通过键值对获取对应数据</li><li>object removeattribute(string key) 通过键值对删除对应数据</li></ul><p><strong>session生命周期比request长，故用session存储用户名与密码</strong></p><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><p>针对浏览器，不同浏览器使用不同的cookie</p><p>cookie是服务端在HTTP响应中附带传给浏览器的一个小文本文件，一旦浏览器保存了某个cookie，在之后的请求与响应过程中，会将此cookie来回传递，这样就可以通过cookie这个载体完成客户端与服务端的交互</p><p><strong>cookie本身也是javax.servlet中的类</strong></p><ul><li><p>创建cookie</p><p>调用responseaddcookie()将cookie写入客户端</p></li><li><p>读取cookie</p><p>request.getcookies()</p></li></ul><h3 id="cookie常用方法"><a href="#cookie常用方法" class="headerlink" title="cookie常用方法"></a>cookie常用方法</h3><p>void setmaxage(int age) 设置cookie的有效时间，单位秒</p><p>int getmaxage() 获取cookie的有效时间</p><p>string getName() 获取cookie的name</p><p>string getvalue() 获取cookie的value</p><h3 id="cookie与session的区别"><a href="#cookie与session的区别" class="headerlink" title="cookie与session的区别"></a>cookie与session的区别</h3><p>session：存在服务器 保存object类型</p><p>cookie：存在浏览器，保存的数据是string类型</p><p>安全： <strong>session保存重要内容，cookie保存不重要信息</strong></p>]]></content>
      
      
      <categories>
          
          <category> javaweb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/22/hello-world/"/>
      <url>/2022/02/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> common </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
